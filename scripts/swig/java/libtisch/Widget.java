/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.36
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package libtisch;

public class Widget {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Widget(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Widget obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      libtischJNI.delete_Widget(swigCPtr);
    }
    swigCPtr = 0;
  }

  public Vector glOutline2d(double ox, double oy, int push) {
    return new Vector(libtischJNI.Widget_glOutline2d__SWIG_0(swigCPtr, this, ox, oy, push), true);
  }

  public Vector glOutline2d(double ox, double oy) {
    return new Vector(libtischJNI.Widget_glOutline2d__SWIG_1(swigCPtr, this, ox, oy), true);
  }

  public void outline() {
    libtischJNI.Widget_outline(swigCPtr, this);
  }

  public void update(SWIGTYPE_p_std__ostream ost, Widget target) {
    libtischJNI.Widget_update__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(ost), Widget.getCPtr(target), target);
  }

  public void update(SWIGTYPE_p_std__ostream ost) {
    libtischJNI.Widget_update__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(ost));
  }

  public void update() {
    libtischJNI.Widget_update__SWIG_2(swigCPtr, this);
  }

  public void raise(Widget widget) {
    libtischJNI.Widget_raise__SWIG_0(swigCPtr, this, Widget.getCPtr(widget), widget);
  }

  public void raise() {
    libtischJNI.Widget_raise__SWIG_1(swigCPtr, this);
  }

  public void transform(Vector vec, int abs, int local) {
    libtischJNI.Widget_transform__SWIG_0(swigCPtr, this, Vector.getCPtr(vec), vec, abs, local);
  }

  public void transform(Vector vec, int abs) {
    libtischJNI.Widget_transform__SWIG_1(swigCPtr, this, Vector.getCPtr(vec), vec, abs);
  }

  public void transform(Vector vec) {
    libtischJNI.Widget_transform__SWIG_2(swigCPtr, this, Vector.getCPtr(vec), vec);
  }

  public void texture(RGBATexture tex) {
    libtischJNI.Widget_texture(swigCPtr, this, RGBATexture.getCPtr(tex), tex);
  }

  public void draw() {
    libtischJNI.Widget_draw(swigCPtr, this);
  }

  public void action(Gesture gesture) {
    libtischJNI.Widget_action(swigCPtr, this, Gesture.getCPtr(gesture), gesture);
  }

}
