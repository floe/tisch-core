/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_libtisch_WRAP_H_
#define SWIG_libtisch_WRAP_H_

class SwigDirector_FeatureBase : public FeatureBase, public Swig::Director {

public:
    SwigDirector_FeatureBase(int _tf = 0);
    virtual ~SwigDirector_FeatureBase();
    virtual char const *name() const;
    virtual void load(InputState &state);
    virtual int next();
    virtual void serialize(std::ostream &s);
    virtual void unserialize(std::istream &s);
    using FeatureBase::typeflags;

    typedef char * (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(void *);
    typedef int (SWIGSTDCALL* SWIG_Callback2_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback3_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback4_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackname, SWIG_Callback1_t callbackload, SWIG_Callback2_t callbacknext, SWIG_Callback3_t callbackserialize, SWIG_Callback4_t callbackunserialize);

private:
    SWIG_Callback0_t swig_callbackname;
    SWIG_Callback1_t swig_callbackload;
    SWIG_Callback2_t swig_callbacknext;
    SWIG_Callback3_t swig_callbackserialize;
    SWIG_Callback4_t swig_callbackunserialize;
    void swig_init_callbacks();
};

class SwigDirector_Widget : public Widget, public Swig::Director {

public:
    SwigDirector_Widget(int _w, int _h, int _x = 0, int _y = 0, double _angle = 0.0, RGBATexture *_tex = 0, int _regflags = (1 << INPUT_TYPE_COUNT) -1);
    virtual ~SwigDirector_Widget();
    virtual void outline();
    virtual void update(Widget *target = 0);
    virtual void doUpdate(Widget *target = 0, std::ostream *ost = 0);
    virtual void raise(Widget *widget = 0);
    virtual void draw();
    virtual void action(Gesture *gesture);
    using Widget::paint_tex;
    using Widget::enter;
    using Widget::paint;
    using Widget::leave;
    using Widget::mytex;
    using Widget::mycolor;
    using Widget::shadow;
    using Widget::region;
    using Widget::parent;
    using Widget::regstream;
    using Widget::m_model;
    using Widget::w;
    using Widget::h;
    using Widget::x;
    using Widget::y;
    using Widget::sx;
    using Widget::sy;
    using Widget::angle;
    using Widget::asx;
    using Widget::asy;
    using Widget::absangle;
    using Widget::abspos;

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback3_t)(void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback4_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback5_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback6_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback7_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback8_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback9_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackoutline, SWIG_Callback1_t callbackupdate__SWIG_0, SWIG_Callback2_t callbackupdate__SWIG_1, SWIG_Callback3_t callbackdoUpdate__SWIG_0, SWIG_Callback4_t callbackdoUpdate__SWIG_1, SWIG_Callback5_t callbackdoUpdate__SWIG_2, SWIG_Callback6_t callbackraise__SWIG_0, SWIG_Callback7_t callbackraise__SWIG_1, SWIG_Callback8_t callbackdraw, SWIG_Callback9_t callbackaction);

private:
    SWIG_Callback0_t swig_callbackoutline;
    SWIG_Callback1_t swig_callbackupdate__SWIG_0;
    SWIG_Callback2_t swig_callbackupdate__SWIG_1;
    SWIG_Callback3_t swig_callbackdoUpdate__SWIG_0;
    SWIG_Callback4_t swig_callbackdoUpdate__SWIG_1;
    SWIG_Callback5_t swig_callbackdoUpdate__SWIG_2;
    SWIG_Callback6_t swig_callbackraise__SWIG_0;
    SWIG_Callback7_t swig_callbackraise__SWIG_1;
    SWIG_Callback8_t swig_callbackdraw;
    SWIG_Callback9_t swig_callbackaction;
    void swig_init_callbacks();
};

class SwigDirector_Container : public Container, public Swig::Director {

public:
    SwigDirector_Container(int w, int h, int x, int y, double angle = 0.0, RGBATexture *tex = 0, int mode = 0);
    virtual ~SwigDirector_Container();
    virtual void outline();
    virtual void update(Widget *target = 0);
    virtual void doUpdate(Widget *target = 0, std::ostream *ost = 0);
    virtual void raise(Widget *widget = 0);
    virtual void draw();
    virtual void action(Gesture *gesture);
    virtual void tap(Vector vec, int id);
    virtual void release();

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback3_t)(void *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback4_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback5_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback6_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback7_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback8_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback9_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback10_t)(void *, int);
    typedef void (SWIGSTDCALL* SWIG_Callback11_t)();
    void swig_connect_director(SWIG_Callback0_t callbackoutline, SWIG_Callback1_t callbackupdate__SWIG_0, SWIG_Callback2_t callbackupdate__SWIG_1, SWIG_Callback3_t callbackdoUpdate__SWIG_0, SWIG_Callback4_t callbackdoUpdate__SWIG_1, SWIG_Callback5_t callbackdoUpdate__SWIG_2, SWIG_Callback6_t callbackraise__SWIG_0, SWIG_Callback7_t callbackraise__SWIG_1, SWIG_Callback8_t callbackdraw, SWIG_Callback9_t callbackaction, SWIG_Callback10_t callbacktap, SWIG_Callback11_t callbackrelease);

private:
    SWIG_Callback0_t swig_callbackoutline;
    SWIG_Callback1_t swig_callbackupdate__SWIG_0;
    SWIG_Callback2_t swig_callbackupdate__SWIG_1;
    SWIG_Callback3_t swig_callbackdoUpdate__SWIG_0;
    SWIG_Callback4_t swig_callbackdoUpdate__SWIG_1;
    SWIG_Callback5_t swig_callbackdoUpdate__SWIG_2;
    SWIG_Callback6_t swig_callbackraise__SWIG_0;
    SWIG_Callback7_t swig_callbackraise__SWIG_1;
    SWIG_Callback8_t swig_callbackdraw;
    SWIG_Callback9_t swig_callbackaction;
    SWIG_Callback10_t swig_callbacktap;
    SWIG_Callback11_t swig_callbackrelease;
    void swig_init_callbacks();
};


#endif
