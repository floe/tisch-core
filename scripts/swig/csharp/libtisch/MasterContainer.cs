/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.36
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class MasterContainer : Container {
  private HandleRef swigCPtr;

  internal MasterContainer(IntPtr cPtr, bool cMemoryOwn) : base(libtischPINVOKE.MasterContainerUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(MasterContainer obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~MasterContainer() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        libtischPINVOKE.delete_MasterContainer(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public MasterContainer(int w, int h, string target) : this(libtischPINVOKE.new_MasterContainer__SWIG_0(w, h, target), true) {
  }

  public MasterContainer(int w, int h) : this(libtischPINVOKE.new_MasterContainer__SWIG_1(w, h), true) {
  }

  public int process() {
    int ret = libtischPINVOKE.MasterContainer_process(swigCPtr);
    return ret;
  }

  public override void doUpdate(Widget target, SWIGTYPE_p_std__ostream ost) {
    libtischPINVOKE.MasterContainer_doUpdate__SWIG_0(swigCPtr, Widget.getCPtr(target), SWIGTYPE_p_std__ostream.getCPtr(ost));
  }

  public override void doUpdate(Widget target) {
    libtischPINVOKE.MasterContainer_doUpdate__SWIG_1(swigCPtr, Widget.getCPtr(target));
  }

  public override void doUpdate() {
    libtischPINVOKE.MasterContainer_doUpdate__SWIG_2(swigCPtr);
  }

  public void adjust(int w, int h) {
    libtischPINVOKE.MasterContainer_adjust(swigCPtr, w, h);
  }

}
