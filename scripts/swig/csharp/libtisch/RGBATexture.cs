/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.36
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class RGBATexture : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal RGBATexture(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(RGBATexture obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~RGBATexture() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        libtischPINVOKE.delete_RGBATexture(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public RGBATexture(SWIGTYPE_p_GLint w, SWIGTYPE_p_GLint h, SWIGTYPE_p_GLenum filter, SWIGTYPE_p_GLenum mode) : this(libtischPINVOKE.new_RGBATexture__SWIG_0(SWIGTYPE_p_GLint.getCPtr(w), SWIGTYPE_p_GLint.getCPtr(h), SWIGTYPE_p_GLenum.getCPtr(filter), SWIGTYPE_p_GLenum.getCPtr(mode)), true) {
    if (libtischPINVOKE.SWIGPendingException.Pending) throw libtischPINVOKE.SWIGPendingException.Retrieve();
  }

  public RGBATexture(SWIGTYPE_p_GLint w, SWIGTYPE_p_GLint h, SWIGTYPE_p_GLenum filter) : this(libtischPINVOKE.new_RGBATexture__SWIG_1(SWIGTYPE_p_GLint.getCPtr(w), SWIGTYPE_p_GLint.getCPtr(h), SWIGTYPE_p_GLenum.getCPtr(filter)), true) {
    if (libtischPINVOKE.SWIGPendingException.Pending) throw libtischPINVOKE.SWIGPendingException.Retrieve();
  }

  public RGBATexture(SWIGTYPE_p_GLint w, SWIGTYPE_p_GLint h) : this(libtischPINVOKE.new_RGBATexture__SWIG_2(SWIGTYPE_p_GLint.getCPtr(w), SWIGTYPE_p_GLint.getCPtr(h)), true) {
    if (libtischPINVOKE.SWIGPendingException.Pending) throw libtischPINVOKE.SWIGPendingException.Retrieve();
  }

  public RGBATexture(string pngfile, SWIGTYPE_p_GLenum filter, SWIGTYPE_p_GLenum mode) : this(libtischPINVOKE.new_RGBATexture__SWIG_3(pngfile, SWIGTYPE_p_GLenum.getCPtr(filter), SWIGTYPE_p_GLenum.getCPtr(mode)), true) {
    if (libtischPINVOKE.SWIGPendingException.Pending) throw libtischPINVOKE.SWIGPendingException.Retrieve();
  }

  public RGBATexture(string pngfile, SWIGTYPE_p_GLenum filter) : this(libtischPINVOKE.new_RGBATexture__SWIG_4(pngfile, SWIGTYPE_p_GLenum.getCPtr(filter)), true) {
    if (libtischPINVOKE.SWIGPendingException.Pending) throw libtischPINVOKE.SWIGPendingException.Retrieve();
  }

  public RGBATexture(string pngfile) : this(libtischPINVOKE.new_RGBATexture__SWIG_5(pngfile), true) {
  }

  public void render(SWIGTYPE_p_GLint texels, SWIGTYPE_p_GLenum where, SWIGTYPE_p_GLfloat z) {
    libtischPINVOKE.RGBATexture_render__SWIG_0(swigCPtr, SWIGTYPE_p_GLint.getCPtr(texels), SWIGTYPE_p_GLenum.getCPtr(where), SWIGTYPE_p_GLfloat.getCPtr(z));
    if (libtischPINVOKE.SWIGPendingException.Pending) throw libtischPINVOKE.SWIGPendingException.Retrieve();
  }

  public void render(SWIGTYPE_p_GLint texels, SWIGTYPE_p_GLenum where) {
    libtischPINVOKE.RGBATexture_render__SWIG_1(swigCPtr, SWIGTYPE_p_GLint.getCPtr(texels), SWIGTYPE_p_GLenum.getCPtr(where));
    if (libtischPINVOKE.SWIGPendingException.Pending) throw libtischPINVOKE.SWIGPendingException.Retrieve();
  }

  public void render(SWIGTYPE_p_GLint texels) {
    libtischPINVOKE.RGBATexture_render__SWIG_2(swigCPtr, SWIGTYPE_p_GLint.getCPtr(texels));
    if (libtischPINVOKE.SWIGPendingException.Pending) throw libtischPINVOKE.SWIGPendingException.Retrieve();
  }

  public void render() {
    libtischPINVOKE.RGBATexture_render__SWIG_3(swigCPtr);
  }

  public void bind(SWIGTYPE_p_GLenum where) {
    libtischPINVOKE.RGBATexture_bind__SWIG_0(swigCPtr, SWIGTYPE_p_GLenum.getCPtr(where));
    if (libtischPINVOKE.SWIGPendingException.Pending) throw libtischPINVOKE.SWIGPendingException.Retrieve();
  }

  public void bind() {
    libtischPINVOKE.RGBATexture_bind__SWIG_1(swigCPtr);
  }

  public void release() {
    libtischPINVOKE.RGBATexture_release(swigCPtr);
  }

  public SWIGTYPE_p_GLuint get() {
    SWIGTYPE_p_GLuint ret = new SWIGTYPE_p_GLuint(libtischPINVOKE.RGBATexture_get(swigCPtr), true);
    return ret;
  }

  public SWIGTYPE_p_GLint width(int orig) {
    SWIGTYPE_p_GLint ret = new SWIGTYPE_p_GLint(libtischPINVOKE.RGBATexture_width__SWIG_0(swigCPtr, orig), true);
    return ret;
  }

  public SWIGTYPE_p_GLint width() {
    SWIGTYPE_p_GLint ret = new SWIGTYPE_p_GLint(libtischPINVOKE.RGBATexture_width__SWIG_1(swigCPtr), true);
    return ret;
  }

  public SWIGTYPE_p_GLint height(int orig) {
    SWIGTYPE_p_GLint ret = new SWIGTYPE_p_GLint(libtischPINVOKE.RGBATexture_height__SWIG_0(swigCPtr, orig), true);
    return ret;
  }

  public SWIGTYPE_p_GLint height() {
    SWIGTYPE_p_GLint ret = new SWIGTYPE_p_GLint(libtischPINVOKE.RGBATexture_height__SWIG_1(swigCPtr), true);
    return ret;
  }

  public void load(SWIGTYPE_p_GLvoid data, SWIGTYPE_p_GLenum data_format, SWIGTYPE_p_GLenum data_type) {
    libtischPINVOKE.RGBATexture_load__SWIG_0(swigCPtr, SWIGTYPE_p_GLvoid.getCPtr(data), SWIGTYPE_p_GLenum.getCPtr(data_format), SWIGTYPE_p_GLenum.getCPtr(data_type));
    if (libtischPINVOKE.SWIGPendingException.Pending) throw libtischPINVOKE.SWIGPendingException.Retrieve();
  }

  public void load(string pngfile) {
    libtischPINVOKE.RGBATexture_load__SWIG_1(swigCPtr, pngfile);
  }

  public void load(SWIGTYPE_p_IntensityImage img) {
    libtischPINVOKE.RGBATexture_load__SWIG_2(swigCPtr, SWIGTYPE_p_IntensityImage.getCPtr(img));
  }

  public void load(SWIGTYPE_p_RGBImage img) {
    libtischPINVOKE.RGBATexture_load__SWIG_3(swigCPtr, SWIGTYPE_p_RGBImage.getCPtr(img));
  }

  public void read(SWIGTYPE_p_GLvoid data) {
    libtischPINVOKE.RGBATexture_read(swigCPtr, SWIGTYPE_p_GLvoid.getCPtr(data));
  }

}
