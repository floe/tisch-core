/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package libtisch;

public class GLUTWindow {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected GLUTWindow(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GLUTWindow obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtischJNI.delete_GLUTWindow(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public GLUTWindow(int w, int h, String title, int mode) {
    this(libtischJNI.new_GLUTWindow__SWIG_0(w, h, title, mode), true);
  }

  public GLUTWindow(int w, int h, String title) {
    this(libtischJNI.new_GLUTWindow__SWIG_1(w, h, title), true);
  }

  public void show(SWIGTYPE_p_RGBImage img, int x, int y) {
    libtischJNI.GLUTWindow_show__SWIG_0(swigCPtr, this, SWIGTYPE_p_RGBImage.getCPtr(img), x, y);
  }

  public void show(SWIGTYPE_p_ShortImage img, int x, int y) {
    libtischJNI.GLUTWindow_show__SWIG_1(swigCPtr, this, SWIGTYPE_p_ShortImage.getCPtr(img), x, y);
  }

  public void show(SWIGTYPE_p_IntensityImage img, int x, int y) {
    libtischJNI.GLUTWindow_show__SWIG_2(swigCPtr, this, SWIGTYPE_p_IntensityImage.getCPtr(img), x, y);
  }

  public void print(String text, int x, int y) {
    libtischJNI.GLUTWindow_print(swigCPtr, this, text, x, y);
  }

  public void drawRectangleBackground(int x, int y, int size_x, int size_y, int border) {
    libtischJNI.GLUTWindow_drawRectangleBackground(swigCPtr, this, x, y, size_x, size_y, border);
  }

  public void drawPolygon(SWIGTYPE_p_std__vectorT__VectorT_int_t_p_t points, boolean invert, int height) {
    libtischJNI.GLUTWindow_drawPolygon__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__vectorT__VectorT_int_t_p_t.getCPtr(points), invert, height);
  }

  public void drawPolygon(SWIGTYPE_p_std__vectorT__VectorT_int_t_p_t points, boolean invert) {
    libtischJNI.GLUTWindow_drawPolygon__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__vectorT__VectorT_int_t_p_t.getCPtr(points), invert);
  }

  public void drawPolygon(SWIGTYPE_p_std__vectorT__VectorT_int_t_p_t points) {
    libtischJNI.GLUTWindow_drawPolygon__SWIG_2(swigCPtr, this, SWIGTYPE_p_std__vectorT__VectorT_int_t_p_t.getCPtr(points));
  }

  public void title(String text) {
    libtischJNI.GLUTWindow_title(swigCPtr, this, text);
  }

  public void clear(float red, float green, float blue, float alpha) {
    libtischJNI.GLUTWindow_clear__SWIG_0(swigCPtr, this, red, green, blue, alpha);
  }

  public void clear(float red, float green, float blue) {
    libtischJNI.GLUTWindow_clear__SWIG_1(swigCPtr, this, red, green, blue);
  }

  public void clear(float red, float green) {
    libtischJNI.GLUTWindow_clear__SWIG_2(swigCPtr, this, red, green);
  }

  public void clear(float red) {
    libtischJNI.GLUTWindow_clear__SWIG_3(swigCPtr, this, red);
  }

  public void clear() {
    libtischJNI.GLUTWindow_clear__SWIG_4(swigCPtr, this);
  }

  public void mode2D() {
    libtischJNI.GLUTWindow_mode2D(swigCPtr, this);
  }

  public void swap() {
    libtischJNI.GLUTWindow_swap(swigCPtr, this);
  }

  public void run() {
    libtischJNI.GLUTWindow_run(swigCPtr, this);
  }

  public int getWidth() {
    return libtischJNI.GLUTWindow_getWidth(swigCPtr, this);
  }

  public int getHeight() {
    return libtischJNI.GLUTWindow_getHeight(swigCPtr, this);
  }

  public void idle() {
    libtischJNI.GLUTWindow_idle(swigCPtr, this);
  }

  public void display() {
    libtischJNI.GLUTWindow_display(swigCPtr, this);
  }

  public void reshape(int w, int h) {
    libtischJNI.GLUTWindow_reshape(swigCPtr, this, w, h);
  }

  public void keyboard(int key, int x, int y) {
    libtischJNI.GLUTWindow_keyboard(swigCPtr, this, key, x, y);
  }

  public void mouse(int num, int button, int state, int x, int y) {
    libtischJNI.GLUTWindow_mouse(swigCPtr, this, num, button, state, x, y);
  }

  public void passive(int num, int x, int y) {
    libtischJNI.GLUTWindow_passive(swigCPtr, this, num, x, y);
  }

  public void motion(int num, int x, int y) {
    libtischJNI.GLUTWindow_motion(swigCPtr, this, num, x, y);
  }

  public void entry(int num, int state) {
    libtischJNI.GLUTWindow_entry(swigCPtr, this, num, state);
  }

}
