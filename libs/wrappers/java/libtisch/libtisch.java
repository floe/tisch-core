/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package libtisch;

public class libtisch implements libtischConstants {
  public static SWIGTYPE_p_std__istream read_from(SWIGTYPE_p_std__istream s, BasicBlob b) {
    return new SWIGTYPE_p_std__istream(libtischJNI.read_from__SWIG_2(SWIGTYPE_p_std__istream.getCPtr(s), BasicBlob.getCPtr(b), b), false);
  }

  public static SWIGTYPE_p_std__ostream write_to(SWIGTYPE_p_std__ostream s, BasicBlob b) {
    return new SWIGTYPE_p_std__ostream(libtischJNI.write_to__SWIG_3(SWIGTYPE_p_std__ostream.getCPtr(s), BasicBlob.getCPtr(b), b), false);
  }

  public static SWIGTYPE_p_std__mapT_std__string_FeatureBase_pfpFfF_t g_factory() {
    return new SWIGTYPE_p_std__mapT_std__string_FeatureBase_pfpFfF_t(libtischJNI.g_factory(), false);
  }

  public static FeatureBase createFeature(String name) {
    long cPtr = libtischJNI.createFeature(name);
    return (cPtr == 0) ? null : new FeatureBase(cPtr, false);
  }

  public static SWIGTYPE_p_std__istream read_from(SWIGTYPE_p_std__istream s, Gesture g) {
    return new SWIGTYPE_p_std__istream(libtischJNI.read_from__SWIG_3(SWIGTYPE_p_std__istream.getCPtr(s), Gesture.getCPtr(g), g), false);
  }

  public static SWIGTYPE_p_std__ostream write_to(SWIGTYPE_p_std__ostream s, Gesture g) {
    return new SWIGTYPE_p_std__ostream(libtischJNI.write_to__SWIG_4(SWIGTYPE_p_std__ostream.getCPtr(s), Gesture.getCPtr(g), g), false);
  }

  public static SWIGTYPE_p_std__istream read_from(SWIGTYPE_p_std__istream s, Region r) {
    return new SWIGTYPE_p_std__istream(libtischJNI.read_from__SWIG_4(SWIGTYPE_p_std__istream.getCPtr(s), Region.getCPtr(r), r), false);
  }

  public static SWIGTYPE_p_std__ostream write_to(SWIGTYPE_p_std__ostream s, Region r) {
    return new SWIGTYPE_p_std__ostream(libtischJNI.write_to__SWIG_5(SWIGTYPE_p_std__ostream.getCPtr(s), Region.getCPtr(r), r), false);
  }

  public static SWIGTYPE_p_std__istream read_from(SWIGTYPE_p_std__istream s, Dimensions d) {
    return new SWIGTYPE_p_std__istream(libtischJNI.read_from__SWIG_5(SWIGTYPE_p_std__istream.getCPtr(s), Dimensions.getCPtr(d), d), false);
  }

  public static SWIGTYPE_p_std__ostream write_to(SWIGTYPE_p_std__ostream s, Dimensions d) {
    return new SWIGTYPE_p_std__ostream(libtischJNI.write_to__SWIG_6(SWIGTYPE_p_std__ostream.getCPtr(s), Dimensions.getCPtr(d), d), false);
  }

  public static void setG_proj(SWIGTYPE_p_GLdouble value) {
    libtischJNI.g_proj_set(SWIGTYPE_p_GLdouble.getCPtr(value));
  }

  public static SWIGTYPE_p_GLdouble getG_proj() {
    long cPtr = libtischJNI.g_proj_get();
    return (cPtr == 0) ? null : new SWIGTYPE_p_GLdouble(cPtr, false);
  }

  public static void setG_view(SWIGTYPE_p_GLint value) {
    libtischJNI.g_view_set(SWIGTYPE_p_GLint.getCPtr(value));
  }

  public static SWIGTYPE_p_GLint getG_view() {
    long cPtr = libtischJNI.g_view_get();
    return (cPtr == 0) ? null : new SWIGTYPE_p_GLint(cPtr, false);
  }

  public static void setG_widgets(SWIGTYPE_p_std__setT_Widget_p_t value) {
    libtischJNI.g_widgets_set(SWIGTYPE_p_std__setT_Widget_p_t.getCPtr(value));
  }

  public static SWIGTYPE_p_std__setT_Widget_p_t getG_widgets() {
    long cPtr = libtischJNI.g_widgets_get();
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__setT_Widget_p_t(cPtr, false);
  }

  public static void setG_matcher(Matcher value) {
    libtischJNI.g_matcher_set(Matcher.getCPtr(value), value);
  }

  public static Matcher getG_matcher() {
    long cPtr = libtischJNI.g_matcher_get();
    return (cPtr == 0) ? null : new Matcher(cPtr, false);
  }

}
