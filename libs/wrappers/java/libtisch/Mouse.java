/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package libtisch;

public class Mouse {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public Mouse(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(Mouse obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtischJNI.delete_Mouse(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Mouse(String target) {
    this(libtischJNI.new_Mouse__SWIG_0(target), true);
  }

  public Mouse() {
    this(libtischJNI.new_Mouse__SWIG_1(), true);
  }

  public void button(int num, int button, int state, int x, int y) {
    libtischJNI.Mouse_button(swigCPtr, this, num, button, state, x, y);
  }

  public void motion(int num, int x, int y) {
    libtischJNI.Mouse_motion(swigCPtr, this, num, x, y);
  }

  public void passive(int num, int x, int y) {
    libtischJNI.Mouse_passive(swigCPtr, this, num, x, y);
  }

  public void entry(int num, int state) {
    libtischJNI.Mouse_entry(swigCPtr, this, num, state);
  }

  public void send_blobs(double w, double h) {
    libtischJNI.Mouse_send_blobs(swigCPtr, this, w, h);
  }

}
