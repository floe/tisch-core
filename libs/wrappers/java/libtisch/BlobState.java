/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package libtisch;

public class BlobState extends mapIntBlobHistory {
  private long swigCPtr;

  protected BlobState(long cPtr, boolean cMemoryOwn) {
    super(libtischJNI.SWIGBlobStateUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BlobState obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtischJNI.delete_BlobState(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public BlobState() {
    this(libtischJNI.new_BlobState(), true);
  }

  public void purge() {
    libtischJNI.BlobState_purge(swigCPtr, this);
  }

  public void setLost(vectorInt value) {
    libtischJNI.BlobState_lost_set(swigCPtr, this, vectorInt.getCPtr(value), value);
  }

  public vectorInt getLost() {
    long cPtr = libtischJNI.BlobState_lost_get(swigCPtr, this);
    return (cPtr == 0) ? null : new vectorInt(cPtr, false);
  }

  public void setChanged(int value) {
    libtischJNI.BlobState_changed_set(swigCPtr, this, value);
  }

  public int getChanged() {
    return libtischJNI.BlobState_changed_get(swigCPtr, this);
  }

}
