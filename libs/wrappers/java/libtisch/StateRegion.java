/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package libtisch;

public class StateRegion extends Region {
  private long swigCPtr;

  protected StateRegion(long cPtr, boolean cMemoryOwn) {
    super(libtischJNI.SWIGStateRegionUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(StateRegion obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtischJNI.delete_StateRegion(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public StateRegion(java.math.BigInteger _id) {
    this(libtischJNI.new_StateRegion__SWIG_0(_id), true);
  }

  public StateRegion() {
    this(libtischJNI.new_StateRegion__SWIG_1(), true);
  }

  public StateRegion assign(Region reg) {
    return new StateRegion(libtischJNI.StateRegion_assign(swigCPtr, this, Region.getCPtr(reg), reg), false);
  }

  public void update() {
    libtischJNI.StateRegion_update(swigCPtr, this);
  }

  public Gesture nextMatch() {
    long cPtr = libtischJNI.StateRegion_nextMatch(swigCPtr, this);
    return (cPtr == 0) ? null : new Gesture(cPtr, false);
  }

  public void setId(java.math.BigInteger value) {
    libtischJNI.StateRegion_id_set(swigCPtr, this, value);
  }

  public java.math.BigInteger getId() {
    return libtischJNI.StateRegion_id_get(swigCPtr, this);
  }

  public void setFirst(int value) {
    libtischJNI.StateRegion_first_set(swigCPtr, this, value);
  }

  public int getFirst() {
    return libtischJNI.StateRegion_first_get(swigCPtr, this);
  }

  public void setState(InputState value) {
    libtischJNI.StateRegion_state_set(swigCPtr, this, InputState.getCPtr(value), value);
  }

  public InputState getState() {
    long cPtr = libtischJNI.StateRegion_state_get(swigCPtr, this);
    return (cPtr == 0) ? null : new InputState(cPtr, false);
  }

  public void setGst(SWIGTYPE_p_std__vectorT_Gesture_t__iterator value) {
    libtischJNI.StateRegion_gst_set(swigCPtr, this, SWIGTYPE_p_std__vectorT_Gesture_t__iterator.getCPtr(value));
  }

  public SWIGTYPE_p_std__vectorT_Gesture_t__iterator getGst() {
    long cPtr = libtischJNI.StateRegion_gst_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__vectorT_Gesture_t__iterator(cPtr, false);
  }

}
