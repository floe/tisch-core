/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package libtisch;

public class BlobHistory extends dequeBasicBlob {
  private long swigCPtr;

  protected BlobHistory(long cPtr, boolean cMemoryOwn) {
    super(libtischJNI.SWIGBlobHistoryUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BlobHistory obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtischJNI.delete_BlobHistory(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public BlobHistory(int _maxlen) {
    this(libtischJNI.new_BlobHistory__SWIG_0(_maxlen), true);
  }

  public BlobHistory() {
    this(libtischJNI.new_BlobHistory__SWIG_1(), true);
  }

  public void add(BasicBlob val) {
    libtischJNI.BlobHistory_add(swigCPtr, this, BasicBlob.getCPtr(val), val);
  }

  public void setAvg(Vector value) {
    libtischJNI.BlobHistory_avg_set(swigCPtr, this, Vector.getCPtr(value), value);
  }

  public Vector getAvg() {
    long cPtr = libtischJNI.BlobHistory_avg_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Vector(cPtr, false);
  }

  public void setStddev(Vector value) {
    libtischJNI.BlobHistory_stddev_set(swigCPtr, this, Vector.getCPtr(value), value);
  }

  public Vector getStddev() {
    long cPtr = libtischJNI.BlobHistory_stddev_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Vector(cPtr, false);
  }

  public void setPos(Vector value) {
    libtischJNI.BlobHistory_pos_set(swigCPtr, this, Vector.getCPtr(value), value);
  }

  public Vector getPos() {
    long cPtr = libtischJNI.BlobHistory_pos_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Vector(cPtr, false);
  }

  public void setFirst(BasicBlob value) {
    libtischJNI.BlobHistory_first_set(swigCPtr, this, BasicBlob.getCPtr(value), value);
  }

  public BasicBlob getFirst() {
    long cPtr = libtischJNI.BlobHistory_first_get(swigCPtr, this);
    return (cPtr == 0) ? null : new BasicBlob(cPtr, false);
  }

  public void setRecent(int value) {
    libtischJNI.BlobHistory_recent_set(swigCPtr, this, value);
  }

  public int getRecent() {
    return libtischJNI.BlobHistory_recent_get(swigCPtr, this);
  }

  public void setNewblob(int value) {
    libtischJNI.BlobHistory_newblob_set(swigCPtr, this, value);
  }

  public int getNewblob() {
    return libtischJNI.BlobHistory_newblob_get(swigCPtr, this);
  }

  public void setTotal(int value) {
    libtischJNI.BlobHistory_total_set(swigCPtr, this, value);
  }

  public int getTotal() {
    return libtischJNI.BlobHistory_total_get(swigCPtr, this);
  }

}
