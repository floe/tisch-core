/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package libtisch;

public class FeatureBase {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected FeatureBase(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(FeatureBase obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtischJNI.delete_FeatureBase(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    libtischJNI.FeatureBase_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    libtischJNI.FeatureBase_change_ownership(this, swigCPtr, true);
  }

  public FeatureBase(int _tf) {
    this(libtischJNI.new_FeatureBase__SWIG_0(_tf), true);
    libtischJNI.FeatureBase_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public FeatureBase() {
    this(libtischJNI.new_FeatureBase__SWIG_1(), true);
    libtischJNI.FeatureBase_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public String name() {
    return libtischJNI.FeatureBase_name(swigCPtr, this);
  }

  public FeatureBase clone() {
    long cPtr = libtischJNI.FeatureBase_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new FeatureBase(cPtr, false);
  }

  public void load(InputState state) {
    libtischJNI.FeatureBase_load(swigCPtr, this, InputState.getCPtr(state), state);
  }

  public int next() {
    return libtischJNI.FeatureBase_next(swigCPtr, this);
  }

  public void serialize(SWIGTYPE_p_std__ostream s) {
    libtischJNI.FeatureBase_serialize(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(s));
  }

  public void unserialize(SWIGTYPE_p_std__istream s) {
    libtischJNI.FeatureBase_unserialize(swigCPtr, this, SWIGTYPE_p_std__istream.getCPtr(s));
  }

  public void setHas_result(int value) {
    libtischJNI.FeatureBase_has_result_set(swigCPtr, this, value);
  }

  public int getHas_result() {
    return libtischJNI.FeatureBase_has_result_get(swigCPtr, this);
  }

  protected void setTypeflags(int value) {
    libtischJNI.FeatureBase_typeflags_set(swigCPtr, this, value);
  }

  protected int getTypeflags() {
    return libtischJNI.FeatureBase_typeflags_get(swigCPtr, this);
  }

}
