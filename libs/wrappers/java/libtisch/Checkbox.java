/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package libtisch;

public class Checkbox extends Button {
  private long swigCPtr;

  protected Checkbox(long cPtr, boolean cMemoryOwn) {
    super(libtischJNI.SWIGCheckboxUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Checkbox obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtischJNI.delete_Checkbox(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public Checkbox(int _w, int _h, int _x, int _y, double angle, RGBATexture _tex) {
    this(libtischJNI.new_Checkbox__SWIG_0(_w, _h, _x, _y, angle, libtischJNI.getCPtrAddRef(_tex), _tex), true);
  }

  public Checkbox(int _w, int _h, int _x, int _y, double angle) {
    this(libtischJNI.new_Checkbox__SWIG_1(_w, _h, _x, _y, angle), true);
  }

  public Checkbox(int _w, int _h, int _x, int _y) {
    this(libtischJNI.new_Checkbox__SWIG_2(_w, _h, _x, _y), true);
  }

  public Checkbox(int _w, int _h, int _x) {
    this(libtischJNI.new_Checkbox__SWIG_3(_w, _h, _x), true);
  }

  public Checkbox(int _w, int _h) {
    this(libtischJNI.new_Checkbox__SWIG_4(_w, _h), true);
  }

  public void draw() {
    libtischJNI.Checkbox_draw(swigCPtr, this);
  }

  public void tap(Vector pos, int id) {
    libtischJNI.Checkbox_tap(swigCPtr, this, Vector.getCPtr(pos), pos, id);
  }

  public int get() {
    return libtischJNI.Checkbox_get(swigCPtr, this);
  }

  public void set(int _checked) {
    libtischJNI.Checkbox_set(swigCPtr, this, _checked);
  }

}
