/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package libtisch;

public class BasicBlob {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected BasicBlob(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BasicBlob obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtischJNI.delete_BasicBlob(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public BasicBlob() {
    this(libtischJNI.new_BasicBlob(), true);
  }

  public void setId(int value) {
    libtischJNI.BasicBlob_id_set(swigCPtr, this, value);
  }

  public int getId() {
    return libtischJNI.BasicBlob_id_get(swigCPtr, this);
  }

  public void setPid(int value) {
    libtischJNI.BasicBlob_pid_set(swigCPtr, this, value);
  }

  public int getPid() {
    return libtischJNI.BasicBlob_pid_get(swigCPtr, this);
  }

  public void setType(int value) {
    libtischJNI.BasicBlob_type_set(swigCPtr, this, value);
  }

  public int getType() {
    return libtischJNI.BasicBlob_type_get(swigCPtr, this);
  }

  public void setSize(int value) {
    libtischJNI.BasicBlob_size_set(swigCPtr, this, value);
  }

  public int getSize() {
    return libtischJNI.BasicBlob_size_get(swigCPtr, this);
  }

  public void setTracked(int value) {
    libtischJNI.BasicBlob_tracked_set(swigCPtr, this, value);
  }

  public int getTracked() {
    return libtischJNI.BasicBlob_tracked_get(swigCPtr, this);
  }

  public void setValue(short value) {
    libtischJNI.BasicBlob_value_set(swigCPtr, this, value);
  }

  public short getValue() {
    return libtischJNI.BasicBlob_value_get(swigCPtr, this);
  }

  public void setPos(Vector value) {
    libtischJNI.BasicBlob_pos_set(swigCPtr, this, Vector.getCPtr(value), value);
  }

  public Vector getPos() {
    long cPtr = libtischJNI.BasicBlob_pos_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Vector(cPtr, false);
  }

  public void setSpeed(Vector value) {
    libtischJNI.BasicBlob_speed_set(swigCPtr, this, Vector.getCPtr(value), value);
  }

  public Vector getSpeed() {
    long cPtr = libtischJNI.BasicBlob_speed_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Vector(cPtr, false);
  }

  public void setPeak(Vector value) {
    libtischJNI.BasicBlob_peak_set(swigCPtr, this, Vector.getCPtr(value), value);
  }

  public Vector getPeak() {
    long cPtr = libtischJNI.BasicBlob_peak_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Vector(cPtr, false);
  }

  public void setAxis1(Vector value) {
    libtischJNI.BasicBlob_axis1_set(swigCPtr, this, Vector.getCPtr(value), value);
  }

  public Vector getAxis1() {
    long cPtr = libtischJNI.BasicBlob_axis1_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Vector(cPtr, false);
  }

  public void setAxis2(Vector value) {
    libtischJNI.BasicBlob_axis2_set(swigCPtr, this, Vector.getCPtr(value), value);
  }

  public Vector getAxis2() {
    long cPtr = libtischJNI.BasicBlob_axis2_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Vector(cPtr, false);
  }

}
