/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package libtisch;

public class Container extends Tile {
  private long swigCPtr;

  protected Container(long cPtr, boolean cMemoryOwn) {
    super(libtischJNI.SWIGContainerUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Container obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtischJNI.delete_Container(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    libtischJNI.Container_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    libtischJNI.Container_change_ownership(this, swigCPtr, true);
  }

  public Container(int w, int h, int x, int y, double angle, RGBATexture tex, int mode) {
    this(libtischJNI.new_Container__SWIG_0(w, h, x, y, angle, libtischJNI.getCPtrAddRef(tex), tex, mode), true);
    libtischJNI.Container_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public Container(int w, int h, int x, int y, double angle, RGBATexture tex) {
    this(libtischJNI.new_Container__SWIG_1(w, h, x, y, angle, libtischJNI.getCPtrAddRef(tex), tex), true);
    libtischJNI.Container_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public Container(int w, int h, int x, int y, double angle) {
    this(libtischJNI.new_Container__SWIG_2(w, h, x, y, angle), true);
    libtischJNI.Container_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public Container(int w, int h, int x, int y) {
    this(libtischJNI.new_Container__SWIG_3(w, h, x, y), true);
    libtischJNI.Container_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public void add(Widget widget, int back) {
    libtischJNI.Container_add__SWIG_0(swigCPtr, this, libtischJNI.getCPtrAddRef(widget), widget, back);
  }

  public void add(Widget widget) {
    libtischJNI.Container_add__SWIG_1(swigCPtr, this, libtischJNI.getCPtrAddRef(widget), widget);
  }

  public void raise(Widget widget) {
    if (getClass() == Container.class) libtischJNI.Container_raise__SWIG_0(swigCPtr, this, libtischJNI.getCPtrAddRef(widget), widget); else libtischJNI.Container_raiseSwigExplicitContainer__SWIG_0(swigCPtr, this, libtischJNI.getCPtrAddRef(widget), widget);
  }

  public void raise() {
    if (getClass() == Container.class) libtischJNI.Container_raise__SWIG_1(swigCPtr, this); else libtischJNI.Container_raiseSwigExplicitContainer__SWIG_1(swigCPtr, this);
  }

  public void lower(Widget widget) {
    if (getClass() == Container.class) libtischJNI.Container_lower__SWIG_0(swigCPtr, this, libtischJNI.getCPtrAddRef(widget), widget); else libtischJNI.Container_lowerSwigExplicitContainer__SWIG_0(swigCPtr, this, libtischJNI.getCPtrAddRef(widget), widget);
  }

  public void lower() {
    if (getClass() == Container.class) libtischJNI.Container_lower__SWIG_1(swigCPtr, this); else libtischJNI.Container_lowerSwigExplicitContainer__SWIG_1(swigCPtr, this);
  }

  public void remove(Widget widget, int unreg) {
    libtischJNI.Container_remove__SWIG_0(swigCPtr, this, libtischJNI.getCPtrAddRef(widget), widget, unreg);
  }

  public void remove(Widget widget) {
    libtischJNI.Container_remove__SWIG_1(swigCPtr, this, libtischJNI.getCPtrAddRef(widget), widget);
  }

  public void draw() {
    if (getClass() == Container.class) libtischJNI.Container_draw(swigCPtr, this); else libtischJNI.Container_drawSwigExplicitContainer(swigCPtr, this);
  }

  public void paint(boolean update_stencil) {
    if (getClass() == Container.class) libtischJNI.Container_paint__SWIG_0(swigCPtr, this, update_stencil); else libtischJNI.Container_paintSwigExplicitContainer__SWIG_0(swigCPtr, this, update_stencil);
  }

  public void paint() {
    if (getClass() == Container.class) libtischJNI.Container_paint__SWIG_1(swigCPtr, this); else libtischJNI.Container_paintSwigExplicitContainer__SWIG_1(swigCPtr, this);
  }

  public void doUpdate(Widget target, SWIGTYPE_p_std__ostream ost) {
    if (getClass() == Container.class) libtischJNI.Container_doUpdate__SWIG_0(swigCPtr, this, libtischJNI.getCPtrAddRef(target), target, SWIGTYPE_p_std__ostream.getCPtr(ost)); else libtischJNI.Container_doUpdateSwigExplicitContainer__SWIG_0(swigCPtr, this, libtischJNI.getCPtrAddRef(target), target, SWIGTYPE_p_std__ostream.getCPtr(ost));
  }

  public void doUpdate(Widget target) {
    if (getClass() == Container.class) libtischJNI.Container_doUpdate__SWIG_1(swigCPtr, this, libtischJNI.getCPtrAddRef(target), target); else libtischJNI.Container_doUpdateSwigExplicitContainer__SWIG_1(swigCPtr, this, libtischJNI.getCPtrAddRef(target), target);
  }

  public void doUpdate() {
    if (getClass() == Container.class) libtischJNI.Container_doUpdate__SWIG_2(swigCPtr, this); else libtischJNI.Container_doUpdateSwigExplicitContainer__SWIG_2(swigCPtr, this);
  }

  public void tap(Vector vec, int id) {
    if (getClass() == Container.class) libtischJNI.Container_tap(swigCPtr, this, Vector.getCPtr(vec), vec, id); else libtischJNI.Container_tapSwigExplicitContainer(swigCPtr, this, Vector.getCPtr(vec), vec, id);
  }

  protected int totalHeight() {
    return libtischJNI.Container_totalHeight(swigCPtr, this);
  }

  protected void setWidgets(SWIGTYPE_p_std__dequeT_Widget_p_t value) {
    libtischJNI.Container_widgets_set(swigCPtr, this, SWIGTYPE_p_std__dequeT_Widget_p_t.getCPtr(value));
  }

  protected SWIGTYPE_p_std__dequeT_Widget_p_t getWidgets() {
    long cPtr = libtischJNI.Container_widgets_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__dequeT_Widget_p_t(cPtr, false);
  }

  protected void setLocked(int value) {
    libtischJNI.Container_locked_set(swigCPtr, this, value);
  }

  protected int getLocked() {
    return libtischJNI.Container_locked_get(swigCPtr, this);
  }

}
