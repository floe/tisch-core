/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGCSHARP
#define SWIG_DIRECTORS


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



#include <stdlib.h>
#include <string.h>
#include <stdio.h>


/* Support for throwing C# exceptions from C/C++. There are two types: 
 * Exceptions that take a message and ArgumentExceptions that take a message and a parameter name. */
typedef enum {
  SWIG_CSharpApplicationException,
  SWIG_CSharpArithmeticException,
  SWIG_CSharpDivideByZeroException,
  SWIG_CSharpIndexOutOfRangeException,
  SWIG_CSharpInvalidCastException,
  SWIG_CSharpInvalidOperationException,
  SWIG_CSharpIOException,
  SWIG_CSharpNullReferenceException,
  SWIG_CSharpOutOfMemoryException,
  SWIG_CSharpOverflowException,
  SWIG_CSharpSystemException
} SWIG_CSharpExceptionCodes;

typedef enum {
  SWIG_CSharpArgumentException,
  SWIG_CSharpArgumentNullException,
  SWIG_CSharpArgumentOutOfRangeException
} SWIG_CSharpExceptionArgumentCodes;

typedef void (SWIGSTDCALL* SWIG_CSharpExceptionCallback_t)(const char *);
typedef void (SWIGSTDCALL* SWIG_CSharpExceptionArgumentCallback_t)(const char *, const char *);

typedef struct {
  SWIG_CSharpExceptionCodes code;
  SWIG_CSharpExceptionCallback_t callback;
} SWIG_CSharpException_t;

typedef struct {
  SWIG_CSharpExceptionArgumentCodes code;
  SWIG_CSharpExceptionArgumentCallback_t callback;
} SWIG_CSharpExceptionArgument_t;

static SWIG_CSharpException_t SWIG_csharp_exceptions[] = {
  { SWIG_CSharpApplicationException, NULL },
  { SWIG_CSharpArithmeticException, NULL },
  { SWIG_CSharpDivideByZeroException, NULL },
  { SWIG_CSharpIndexOutOfRangeException, NULL },
  { SWIG_CSharpInvalidCastException, NULL },
  { SWIG_CSharpInvalidOperationException, NULL },
  { SWIG_CSharpIOException, NULL },
  { SWIG_CSharpNullReferenceException, NULL },
  { SWIG_CSharpOutOfMemoryException, NULL },
  { SWIG_CSharpOverflowException, NULL },
  { SWIG_CSharpSystemException, NULL }
};

static SWIG_CSharpExceptionArgument_t SWIG_csharp_exceptions_argument[] = {
  { SWIG_CSharpArgumentException, NULL },
  { SWIG_CSharpArgumentNullException, NULL },
  { SWIG_CSharpArgumentOutOfRangeException, NULL }
};

static void SWIGUNUSED SWIG_CSharpSetPendingException(SWIG_CSharpExceptionCodes code, const char *msg) {
  SWIG_CSharpExceptionCallback_t callback = SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions)/sizeof(SWIG_CSharpException_t)) {
    callback = SWIG_csharp_exceptions[code].callback;
  }
  callback(msg);
}

static void SWIGUNUSED SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpExceptionArgumentCodes code, const char *msg, const char *param_name) {
  SWIG_CSharpExceptionArgumentCallback_t callback = SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions_argument)/sizeof(SWIG_CSharpExceptionArgument_t)) {
    callback = SWIG_csharp_exceptions_argument[code].callback;
  }
  callback(msg, param_name);
}


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionCallbacks_libtisch(
                                                SWIG_CSharpExceptionCallback_t applicationCallback,
                                                SWIG_CSharpExceptionCallback_t arithmeticCallback,
                                                SWIG_CSharpExceptionCallback_t divideByZeroCallback, 
                                                SWIG_CSharpExceptionCallback_t indexOutOfRangeCallback, 
                                                SWIG_CSharpExceptionCallback_t invalidCastCallback,
                                                SWIG_CSharpExceptionCallback_t invalidOperationCallback,
                                                SWIG_CSharpExceptionCallback_t ioCallback,
                                                SWIG_CSharpExceptionCallback_t nullReferenceCallback,
                                                SWIG_CSharpExceptionCallback_t outOfMemoryCallback, 
                                                SWIG_CSharpExceptionCallback_t overflowCallback, 
                                                SWIG_CSharpExceptionCallback_t systemCallback) {
  SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback = applicationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpArithmeticException].callback = arithmeticCallback;
  SWIG_csharp_exceptions[SWIG_CSharpDivideByZeroException].callback = divideByZeroCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIndexOutOfRangeException].callback = indexOutOfRangeCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidCastException].callback = invalidCastCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidOperationException].callback = invalidOperationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIOException].callback = ioCallback;
  SWIG_csharp_exceptions[SWIG_CSharpNullReferenceException].callback = nullReferenceCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOutOfMemoryException].callback = outOfMemoryCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOverflowException].callback = overflowCallback;
  SWIG_csharp_exceptions[SWIG_CSharpSystemException].callback = systemCallback;
}

#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionArgumentCallbacks_libtisch(
                                                SWIG_CSharpExceptionArgumentCallback_t argumentCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentNullCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentOutOfRangeCallback) {
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback = argumentCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentNullException].callback = argumentNullCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentOutOfRangeException].callback = argumentOutOfRangeCallback;
}


/* Callback for returning strings to C# without leaking memory */
typedef char * (SWIGSTDCALL* SWIG_CSharpStringHelperCallback)(const char *);
static SWIG_CSharpStringHelperCallback SWIG_csharp_string_callback = NULL;


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterStringCallback_libtisch(SWIG_CSharpStringHelperCallback callback) {
  SWIG_csharp_string_callback = callback;
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, msg, ""); return nullreturn; } else

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13



/* -----------------------------------------------------------------------------
 * director.swg
 *
 * This file contains support for director classes so that C# proxy 
 * methods can be called from C++.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus

#if defined(DEBUG_DIRECTOR_OWNED)
#include <iostream>
#endif
#include <string>

namespace Swig {
  /* Director base class - not currently used in C# directors */
  class Director {
  };

  /* Base class for director exceptions */
  class DirectorException {
  protected:
    std::string swig_msg;

  public:
    DirectorException(const char* msg) : swig_msg(msg) {
    }
    DirectorException(const std::string &msg) : swig_msg(msg) {
    }
    const std::string& what() const {
      return swig_msg;
    }
    virtual ~DirectorException() {
    }
  };

  /* Pure virtual method exception */
  class DirectorPureVirtualException : public Swig::DirectorException {
  public:
    DirectorPureVirtualException(const char* msg) : DirectorException(std::string("Attempt to invoke pure virtual method ") + msg) {
    }
  };
}

#endif /* __cplusplus */



SWIGINTERN void SWIG_CSharpException(int code, const char *msg) {
  if (code == SWIG_ValueError) {
    SWIG_CSharpExceptionArgumentCodes exception_code = SWIG_CSharpArgumentOutOfRangeException;
    SWIG_CSharpSetPendingExceptionArgument(exception_code, msg, 0);
  } else {
    SWIG_CSharpExceptionCodes exception_code = SWIG_CSharpApplicationException;
    switch(code) {
    case SWIG_MemoryError:
      exception_code = SWIG_CSharpOutOfMemoryException;
      break;
    case SWIG_IndexError:
      exception_code = SWIG_CSharpIndexOutOfRangeException;
      break;
    case SWIG_DivisionByZero:
      exception_code = SWIG_CSharpDivideByZeroException;
      break;
    case SWIG_IOError:
      exception_code = SWIG_CSharpIOException;
      break;
    case SWIG_OverflowError:
      exception_code = SWIG_CSharpOverflowException;
      break;
    case SWIG_RuntimeError:
    case SWIG_TypeError:
    case SWIG_SyntaxError:
    case SWIG_SystemError:
    case SWIG_UnknownError:
    default:
      exception_code = SWIG_CSharpApplicationException;
      break;
    }
    SWIG_CSharpSetPendingException(exception_code, msg);
  }
}


#include <stdexcept>


#if _MSC_VER
  #undef  TISCH_SHARED
  #define TISCH_SHARED __declspec( dllimport )
#endif
#include <Vector.h>
#include <BasicBlob.h>
#include <SmartPtr.h>
#include <Feature.h>
#include <Factory.h>
#include <Region.h>
#include <features/BlobCount.h>
#include <features/BlobDim.h>
#include <features/BlobID.h>
#include <features/BlobPos.h>
#include <features/BlobGroup.h>
#include <features/Motion.h>
#include <features/Rotation.h>
#include <features/MultiBlobRotation.h>
#include <features/Scale.h>
#include <features/MultiBlobScale.h>
#include <Window.h>
#include <Mouse.h>
#include <Widget.h>
#include <Button.h>
#include <Label.h>
#include <Tile.h>
#include <Slider.h>
#include <Dial.h>
#include <Container.h>
#include <MasterContainer.h>
#include <GLUTWindow.h>
#include <Textbox.h>
#include <Checkbox.h>


#include <stdexcept>


#include <string>


#include <vector>
#include <algorithm>
#include <stdexcept>


#include <map>
#include <algorithm>
#include <stdexcept>


#include <utility>


#include <deque>
#include <stdexcept>

SWIGINTERN std::vector< Vector > *new_std_vector_Sl_Vector_Sg___SWIG_2(int capacity){
        std::vector< _Vector< double > >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< _Vector< double > >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN _Vector< double > std_vector_Sl_Vector_Sg__getitemcopy(std::vector< Vector > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< _Vector< double > >::const_reference std_vector_Sl_Vector_Sg__getitem(std::vector< Vector > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_Vector_Sg__setitem(std::vector< Vector > *self,int index,_Vector< double > const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_Vector_Sg__AddRange(std::vector< Vector > *self,std::vector< _Vector< double > > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< _Vector< double > > *std_vector_Sl_Vector_Sg__GetRange(std::vector< Vector > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< _Vector< double > >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_Vector_Sg__Insert(std::vector< Vector > *self,int index,_Vector< double > const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_Vector_Sg__InsertRange(std::vector< Vector > *self,int index,std::vector< _Vector< double > > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_Vector_Sg__RemoveAt(std::vector< Vector > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_Vector_Sg__RemoveRange(std::vector< Vector > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< _Vector< double > > *std_vector_Sl_Vector_Sg__Repeat(_Vector< double > const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< _Vector< double > >(count, value);
      }
SWIGINTERN void std_vector_Sl_Vector_Sg__Reverse__SWIG_0(std::vector< Vector > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_Vector_Sg__Reverse__SWIG_1(std::vector< Vector > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_Vector_Sg__SetRange(std::vector< Vector > *self,int index,std::vector< _Vector< double > > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN std::deque< BasicBlob >::const_reference std_deque_Sl_BasicBlob_Sg__getitem(std::deque< BasicBlob > *self,int i){
                int size = int(self->size());
                if (i<0) i += size;
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("deque index out of range");
           }
SWIGINTERN void std_deque_Sl_BasicBlob_Sg__setitem(std::deque< BasicBlob > *self,int i,BasicBlob const &x){
                int size = int(self->size());
                if (i<0) i+= size;
                if (i>=0 && i<size)
                    (*self)[i] = x;
                else
                    throw std::out_of_range("deque index out of range");
           }
SWIGINTERN void std_deque_Sl_BasicBlob_Sg__delitem(std::deque< BasicBlob > *self,int i){
                int size = int(self->size());
                if (i<0) i+= size;
                if (i>=0 && i<size) {
                    self->erase(self->begin()+i);
                } else {
                    throw std::out_of_range("deque index out of range");
                }
           }
SWIGINTERN std::deque< BasicBlob > std_deque_Sl_BasicBlob_Sg__getslice(std::deque< BasicBlob > *self,int i,int j){
                int size = int(self->size());
                if (i<0) i = size+i;
                if (j<0) j = size+j;
                if (i<0) i = 0;
                if (j>size) j = size;
                std::deque<BasicBlob > tmp(j-i);
                std::copy(self->begin()+i,self->begin()+j,tmp.begin());
                return tmp;
            }
SWIGINTERN void std_deque_Sl_BasicBlob_Sg__setslice(std::deque< BasicBlob > *self,int i,int j,std::deque< BasicBlob > const &v){
                int size = int(self->size());
                if (i<0) i = size+i;
                if (j<0) j = size+j;
                if (i<0) i = 0;
                if (j>size) j = size;
                if (int(v.size()) == j-i) {
                    std::copy(v.begin(),v.end(),self->begin()+i);
                } else {
                    self->erase(self->begin()+i,self->begin()+j);
                    if (i+1 <= size)
                        self->insert(self->begin()+i+1,v.begin(),v.end());
                    else
                        self->insert(self->end(),v.begin(),v.end());
                }
            }
SWIGINTERN void std_deque_Sl_BasicBlob_Sg__delslice(std::deque< BasicBlob > *self,int i,int j){
                int size = int(self->size());
                if (i<0) i = size+i;
                if (j<0) j = size+j;
                if (i<0) i = 0;
                if (j>size) j = size;
                self->erase(self->begin()+i,self->begin()+j);
            }
SWIGINTERN std::map< int,BlobHistory >::mapped_type const &std_map_Sl_int_Sc_BlobHistory_Sg__getitem(std::map< int,BlobHistory > *self,std::map< int,BlobHistory >::key_type const &key){
        std::map< int,BlobHistory >::iterator iter = self->find(key);
        if (iter != self->end())
          return iter->second;
        else
          throw std::out_of_range("key not found");
      }
SWIGINTERN void std_map_Sl_int_Sc_BlobHistory_Sg__setitem(std::map< int,BlobHistory > *self,std::map< int,BlobHistory >::key_type const &key,std::map< int,BlobHistory >::mapped_type const &x){
        (*self)[key] = x;
      }
SWIGINTERN bool std_map_Sl_int_Sc_BlobHistory_Sg__ContainsKey(std::map< int,BlobHistory > *self,std::map< int,BlobHistory >::key_type const &key){
        std::map< int, BlobHistory >::iterator iter = self->find(key);
        return iter != self->end();
      }
SWIGINTERN void std_map_Sl_int_Sc_BlobHistory_Sg__Add(std::map< int,BlobHistory > *self,std::map< int,BlobHistory >::key_type const &key,std::map< int,BlobHistory >::mapped_type const &val){
        std::map< int, BlobHistory >::iterator iter = self->find(key);
        if (iter != self->end())
          throw std::out_of_range("key already exists");
        self->insert(std::pair< int, BlobHistory >(key, val));
      }
SWIGINTERN bool std_map_Sl_int_Sc_BlobHistory_Sg__Remove(std::map< int,BlobHistory > *self,std::map< int,BlobHistory >::key_type const &key){
        std::map< int, BlobHistory >::iterator iter = self->find(key);
        if (iter != self->end()) {
          self->erase(iter);
          return true;
        }                
        return false;
      }
SWIGINTERN std::map< int,BlobHistory >::iterator *std_map_Sl_int_Sc_BlobHistory_Sg__create_iterator_begin(std::map< int,BlobHistory > *self){
        return new std::map< int, BlobHistory >::iterator(self->begin());
      }
SWIGINTERN std::map< int,BlobHistory >::key_type const &std_map_Sl_int_Sc_BlobHistory_Sg__get_next_key(std::map< int,BlobHistory > *self,std::map< int,BlobHistory >::iterator *swigiterator){
        std::map< int, BlobHistory >::iterator iter = *swigiterator;
        (*swigiterator)++;
        return (*iter).first;
      }
SWIGINTERN void std_map_Sl_int_Sc_BlobHistory_Sg__destroy_iterator(std::map< int,BlobHistory > *self,std::map< int,BlobHistory >::iterator *swigiterator){
        delete swigiterator;
      }
SWIGINTERN std::vector< BlobState > *new_std_vector_Sl_BlobState_Sg___SWIG_2(int capacity){
        std::vector< BlobState >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< BlobState >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN BlobState std_vector_Sl_BlobState_Sg__getitemcopy(std::vector< BlobState > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< BlobState >::const_reference std_vector_Sl_BlobState_Sg__getitem(std::vector< BlobState > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_BlobState_Sg__setitem(std::vector< BlobState > *self,int index,BlobState const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_BlobState_Sg__AddRange(std::vector< BlobState > *self,std::vector< BlobState > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< BlobState > *std_vector_Sl_BlobState_Sg__GetRange(std::vector< BlobState > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< BlobState >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_BlobState_Sg__Insert(std::vector< BlobState > *self,int index,BlobState const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_BlobState_Sg__InsertRange(std::vector< BlobState > *self,int index,std::vector< BlobState > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_BlobState_Sg__RemoveAt(std::vector< BlobState > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_BlobState_Sg__RemoveRange(std::vector< BlobState > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< BlobState > *std_vector_Sl_BlobState_Sg__Repeat(BlobState const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< BlobState >(count, value);
      }
SWIGINTERN void std_vector_Sl_BlobState_Sg__Reverse__SWIG_0(std::vector< BlobState > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_BlobState_Sg__Reverse__SWIG_1(std::vector< BlobState > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_BlobState_Sg__SetRange(std::vector< BlobState > *self,int index,std::vector< BlobState > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN std::map< std::string,FeatureBase * >::mapped_type const &std_map_Sl_std_string_Sc_FeatureBase_Sm__Sg__getitem(std::map< std::string,FeatureBase * > *self,std::map< std::string,FeatureBase * >::key_type const &key){
        std::map< std::string,FeatureBase * >::iterator iter = self->find(key);
        if (iter != self->end())
          return iter->second;
        else
          throw std::out_of_range("key not found");
      }
SWIGINTERN void std_map_Sl_std_string_Sc_FeatureBase_Sm__Sg__setitem(std::map< std::string,FeatureBase * > *self,std::map< std::string,FeatureBase * >::key_type const &key,std::map< std::string,FeatureBase * >::mapped_type const &x){
        (*self)[key] = x;
      }
SWIGINTERN bool std_map_Sl_std_string_Sc_FeatureBase_Sm__Sg__ContainsKey(std::map< std::string,FeatureBase * > *self,std::map< std::string,FeatureBase * >::key_type const &key){
        std::map< std::string, FeatureBase * >::iterator iter = self->find(key);
        return iter != self->end();
      }
SWIGINTERN void std_map_Sl_std_string_Sc_FeatureBase_Sm__Sg__Add(std::map< std::string,FeatureBase * > *self,std::map< std::string,FeatureBase * >::key_type const &key,std::map< std::string,FeatureBase * >::mapped_type const &val){
        std::map< std::string, FeatureBase * >::iterator iter = self->find(key);
        if (iter != self->end())
          throw std::out_of_range("key already exists");
        self->insert(std::pair< std::string, FeatureBase * >(key, val));
      }
SWIGINTERN bool std_map_Sl_std_string_Sc_FeatureBase_Sm__Sg__Remove(std::map< std::string,FeatureBase * > *self,std::map< std::string,FeatureBase * >::key_type const &key){
        std::map< std::string, FeatureBase * >::iterator iter = self->find(key);
        if (iter != self->end()) {
          self->erase(iter);
          return true;
        }                
        return false;
      }
SWIGINTERN std::map< std::string,FeatureBase * >::iterator *std_map_Sl_std_string_Sc_FeatureBase_Sm__Sg__create_iterator_begin(std::map< std::string,FeatureBase * > *self){
        return new std::map< std::string, FeatureBase * >::iterator(self->begin());
      }
SWIGINTERN std::map< std::string,FeatureBase * >::key_type const &std_map_Sl_std_string_Sc_FeatureBase_Sm__Sg__get_next_key(std::map< std::string,FeatureBase * > *self,std::map< std::string,FeatureBase * >::iterator *swigiterator){
        std::map< std::string, FeatureBase * >::iterator iter = *swigiterator;
        (*swigiterator)++;
        return (*iter).first;
      }
SWIGINTERN void std_map_Sl_std_string_Sc_FeatureBase_Sm__Sg__destroy_iterator(std::map< std::string,FeatureBase * > *self,std::map< std::string,FeatureBase * >::iterator *swigiterator){
        delete swigiterator;
      }
SWIGINTERN std::vector< SmartPtr< FeatureBase > > *new_std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg___SWIG_2(int capacity){
        std::vector< SmartPtr< FeatureBase > >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< SmartPtr< FeatureBase > >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN SmartPtr< FeatureBase > std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__getitemcopy(std::vector< SmartPtr< FeatureBase > > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< SmartPtr< FeatureBase > >::const_reference std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__getitem(std::vector< SmartPtr< FeatureBase > > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__setitem(std::vector< SmartPtr< FeatureBase > > *self,int index,SmartPtr< FeatureBase > const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__AddRange(std::vector< SmartPtr< FeatureBase > > *self,std::vector< SmartPtr< FeatureBase > > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< SmartPtr< FeatureBase > > *std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__GetRange(std::vector< SmartPtr< FeatureBase > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< SmartPtr< FeatureBase > >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__Insert(std::vector< SmartPtr< FeatureBase > > *self,int index,SmartPtr< FeatureBase > const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__InsertRange(std::vector< SmartPtr< FeatureBase > > *self,int index,std::vector< SmartPtr< FeatureBase > > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__RemoveAt(std::vector< SmartPtr< FeatureBase > > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__RemoveRange(std::vector< SmartPtr< FeatureBase > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< SmartPtr< FeatureBase > > *std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__Repeat(SmartPtr< FeatureBase > const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< SmartPtr< FeatureBase > >(count, value);
      }
SWIGINTERN void std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__Reverse__SWIG_0(std::vector< SmartPtr< FeatureBase > > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__Reverse__SWIG_1(std::vector< SmartPtr< FeatureBase > > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__SetRange(std::vector< SmartPtr< FeatureBase > > *self,int index,std::vector< SmartPtr< FeatureBase > > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN std::vector< Gesture > *new_std_vector_Sl_Gesture_Sg___SWIG_2(int capacity){
        std::vector< Gesture >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< Gesture >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN Gesture std_vector_Sl_Gesture_Sg__getitemcopy(std::vector< Gesture > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< Gesture >::const_reference std_vector_Sl_Gesture_Sg__getitem(std::vector< Gesture > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_Gesture_Sg__setitem(std::vector< Gesture > *self,int index,Gesture const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_Gesture_Sg__AddRange(std::vector< Gesture > *self,std::vector< Gesture > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< Gesture > *std_vector_Sl_Gesture_Sg__GetRange(std::vector< Gesture > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< Gesture >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_Gesture_Sg__Insert(std::vector< Gesture > *self,int index,Gesture const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_Gesture_Sg__InsertRange(std::vector< Gesture > *self,int index,std::vector< Gesture > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_Gesture_Sg__RemoveAt(std::vector< Gesture > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_Gesture_Sg__RemoveRange(std::vector< Gesture > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< Gesture > *std_vector_Sl_Gesture_Sg__Repeat(Gesture const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< Gesture >(count, value);
      }
SWIGINTERN void std_vector_Sl_Gesture_Sg__Reverse__SWIG_0(std::vector< Gesture > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_Gesture_Sg__Reverse__SWIG_1(std::vector< Gesture > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_Gesture_Sg__SetRange(std::vector< Gesture > *self,int index,std::vector< Gesture > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN Feature< int > *Feature_Sl_int_Sg__dynamic_cast(FeatureBase *base){
    return dynamic_cast<Feature<int>*>(base);
  }
SWIGINTERN std::vector< int > *new_std_vector_Sl_int_Sg___SWIG_2(int capacity){
        std::vector< int >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< int >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN int std_vector_Sl_int_Sg__getitemcopy(std::vector< int > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< int >::const_reference std_vector_Sl_int_Sg__getitem(std::vector< int > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_int_Sg__setitem(std::vector< int > *self,int index,int const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_int_Sg__AddRange(std::vector< int > *self,std::vector< int > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< int > *std_vector_Sl_int_Sg__GetRange(std::vector< int > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< int >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_int_Sg__Insert(std::vector< int > *self,int index,int const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_int_Sg__InsertRange(std::vector< int > *self,int index,std::vector< int > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_int_Sg__RemoveAt(std::vector< int > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_int_Sg__RemoveRange(std::vector< int > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< int > *std_vector_Sl_int_Sg__Repeat(int const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< int >(count, value);
      }
SWIGINTERN void std_vector_Sl_int_Sg__Reverse__SWIG_0(std::vector< int > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_int_Sg__Reverse__SWIG_1(std::vector< int > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_int_Sg__SetRange(std::vector< int > *self,int index,std::vector< int > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN bool std_vector_Sl_int_Sg__Contains(std::vector< int > *self,int const &value){
        return std::find(self->begin(), self->end(), value) != self->end();
      }
SWIGINTERN int std_vector_Sl_int_Sg__IndexOf(std::vector< int > *self,int const &value){
        int index = -1;
        std::vector< int >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end())
          index = (int)(it - self->begin());
        return index;
      }
SWIGINTERN int std_vector_Sl_int_Sg__LastIndexOf(std::vector< int > *self,int const &value){
        int index = -1;
        std::vector< int >::reverse_iterator rit = std::find(self->rbegin(), self->rend(), value);
        if (rit != self->rend())
          index = (int)(self->rend() - 1 - rit);
        return index;
      }
SWIGINTERN bool std_vector_Sl_int_Sg__Remove(std::vector< int > *self,int const &value){
        std::vector< int >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end()) {
          self->erase(it);
	  return true;
        }
        return false;
      }
SWIGINTERN BlobCount *BlobCount_dynamic_cast(FeatureBase *base){
    return dynamic_cast<BlobCount*>(base);
  }
SWIGINTERN Feature< Dimensions > *Feature_Sl_Dimensions_Sg__dynamic_cast(FeatureBase *base){
    return dynamic_cast<Feature<Dimensions>*>(base);
  }
SWIGINTERN std::vector< Dimensions > *new_std_vector_Sl_Dimensions_Sg___SWIG_2(int capacity){
        std::vector< Dimensions >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< Dimensions >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN Dimensions std_vector_Sl_Dimensions_Sg__getitemcopy(std::vector< Dimensions > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< Dimensions >::const_reference std_vector_Sl_Dimensions_Sg__getitem(std::vector< Dimensions > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_Dimensions_Sg__setitem(std::vector< Dimensions > *self,int index,Dimensions const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_Dimensions_Sg__AddRange(std::vector< Dimensions > *self,std::vector< Dimensions > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< Dimensions > *std_vector_Sl_Dimensions_Sg__GetRange(std::vector< Dimensions > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< Dimensions >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_Dimensions_Sg__Insert(std::vector< Dimensions > *self,int index,Dimensions const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_Dimensions_Sg__InsertRange(std::vector< Dimensions > *self,int index,std::vector< Dimensions > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_Dimensions_Sg__RemoveAt(std::vector< Dimensions > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_Dimensions_Sg__RemoveRange(std::vector< Dimensions > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< Dimensions > *std_vector_Sl_Dimensions_Sg__Repeat(Dimensions const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< Dimensions >(count, value);
      }
SWIGINTERN void std_vector_Sl_Dimensions_Sg__Reverse__SWIG_0(std::vector< Dimensions > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_Dimensions_Sg__Reverse__SWIG_1(std::vector< Dimensions > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_Dimensions_Sg__SetRange(std::vector< Dimensions > *self,int index,std::vector< Dimensions > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN BlobDim *BlobDim_dynamic_cast(FeatureBase *base){
        return dynamic_cast<BlobDim*>(base);
    }
SWIGINTERN BlobID *BlobID_dynamic_cast(FeatureBase *base){
        return dynamic_cast<BlobID*>(base);
    }
SWIGINTERN Feature< Vector > *Feature_Sl_Vector_Sg__dynamic_cast(FeatureBase *base){
    return dynamic_cast<Feature<Vector>*>(base);
  }
SWIGINTERN BlobPos *BlobPos_dynamic_cast(FeatureBase *base){
        return dynamic_cast<BlobPos*>(base);
    }
SWIGINTERN BlobGroup *BlobGroup_dynamic_cast(FeatureBase *base){
        return dynamic_cast<BlobGroup*>(base);
    }
SWIGINTERN Feature< double > *Feature_Sl_double_Sg__dynamic_cast(FeatureBase *base){
    return dynamic_cast<Feature<double>*>(base);
  }
SWIGINTERN std::vector< double > *new_std_vector_Sl_double_Sg___SWIG_2(int capacity){
        std::vector< double >* pv = 0;
        if (capacity >= 0) {
          pv = new std::vector< double >();
          pv->reserve(capacity);
       } else {
          throw std::out_of_range("capacity");
       }
       return pv;
      }
SWIGINTERN double std_vector_Sl_double_Sg__getitemcopy(std::vector< double > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN std::vector< double >::const_reference std_vector_Sl_double_Sg__getitem(std::vector< double > *self,int index){
        if (index>=0 && index<(int)self->size())
          return (*self)[index];
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_double_Sg__setitem(std::vector< double > *self,int index,double const &val){
        if (index>=0 && index<(int)self->size())
          (*self)[index] = val;
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_double_Sg__AddRange(std::vector< double > *self,std::vector< double > const &values){
        self->insert(self->end(), values.begin(), values.end());
      }
SWIGINTERN std::vector< double > *std_vector_Sl_double_Sg__GetRange(std::vector< double > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        return new std::vector< double >(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_double_Sg__Insert(std::vector< double > *self,int index,double const &x){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, x);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_double_Sg__InsertRange(std::vector< double > *self,int index,std::vector< double > const &values){
        if (index>=0 && index<(int)self->size()+1)
          self->insert(self->begin()+index, values.begin(), values.end());
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_double_Sg__RemoveAt(std::vector< double > *self,int index){
        if (index>=0 && index<(int)self->size())
          self->erase(self->begin() + index);
        else
          throw std::out_of_range("index");
      }
SWIGINTERN void std_vector_Sl_double_Sg__RemoveRange(std::vector< double > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        self->erase(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN std::vector< double > *std_vector_Sl_double_Sg__Repeat(double const &value,int count){
        if (count < 0)
          throw std::out_of_range("count");
        return new std::vector< double >(count, value);
      }
SWIGINTERN void std_vector_Sl_double_Sg__Reverse__SWIG_0(std::vector< double > *self){
        std::reverse(self->begin(), self->end());
      }
SWIGINTERN void std_vector_Sl_double_Sg__Reverse__SWIG_1(std::vector< double > *self,int index,int count){
        if (index < 0)
          throw std::out_of_range("index");
        if (count < 0)
          throw std::out_of_range("count");
        if (index >= (int)self->size()+1 || index+count > (int)self->size())
          throw std::invalid_argument("invalid range");
        std::reverse(self->begin()+index, self->begin()+index+count);
      }
SWIGINTERN void std_vector_Sl_double_Sg__SetRange(std::vector< double > *self,int index,std::vector< double > const &values){
        if (index < 0)
          throw std::out_of_range("index");
        if (index+values.size() > self->size())
          throw std::out_of_range("index");
        std::copy(values.begin(), values.end(), self->begin()+index);
      }
SWIGINTERN bool std_vector_Sl_double_Sg__Contains(std::vector< double > *self,double const &value){
        return std::find(self->begin(), self->end(), value) != self->end();
      }
SWIGINTERN int std_vector_Sl_double_Sg__IndexOf(std::vector< double > *self,double const &value){
        int index = -1;
        std::vector< double >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end())
          index = (int)(it - self->begin());
        return index;
      }
SWIGINTERN int std_vector_Sl_double_Sg__LastIndexOf(std::vector< double > *self,double const &value){
        int index = -1;
        std::vector< double >::reverse_iterator rit = std::find(self->rbegin(), self->rend(), value);
        if (rit != self->rend())
          index = (int)(self->rend() - 1 - rit);
        return index;
      }
SWIGINTERN bool std_vector_Sl_double_Sg__Remove(std::vector< double > *self,double const &value){
        std::vector< double >::iterator it = std::find(self->begin(), self->end(), value);
        if (it != self->end()) {
          self->erase(it);
	  return true;
        }
        return false;
      }
SWIGINTERN Motion *Motion_dynamic_cast(FeatureBase *base){
        return dynamic_cast<Motion*>(base);
    }
SWIGINTERN Rotation *Rotation_dynamic_cast(FeatureBase *base){
        return dynamic_cast<Rotation*>(base);
    }
SWIGINTERN MultiBlobRotation *MultiBlobRotation_dynamic_cast(FeatureBase *base){
        return dynamic_cast<MultiBlobRotation*>(base);
    }
SWIGINTERN Scale *Scale_dynamic_cast(FeatureBase *base){
        return dynamic_cast<Scale*>(base);
    }
SWIGINTERN MultiBlobScale *MultiBlobScale_dynamic_cast(FeatureBase *base){
        return dynamic_cast<MultiBlobScale*>(base);
    }


/* ---------------------------------------------------
 * C++ director class methods
 * --------------------------------------------------- */

#include "libtisch_wrap.h"

SwigDirector_FeatureBase::SwigDirector_FeatureBase(unsigned int _tf) : FeatureBase(_tf), Swig::Director() {
  swig_init_callbacks();
}

SwigDirector_FeatureBase::~SwigDirector_FeatureBase() {
  
}


char const *SwigDirector_FeatureBase::name() const {
  char *c_result = 0 ;
  char * jresult = 0 ;
  
  if (!swig_callbackname) {
    throw Swig::DirectorPureVirtualException("FeatureBase::name");
  } else {
    jresult = (char *) swig_callbackname();
    c_result = (char *)jresult; 
  }
  return (char const *)c_result;
}

FeatureBase *SwigDirector_FeatureBase::clone() const {
  FeatureBase *c_result = 0 ;
  void * jresult = 0 ;
  
  if (!swig_callbackclone) {
    throw Swig::DirectorPureVirtualException("FeatureBase::clone");
  } else {
    jresult = (void *) swig_callbackclone();
    c_result = (FeatureBase *)jresult; 
  }
  return c_result;
}

void SwigDirector_FeatureBase::load(InputState &state) {
  void * jstate = 0 ;
  
  if (!swig_callbackload) {
    throw Swig::DirectorPureVirtualException("FeatureBase::load");
  } else {
    jstate = (InputState *) &state; 
    swig_callbackload(jstate);
  }
}

int SwigDirector_FeatureBase::next() {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  
  if (!swig_callbacknext) {
    throw Swig::DirectorPureVirtualException("FeatureBase::next");
  } else {
    jresult = (int) swig_callbacknext();
    c_result = (int)jresult; 
  }
  return c_result;
}

void SwigDirector_FeatureBase::serialize(std::ostream &s) {
  void * js = 0 ;
  
  if (!swig_callbackserialize) {
    throw Swig::DirectorPureVirtualException("FeatureBase::serialize");
  } else {
    js = (std::ostream *) &s; 
    swig_callbackserialize(js);
  }
}

void SwigDirector_FeatureBase::unserialize(std::istream &s) {
  void * js = 0 ;
  
  if (!swig_callbackunserialize) {
    throw Swig::DirectorPureVirtualException("FeatureBase::unserialize");
  } else {
    js = (std::istream *) &s; 
    swig_callbackunserialize(js);
  }
}

void SwigDirector_FeatureBase::swig_connect_director(SWIG_Callback0_t callbackname, SWIG_Callback1_t callbackclone, SWIG_Callback2_t callbackload, SWIG_Callback3_t callbacknext, SWIG_Callback4_t callbackserialize, SWIG_Callback5_t callbackunserialize) {
  swig_callbackname = callbackname;
  swig_callbackclone = callbackclone;
  swig_callbackload = callbackload;
  swig_callbacknext = callbacknext;
  swig_callbackserialize = callbackserialize;
  swig_callbackunserialize = callbackunserialize;
}

void SwigDirector_FeatureBase::swig_init_callbacks() {
  swig_callbackname = 0;
  swig_callbackclone = 0;
  swig_callbackload = 0;
  swig_callbacknext = 0;
  swig_callbackserialize = 0;
  swig_callbackunserialize = 0;
}

SwigDirector_Widget::SwigDirector_Widget(int _w, int _h, int _x, int _y, double _angle, RGBATexture *_tex, unsigned int _regflags) : Widget(_w, _h, _x, _y, _angle, _tex, _regflags), Swig::Director() {
  swig_init_callbacks();
}

SwigDirector_Widget::~SwigDirector_Widget() {
  
}


void SwigDirector_Widget::outline() {
  if (!swig_callbackoutline) {
    Widget::outline();
    return;
  } else {
    swig_callbackoutline();
  }
}

void SwigDirector_Widget::update(Widget *target) {
  void * jtarget = 0 ;
  
  if (!swig_callbackupdate__SWIG_0) {
    Widget::update(target);
    return;
  } else {
    jtarget = (void *) target; 
    swig_callbackupdate__SWIG_0(jtarget);
  }
}

void SwigDirector_Widget::doUpdate(Widget *target) {
  void * jtarget = 0 ;
  
  if (!swig_callbackdoUpdate__SWIG_0) {
    Widget::doUpdate(target);
    return;
  } else {
    jtarget = (void *) target; 
    swig_callbackdoUpdate__SWIG_0(jtarget);
  }
}

void SwigDirector_Widget::raise(Widget *widget) {
  void * jwidget = 0 ;
  
  if (!swig_callbackraise__SWIG_0) {
    Widget::raise(widget);
    return;
  } else {
    jwidget = (void *) widget; 
    swig_callbackraise__SWIG_0(jwidget);
  }
}

void SwigDirector_Widget::lower(Widget *widget) {
  void * jwidget = 0 ;
  
  if (!swig_callbacklower__SWIG_0) {
    Widget::lower(widget);
    return;
  } else {
    jwidget = (void *) widget; 
    swig_callbacklower__SWIG_0(jwidget);
  }
}

void SwigDirector_Widget::draw() {
  if (!swig_callbackdraw) {
    Widget::draw();
    return;
  } else {
    swig_callbackdraw();
  }
}

void SwigDirector_Widget::action(Gesture *gesture) {
  void * jgesture = 0 ;
  
  if (!swig_callbackaction) {
    throw Swig::DirectorPureVirtualException("Widget::action");
  } else {
    jgesture = (void *) gesture; 
    swig_callbackaction(jgesture);
  }
}

void SwigDirector_Widget::enter(double z) {
  double jz  ;
  
  if (!swig_callbackenter__SWIG_0) {
    Widget::enter(z);
    return;
  } else {
    jz = z;
    swig_callbackenter__SWIG_0(jz);
  }
}

void SwigDirector_Widget::paint(bool update_stencil) {
  unsigned int jupdate_stencil  ;
  
  if (!swig_callbackpaint__SWIG_0) {
    Widget::paint(update_stencil);
    return;
  } else {
    jupdate_stencil = update_stencil;
    swig_callbackpaint__SWIG_0(jupdate_stencil);
  }
}

void SwigDirector_Widget::swig_connect_director(SWIG_Callback0_t callbackoutline, SWIG_Callback1_t callbackupdate__SWIG_0, SWIG_Callback2_t callbackupdate__SWIG_1, SWIG_Callback3_t callbackdoUpdate__SWIG_0, SWIG_Callback4_t callbackdoUpdate__SWIG_1, SWIG_Callback5_t callbackraise__SWIG_0, SWIG_Callback6_t callbackraise__SWIG_1, SWIG_Callback7_t callbacklower__SWIG_0, SWIG_Callback8_t callbacklower__SWIG_1, SWIG_Callback9_t callbackdraw, SWIG_Callback10_t callbackaction, SWIG_Callback11_t callbackenter__SWIG_0, SWIG_Callback12_t callbackenter__SWIG_1, SWIG_Callback13_t callbackpaint__SWIG_0, SWIG_Callback14_t callbackpaint__SWIG_1) {
  swig_callbackoutline = callbackoutline;
  swig_callbackupdate__SWIG_0 = callbackupdate__SWIG_0;
  swig_callbackupdate__SWIG_1 = callbackupdate__SWIG_1;
  swig_callbackdoUpdate__SWIG_0 = callbackdoUpdate__SWIG_0;
  swig_callbackdoUpdate__SWIG_1 = callbackdoUpdate__SWIG_1;
  swig_callbackraise__SWIG_0 = callbackraise__SWIG_0;
  swig_callbackraise__SWIG_1 = callbackraise__SWIG_1;
  swig_callbacklower__SWIG_0 = callbacklower__SWIG_0;
  swig_callbacklower__SWIG_1 = callbacklower__SWIG_1;
  swig_callbackdraw = callbackdraw;
  swig_callbackaction = callbackaction;
  swig_callbackenter__SWIG_0 = callbackenter__SWIG_0;
  swig_callbackenter__SWIG_1 = callbackenter__SWIG_1;
  swig_callbackpaint__SWIG_0 = callbackpaint__SWIG_0;
  swig_callbackpaint__SWIG_1 = callbackpaint__SWIG_1;
}

void SwigDirector_Widget::swig_init_callbacks() {
  swig_callbackoutline = 0;
  swig_callbackupdate__SWIG_0 = 0;
  swig_callbackupdate__SWIG_1 = 0;
  swig_callbackdoUpdate__SWIG_0 = 0;
  swig_callbackdoUpdate__SWIG_1 = 0;
  swig_callbackraise__SWIG_0 = 0;
  swig_callbackraise__SWIG_1 = 0;
  swig_callbacklower__SWIG_0 = 0;
  swig_callbacklower__SWIG_1 = 0;
  swig_callbackdraw = 0;
  swig_callbackaction = 0;
  swig_callbackenter__SWIG_0 = 0;
  swig_callbackenter__SWIG_1 = 0;
  swig_callbackpaint__SWIG_0 = 0;
  swig_callbackpaint__SWIG_1 = 0;
}

SwigDirector_Label::SwigDirector_Label(char const *text, int _w, int _h, int _x, int _y, double angle, int center, int snip, RGBATexture *_tex) : Label(text, _w, _h, _x, _y, angle, center, snip, _tex), Swig::Director() {
  swig_init_callbacks();
}

SwigDirector_Label::~SwigDirector_Label() {
  
}


void SwigDirector_Label::outline() {
  if (!swig_callbackoutline) {
    Widget::outline();
    return;
  } else {
    swig_callbackoutline();
  }
}

void SwigDirector_Label::update(Widget *target) {
  void * jtarget = 0 ;
  
  if (!swig_callbackupdate__SWIG_0) {
    Widget::update(target);
    return;
  } else {
    jtarget = (void *) target; 
    swig_callbackupdate__SWIG_0(jtarget);
  }
}

void SwigDirector_Label::doUpdate(Widget *target) {
  void * jtarget = 0 ;
  
  if (!swig_callbackdoUpdate__SWIG_0) {
    Widget::doUpdate(target);
    return;
  } else {
    jtarget = (void *) target; 
    swig_callbackdoUpdate__SWIG_0(jtarget);
  }
}

void SwigDirector_Label::raise(Widget *widget) {
  void * jwidget = 0 ;
  
  if (!swig_callbackraise__SWIG_0) {
    Widget::raise(widget);
    return;
  } else {
    jwidget = (void *) widget; 
    swig_callbackraise__SWIG_0(jwidget);
  }
}

void SwigDirector_Label::lower(Widget *widget) {
  void * jwidget = 0 ;
  
  if (!swig_callbacklower__SWIG_0) {
    Widget::lower(widget);
    return;
  } else {
    jwidget = (void *) widget; 
    swig_callbacklower__SWIG_0(jwidget);
  }
}

void SwigDirector_Label::draw() {
  if (!swig_callbackdraw) {
    Label::draw();
    return;
  } else {
    swig_callbackdraw();
  }
}

void SwigDirector_Label::action(Gesture *gesture) {
  void * jgesture = 0 ;
  
  if (!swig_callbackaction) {
    Label::action(gesture);
    return;
  } else {
    jgesture = (void *) gesture; 
    swig_callbackaction(jgesture);
  }
}

void SwigDirector_Label::enter(double z) {
  double jz  ;
  
  if (!swig_callbackenter__SWIG_0) {
    Widget::enter(z);
    return;
  } else {
    jz = z;
    swig_callbackenter__SWIG_0(jz);
  }
}

void SwigDirector_Label::paint(bool update_stencil) {
  unsigned int jupdate_stencil  ;
  
  if (!swig_callbackpaint__SWIG_0) {
    Widget::paint(update_stencil);
    return;
  } else {
    jupdate_stencil = update_stencil;
    swig_callbackpaint__SWIG_0(jupdate_stencil);
  }
}

void SwigDirector_Label::swig_connect_director(SWIG_Callback0_t callbackoutline, SWIG_Callback1_t callbackupdate__SWIG_0, SWIG_Callback2_t callbackupdate__SWIG_1, SWIG_Callback3_t callbackdoUpdate__SWIG_0, SWIG_Callback4_t callbackdoUpdate__SWIG_1, SWIG_Callback5_t callbackraise__SWIG_0, SWIG_Callback6_t callbackraise__SWIG_1, SWIG_Callback7_t callbacklower__SWIG_0, SWIG_Callback8_t callbacklower__SWIG_1, SWIG_Callback9_t callbackdraw, SWIG_Callback10_t callbackaction, SWIG_Callback11_t callbackenter__SWIG_0, SWIG_Callback12_t callbackenter__SWIG_1, SWIG_Callback13_t callbackpaint__SWIG_0, SWIG_Callback14_t callbackpaint__SWIG_1) {
  swig_callbackoutline = callbackoutline;
  swig_callbackupdate__SWIG_0 = callbackupdate__SWIG_0;
  swig_callbackupdate__SWIG_1 = callbackupdate__SWIG_1;
  swig_callbackdoUpdate__SWIG_0 = callbackdoUpdate__SWIG_0;
  swig_callbackdoUpdate__SWIG_1 = callbackdoUpdate__SWIG_1;
  swig_callbackraise__SWIG_0 = callbackraise__SWIG_0;
  swig_callbackraise__SWIG_1 = callbackraise__SWIG_1;
  swig_callbacklower__SWIG_0 = callbacklower__SWIG_0;
  swig_callbacklower__SWIG_1 = callbacklower__SWIG_1;
  swig_callbackdraw = callbackdraw;
  swig_callbackaction = callbackaction;
  swig_callbackenter__SWIG_0 = callbackenter__SWIG_0;
  swig_callbackenter__SWIG_1 = callbackenter__SWIG_1;
  swig_callbackpaint__SWIG_0 = callbackpaint__SWIG_0;
  swig_callbackpaint__SWIG_1 = callbackpaint__SWIG_1;
}

void SwigDirector_Label::swig_init_callbacks() {
  swig_callbackoutline = 0;
  swig_callbackupdate__SWIG_0 = 0;
  swig_callbackupdate__SWIG_1 = 0;
  swig_callbackdoUpdate__SWIG_0 = 0;
  swig_callbackdoUpdate__SWIG_1 = 0;
  swig_callbackraise__SWIG_0 = 0;
  swig_callbackraise__SWIG_1 = 0;
  swig_callbacklower__SWIG_0 = 0;
  swig_callbacklower__SWIG_1 = 0;
  swig_callbackdraw = 0;
  swig_callbackaction = 0;
  swig_callbackenter__SWIG_0 = 0;
  swig_callbackenter__SWIG_1 = 0;
  swig_callbackpaint__SWIG_0 = 0;
  swig_callbackpaint__SWIG_1 = 0;
}

SwigDirector_Button::SwigDirector_Button(int _w, int _h, int _x, int _y, double angle, RGBATexture *_tex) : Button(_w, _h, _x, _y, angle, _tex), Swig::Director() {
  swig_init_callbacks();
}

SwigDirector_Button::~SwigDirector_Button() {
  
}


void SwigDirector_Button::outline() {
  if (!swig_callbackoutline) {
    Widget::outline();
    return;
  } else {
    swig_callbackoutline();
  }
}

void SwigDirector_Button::update(Widget *target) {
  void * jtarget = 0 ;
  
  if (!swig_callbackupdate__SWIG_0) {
    Widget::update(target);
    return;
  } else {
    jtarget = (void *) target; 
    swig_callbackupdate__SWIG_0(jtarget);
  }
}

void SwigDirector_Button::doUpdate(Widget *target) {
  void * jtarget = 0 ;
  
  if (!swig_callbackdoUpdate__SWIG_0) {
    Widget::doUpdate(target);
    return;
  } else {
    jtarget = (void *) target; 
    swig_callbackdoUpdate__SWIG_0(jtarget);
  }
}

void SwigDirector_Button::raise(Widget *widget) {
  void * jwidget = 0 ;
  
  if (!swig_callbackraise__SWIG_0) {
    Widget::raise(widget);
    return;
  } else {
    jwidget = (void *) widget; 
    swig_callbackraise__SWIG_0(jwidget);
  }
}

void SwigDirector_Button::lower(Widget *widget) {
  void * jwidget = 0 ;
  
  if (!swig_callbacklower__SWIG_0) {
    Widget::lower(widget);
    return;
  } else {
    jwidget = (void *) widget; 
    swig_callbacklower__SWIG_0(jwidget);
  }
}

void SwigDirector_Button::draw() {
  if (!swig_callbackdraw) {
    Button::draw();
    return;
  } else {
    swig_callbackdraw();
  }
}

void SwigDirector_Button::action(Gesture *gesture) {
  void * jgesture = 0 ;
  
  if (!swig_callbackaction) {
    Button::action(gesture);
    return;
  } else {
    jgesture = (void *) gesture; 
    swig_callbackaction(jgesture);
  }
}

void SwigDirector_Button::enter(double z) {
  double jz  ;
  
  if (!swig_callbackenter__SWIG_0) {
    Widget::enter(z);
    return;
  } else {
    jz = z;
    swig_callbackenter__SWIG_0(jz);
  }
}

void SwigDirector_Button::paint(bool update_stencil) {
  unsigned int jupdate_stencil  ;
  
  if (!swig_callbackpaint__SWIG_0) {
    Widget::paint(update_stencil);
    return;
  } else {
    jupdate_stencil = update_stencil;
    swig_callbackpaint__SWIG_0(jupdate_stencil);
  }
}

void SwigDirector_Button::tap(Vector pos, int id) {
  void * jpos  ;
  int jid  ;
  
  if (!swig_callbacktap) {
    Button::tap(pos,id);
    return;
  } else {
    jpos = (void *)&pos; 
    jid = id;
    swig_callbacktap(jpos, jid);
  }
}

void SwigDirector_Button::release() {
  if (!swig_callbackrelease) {
    Button::release();
    return;
  } else {
    swig_callbackrelease();
  }
}

void SwigDirector_Button::swig_connect_director(SWIG_Callback0_t callbackoutline, SWIG_Callback1_t callbackupdate__SWIG_0, SWIG_Callback2_t callbackupdate__SWIG_1, SWIG_Callback3_t callbackdoUpdate__SWIG_0, SWIG_Callback4_t callbackdoUpdate__SWIG_1, SWIG_Callback5_t callbackraise__SWIG_0, SWIG_Callback6_t callbackraise__SWIG_1, SWIG_Callback7_t callbacklower__SWIG_0, SWIG_Callback8_t callbacklower__SWIG_1, SWIG_Callback9_t callbackdraw, SWIG_Callback10_t callbackaction, SWIG_Callback11_t callbackenter__SWIG_0, SWIG_Callback12_t callbackenter__SWIG_1, SWIG_Callback13_t callbackpaint__SWIG_0, SWIG_Callback14_t callbackpaint__SWIG_1, SWIG_Callback15_t callbacktap, SWIG_Callback16_t callbackrelease) {
  swig_callbackoutline = callbackoutline;
  swig_callbackupdate__SWIG_0 = callbackupdate__SWIG_0;
  swig_callbackupdate__SWIG_1 = callbackupdate__SWIG_1;
  swig_callbackdoUpdate__SWIG_0 = callbackdoUpdate__SWIG_0;
  swig_callbackdoUpdate__SWIG_1 = callbackdoUpdate__SWIG_1;
  swig_callbackraise__SWIG_0 = callbackraise__SWIG_0;
  swig_callbackraise__SWIG_1 = callbackraise__SWIG_1;
  swig_callbacklower__SWIG_0 = callbacklower__SWIG_0;
  swig_callbacklower__SWIG_1 = callbacklower__SWIG_1;
  swig_callbackdraw = callbackdraw;
  swig_callbackaction = callbackaction;
  swig_callbackenter__SWIG_0 = callbackenter__SWIG_0;
  swig_callbackenter__SWIG_1 = callbackenter__SWIG_1;
  swig_callbackpaint__SWIG_0 = callbackpaint__SWIG_0;
  swig_callbackpaint__SWIG_1 = callbackpaint__SWIG_1;
  swig_callbacktap = callbacktap;
  swig_callbackrelease = callbackrelease;
}

void SwigDirector_Button::swig_init_callbacks() {
  swig_callbackoutline = 0;
  swig_callbackupdate__SWIG_0 = 0;
  swig_callbackupdate__SWIG_1 = 0;
  swig_callbackdoUpdate__SWIG_0 = 0;
  swig_callbackdoUpdate__SWIG_1 = 0;
  swig_callbackraise__SWIG_0 = 0;
  swig_callbackraise__SWIG_1 = 0;
  swig_callbacklower__SWIG_0 = 0;
  swig_callbacklower__SWIG_1 = 0;
  swig_callbackdraw = 0;
  swig_callbackaction = 0;
  swig_callbackenter__SWIG_0 = 0;
  swig_callbackenter__SWIG_1 = 0;
  swig_callbackpaint__SWIG_0 = 0;
  swig_callbackpaint__SWIG_1 = 0;
  swig_callbacktap = 0;
  swig_callbackrelease = 0;
}

SwigDirector_Tile::SwigDirector_Tile(int _w, int _h, int _x, int _y, double angle, RGBATexture *_tex, int _mode) : Tile(_w, _h, _x, _y, angle, _tex, _mode), Swig::Director() {
  swig_init_callbacks();
}

SwigDirector_Tile::~SwigDirector_Tile() {
  
}


void SwigDirector_Tile::outline() {
  if (!swig_callbackoutline) {
    Widget::outline();
    return;
  } else {
    swig_callbackoutline();
  }
}

void SwigDirector_Tile::update(Widget *target) {
  void * jtarget = 0 ;
  
  if (!swig_callbackupdate__SWIG_0) {
    Widget::update(target);
    return;
  } else {
    jtarget = (void *) target; 
    swig_callbackupdate__SWIG_0(jtarget);
  }
}

void SwigDirector_Tile::doUpdate(Widget *target) {
  void * jtarget = 0 ;
  
  if (!swig_callbackdoUpdate__SWIG_0) {
    Widget::doUpdate(target);
    return;
  } else {
    jtarget = (void *) target; 
    swig_callbackdoUpdate__SWIG_0(jtarget);
  }
}

void SwigDirector_Tile::raise(Widget *widget) {
  void * jwidget = 0 ;
  
  if (!swig_callbackraise__SWIG_0) {
    Widget::raise(widget);
    return;
  } else {
    jwidget = (void *) widget; 
    swig_callbackraise__SWIG_0(jwidget);
  }
}

void SwigDirector_Tile::lower(Widget *widget) {
  void * jwidget = 0 ;
  
  if (!swig_callbacklower__SWIG_0) {
    Widget::lower(widget);
    return;
  } else {
    jwidget = (void *) widget; 
    swig_callbacklower__SWIG_0(jwidget);
  }
}

void SwigDirector_Tile::draw() {
  if (!swig_callbackdraw) {
    Button::draw();
    return;
  } else {
    swig_callbackdraw();
  }
}

void SwigDirector_Tile::action(Gesture *gesture) {
  void * jgesture = 0 ;
  
  if (!swig_callbackaction) {
    Tile::action(gesture);
    return;
  } else {
    jgesture = (void *) gesture; 
    swig_callbackaction(jgesture);
  }
}

void SwigDirector_Tile::enter(double z) {
  double jz  ;
  
  if (!swig_callbackenter__SWIG_0) {
    Widget::enter(z);
    return;
  } else {
    jz = z;
    swig_callbackenter__SWIG_0(jz);
  }
}

void SwigDirector_Tile::paint(bool update_stencil) {
  unsigned int jupdate_stencil  ;
  
  if (!swig_callbackpaint__SWIG_0) {
    Tile::paint(update_stencil);
    return;
  } else {
    jupdate_stencil = update_stencil;
    swig_callbackpaint__SWIG_0(jupdate_stencil);
  }
}

void SwigDirector_Tile::tap(Vector pos, int id) {
  void * jpos  ;
  int jid  ;
  
  if (!swig_callbacktap) {
    Tile::tap(pos,id);
    return;
  } else {
    jpos = (void *)&pos; 
    jid = id;
    swig_callbacktap(jpos, jid);
  }
}

void SwigDirector_Tile::release() {
  if (!swig_callbackrelease) {
    Button::release();
    return;
  } else {
    swig_callbackrelease();
  }
}

void SwigDirector_Tile::apply(Vector delta) {
  void * jdelta  ;
  
  if (!swig_callbackapply) {
    Tile::apply(delta);
    return;
  } else {
    jdelta = (void *)&delta; 
    swig_callbackapply(jdelta);
  }
}

void SwigDirector_Tile::swig_connect_director(SWIG_Callback0_t callbackoutline, SWIG_Callback1_t callbackupdate__SWIG_0, SWIG_Callback2_t callbackupdate__SWIG_1, SWIG_Callback3_t callbackdoUpdate__SWIG_0, SWIG_Callback4_t callbackdoUpdate__SWIG_1, SWIG_Callback5_t callbackraise__SWIG_0, SWIG_Callback6_t callbackraise__SWIG_1, SWIG_Callback7_t callbacklower__SWIG_0, SWIG_Callback8_t callbacklower__SWIG_1, SWIG_Callback9_t callbackdraw, SWIG_Callback10_t callbackaction, SWIG_Callback11_t callbackenter__SWIG_0, SWIG_Callback12_t callbackenter__SWIG_1, SWIG_Callback13_t callbackpaint__SWIG_0, SWIG_Callback14_t callbackpaint__SWIG_1, SWIG_Callback15_t callbacktap, SWIG_Callback16_t callbackrelease, SWIG_Callback17_t callbackapply) {
  swig_callbackoutline = callbackoutline;
  swig_callbackupdate__SWIG_0 = callbackupdate__SWIG_0;
  swig_callbackupdate__SWIG_1 = callbackupdate__SWIG_1;
  swig_callbackdoUpdate__SWIG_0 = callbackdoUpdate__SWIG_0;
  swig_callbackdoUpdate__SWIG_1 = callbackdoUpdate__SWIG_1;
  swig_callbackraise__SWIG_0 = callbackraise__SWIG_0;
  swig_callbackraise__SWIG_1 = callbackraise__SWIG_1;
  swig_callbacklower__SWIG_0 = callbacklower__SWIG_0;
  swig_callbacklower__SWIG_1 = callbacklower__SWIG_1;
  swig_callbackdraw = callbackdraw;
  swig_callbackaction = callbackaction;
  swig_callbackenter__SWIG_0 = callbackenter__SWIG_0;
  swig_callbackenter__SWIG_1 = callbackenter__SWIG_1;
  swig_callbackpaint__SWIG_0 = callbackpaint__SWIG_0;
  swig_callbackpaint__SWIG_1 = callbackpaint__SWIG_1;
  swig_callbacktap = callbacktap;
  swig_callbackrelease = callbackrelease;
  swig_callbackapply = callbackapply;
}

void SwigDirector_Tile::swig_init_callbacks() {
  swig_callbackoutline = 0;
  swig_callbackupdate__SWIG_0 = 0;
  swig_callbackupdate__SWIG_1 = 0;
  swig_callbackdoUpdate__SWIG_0 = 0;
  swig_callbackdoUpdate__SWIG_1 = 0;
  swig_callbackraise__SWIG_0 = 0;
  swig_callbackraise__SWIG_1 = 0;
  swig_callbacklower__SWIG_0 = 0;
  swig_callbacklower__SWIG_1 = 0;
  swig_callbackdraw = 0;
  swig_callbackaction = 0;
  swig_callbackenter__SWIG_0 = 0;
  swig_callbackenter__SWIG_1 = 0;
  swig_callbackpaint__SWIG_0 = 0;
  swig_callbackpaint__SWIG_1 = 0;
  swig_callbacktap = 0;
  swig_callbackrelease = 0;
  swig_callbackapply = 0;
}

SwigDirector_Container::SwigDirector_Container(int w, int h, int x, int y, double angle, RGBATexture *tex, int mode) : Container(w, h, x, y, angle, tex, mode), Swig::Director() {
  swig_init_callbacks();
}

SwigDirector_Container::~SwigDirector_Container() {
  
}


void SwigDirector_Container::outline() {
  if (!swig_callbackoutline) {
    Widget::outline();
    return;
  } else {
    swig_callbackoutline();
  }
}

void SwigDirector_Container::update(Widget *target) {
  void * jtarget = 0 ;
  
  if (!swig_callbackupdate__SWIG_0) {
    Widget::update(target);
    return;
  } else {
    jtarget = (void *) target; 
    swig_callbackupdate__SWIG_0(jtarget);
  }
}

void SwigDirector_Container::doUpdate(Widget *target) {
  void * jtarget = 0 ;
  
  if (!swig_callbackdoUpdate__SWIG_0) {
    Container::doUpdate(target);
    return;
  } else {
    jtarget = (void *) target; 
    swig_callbackdoUpdate__SWIG_0(jtarget);
  }
}

void SwigDirector_Container::raise(Widget *widget) {
  void * jwidget = 0 ;
  
  if (!swig_callbackraise__SWIG_0) {
    Container::raise(widget);
    return;
  } else {
    jwidget = (void *) widget; 
    swig_callbackraise__SWIG_0(jwidget);
  }
}

void SwigDirector_Container::lower(Widget *widget) {
  void * jwidget = 0 ;
  
  if (!swig_callbacklower__SWIG_0) {
    Container::lower(widget);
    return;
  } else {
    jwidget = (void *) widget; 
    swig_callbacklower__SWIG_0(jwidget);
  }
}

void SwigDirector_Container::draw() {
  if (!swig_callbackdraw) {
    Container::draw();
    return;
  } else {
    swig_callbackdraw();
  }
}

void SwigDirector_Container::action(Gesture *gesture) {
  void * jgesture = 0 ;
  
  if (!swig_callbackaction) {
    Tile::action(gesture);
    return;
  } else {
    jgesture = (void *) gesture; 
    swig_callbackaction(jgesture);
  }
}

void SwigDirector_Container::enter(double z) {
  double jz  ;
  
  if (!swig_callbackenter__SWIG_0) {
    Widget::enter(z);
    return;
  } else {
    jz = z;
    swig_callbackenter__SWIG_0(jz);
  }
}

void SwigDirector_Container::paint(bool update_stencil) {
  unsigned int jupdate_stencil  ;
  
  if (!swig_callbackpaint__SWIG_0) {
    Container::paint(update_stencil);
    return;
  } else {
    jupdate_stencil = update_stencil;
    swig_callbackpaint__SWIG_0(jupdate_stencil);
  }
}

void SwigDirector_Container::tap(Vector vec, int id) {
  void * jvec  ;
  int jid  ;
  
  if (!swig_callbacktap) {
    Container::tap(vec,id);
    return;
  } else {
    jvec = (void *)&vec; 
    jid = id;
    swig_callbacktap(jvec, jid);
  }
}

void SwigDirector_Container::release() {
  if (!swig_callbackrelease) {
    Button::release();
    return;
  } else {
    swig_callbackrelease();
  }
}

void SwigDirector_Container::apply(Vector delta) {
  void * jdelta  ;
  
  if (!swig_callbackapply) {
    Tile::apply(delta);
    return;
  } else {
    jdelta = (void *)&delta; 
    swig_callbackapply(jdelta);
  }
}

void SwigDirector_Container::swig_connect_director(SWIG_Callback0_t callbackoutline, SWIG_Callback1_t callbackupdate__SWIG_0, SWIG_Callback2_t callbackupdate__SWIG_1, SWIG_Callback3_t callbackdoUpdate__SWIG_0, SWIG_Callback4_t callbackdoUpdate__SWIG_1, SWIG_Callback5_t callbackraise__SWIG_0, SWIG_Callback6_t callbackraise__SWIG_1, SWIG_Callback7_t callbacklower__SWIG_0, SWIG_Callback8_t callbacklower__SWIG_1, SWIG_Callback9_t callbackdraw, SWIG_Callback10_t callbackaction, SWIG_Callback11_t callbackenter__SWIG_0, SWIG_Callback12_t callbackenter__SWIG_1, SWIG_Callback13_t callbackpaint__SWIG_0, SWIG_Callback14_t callbackpaint__SWIG_1, SWIG_Callback15_t callbacktap, SWIG_Callback16_t callbackrelease, SWIG_Callback17_t callbackapply) {
  swig_callbackoutline = callbackoutline;
  swig_callbackupdate__SWIG_0 = callbackupdate__SWIG_0;
  swig_callbackupdate__SWIG_1 = callbackupdate__SWIG_1;
  swig_callbackdoUpdate__SWIG_0 = callbackdoUpdate__SWIG_0;
  swig_callbackdoUpdate__SWIG_1 = callbackdoUpdate__SWIG_1;
  swig_callbackraise__SWIG_0 = callbackraise__SWIG_0;
  swig_callbackraise__SWIG_1 = callbackraise__SWIG_1;
  swig_callbacklower__SWIG_0 = callbacklower__SWIG_0;
  swig_callbacklower__SWIG_1 = callbacklower__SWIG_1;
  swig_callbackdraw = callbackdraw;
  swig_callbackaction = callbackaction;
  swig_callbackenter__SWIG_0 = callbackenter__SWIG_0;
  swig_callbackenter__SWIG_1 = callbackenter__SWIG_1;
  swig_callbackpaint__SWIG_0 = callbackpaint__SWIG_0;
  swig_callbackpaint__SWIG_1 = callbackpaint__SWIG_1;
  swig_callbacktap = callbacktap;
  swig_callbackrelease = callbackrelease;
  swig_callbackapply = callbackapply;
}

void SwigDirector_Container::swig_init_callbacks() {
  swig_callbackoutline = 0;
  swig_callbackupdate__SWIG_0 = 0;
  swig_callbackupdate__SWIG_1 = 0;
  swig_callbackdoUpdate__SWIG_0 = 0;
  swig_callbackdoUpdate__SWIG_1 = 0;
  swig_callbackraise__SWIG_0 = 0;
  swig_callbackraise__SWIG_1 = 0;
  swig_callbacklower__SWIG_0 = 0;
  swig_callbacklower__SWIG_1 = 0;
  swig_callbackdraw = 0;
  swig_callbackaction = 0;
  swig_callbackenter__SWIG_0 = 0;
  swig_callbackenter__SWIG_1 = 0;
  swig_callbackpaint__SWIG_0 = 0;
  swig_callbackpaint__SWIG_1 = 0;
  swig_callbacktap = 0;
  swig_callbackrelease = 0;
  swig_callbackapply = 0;
}

SwigDirector_Slider::SwigDirector_Slider(int _w, int _h, int _x, int _y, double angle, RGBATexture *_tex) : Slider(_w, _h, _x, _y, angle, _tex), Swig::Director() {
  swig_init_callbacks();
}

SwigDirector_Slider::~SwigDirector_Slider() {
  
}


void SwigDirector_Slider::outline() {
  if (!swig_callbackoutline) {
    Widget::outline();
    return;
  } else {
    swig_callbackoutline();
  }
}

void SwigDirector_Slider::update(Widget *target) {
  void * jtarget = 0 ;
  
  if (!swig_callbackupdate__SWIG_0) {
    Widget::update(target);
    return;
  } else {
    jtarget = (void *) target; 
    swig_callbackupdate__SWIG_0(jtarget);
  }
}

void SwigDirector_Slider::doUpdate(Widget *target) {
  void * jtarget = 0 ;
  
  if (!swig_callbackdoUpdate__SWIG_0) {
    Widget::doUpdate(target);
    return;
  } else {
    jtarget = (void *) target; 
    swig_callbackdoUpdate__SWIG_0(jtarget);
  }
}

void SwigDirector_Slider::raise(Widget *widget) {
  void * jwidget = 0 ;
  
  if (!swig_callbackraise__SWIG_0) {
    Widget::raise(widget);
    return;
  } else {
    jwidget = (void *) widget; 
    swig_callbackraise__SWIG_0(jwidget);
  }
}

void SwigDirector_Slider::lower(Widget *widget) {
  void * jwidget = 0 ;
  
  if (!swig_callbacklower__SWIG_0) {
    Widget::lower(widget);
    return;
  } else {
    jwidget = (void *) widget; 
    swig_callbacklower__SWIG_0(jwidget);
  }
}

void SwigDirector_Slider::draw() {
  if (!swig_callbackdraw) {
    Slider::draw();
    return;
  } else {
    swig_callbackdraw();
  }
}

void SwigDirector_Slider::action(Gesture *gesture) {
  void * jgesture = 0 ;
  
  if (!swig_callbackaction) {
    Slider::action(gesture);
    return;
  } else {
    jgesture = (void *) gesture; 
    swig_callbackaction(jgesture);
  }
}

void SwigDirector_Slider::enter(double z) {
  double jz  ;
  
  if (!swig_callbackenter__SWIG_0) {
    Widget::enter(z);
    return;
  } else {
    jz = z;
    swig_callbackenter__SWIG_0(jz);
  }
}

void SwigDirector_Slider::paint(bool update_stencil) {
  unsigned int jupdate_stencil  ;
  
  if (!swig_callbackpaint__SWIG_0) {
    Widget::paint(update_stencil);
    return;
  } else {
    jupdate_stencil = update_stencil;
    swig_callbackpaint__SWIG_0(jupdate_stencil);
  }
}

void SwigDirector_Slider::swig_connect_director(SWIG_Callback0_t callbackoutline, SWIG_Callback1_t callbackupdate__SWIG_0, SWIG_Callback2_t callbackupdate__SWIG_1, SWIG_Callback3_t callbackdoUpdate__SWIG_0, SWIG_Callback4_t callbackdoUpdate__SWIG_1, SWIG_Callback5_t callbackraise__SWIG_0, SWIG_Callback6_t callbackraise__SWIG_1, SWIG_Callback7_t callbacklower__SWIG_0, SWIG_Callback8_t callbacklower__SWIG_1, SWIG_Callback9_t callbackdraw, SWIG_Callback10_t callbackaction, SWIG_Callback11_t callbackenter__SWIG_0, SWIG_Callback12_t callbackenter__SWIG_1, SWIG_Callback13_t callbackpaint__SWIG_0, SWIG_Callback14_t callbackpaint__SWIG_1) {
  swig_callbackoutline = callbackoutline;
  swig_callbackupdate__SWIG_0 = callbackupdate__SWIG_0;
  swig_callbackupdate__SWIG_1 = callbackupdate__SWIG_1;
  swig_callbackdoUpdate__SWIG_0 = callbackdoUpdate__SWIG_0;
  swig_callbackdoUpdate__SWIG_1 = callbackdoUpdate__SWIG_1;
  swig_callbackraise__SWIG_0 = callbackraise__SWIG_0;
  swig_callbackraise__SWIG_1 = callbackraise__SWIG_1;
  swig_callbacklower__SWIG_0 = callbacklower__SWIG_0;
  swig_callbacklower__SWIG_1 = callbacklower__SWIG_1;
  swig_callbackdraw = callbackdraw;
  swig_callbackaction = callbackaction;
  swig_callbackenter__SWIG_0 = callbackenter__SWIG_0;
  swig_callbackenter__SWIG_1 = callbackenter__SWIG_1;
  swig_callbackpaint__SWIG_0 = callbackpaint__SWIG_0;
  swig_callbackpaint__SWIG_1 = callbackpaint__SWIG_1;
}

void SwigDirector_Slider::swig_init_callbacks() {
  swig_callbackoutline = 0;
  swig_callbackupdate__SWIG_0 = 0;
  swig_callbackupdate__SWIG_1 = 0;
  swig_callbackdoUpdate__SWIG_0 = 0;
  swig_callbackdoUpdate__SWIG_1 = 0;
  swig_callbackraise__SWIG_0 = 0;
  swig_callbackraise__SWIG_1 = 0;
  swig_callbacklower__SWIG_0 = 0;
  swig_callbacklower__SWIG_1 = 0;
  swig_callbackdraw = 0;
  swig_callbackaction = 0;
  swig_callbackenter__SWIG_0 = 0;
  swig_callbackenter__SWIG_1 = 0;
  swig_callbackpaint__SWIG_0 = 0;
  swig_callbackpaint__SWIG_1 = 0;
}

SwigDirector_Dial::SwigDirector_Dial(int _r, int _x, int _y, double _angle, RGBATexture *_tex) : Dial(_r, _x, _y, _angle, _tex), Swig::Director() {
  swig_init_callbacks();
}

SwigDirector_Dial::~SwigDirector_Dial() {
  
}


void SwigDirector_Dial::outline() {
  if (!swig_callbackoutline) {
    Dial::outline();
    return;
  } else {
    swig_callbackoutline();
  }
}

void SwigDirector_Dial::update(Widget *target) {
  void * jtarget = 0 ;
  
  if (!swig_callbackupdate__SWIG_0) {
    Widget::update(target);
    return;
  } else {
    jtarget = (void *) target; 
    swig_callbackupdate__SWIG_0(jtarget);
  }
}

void SwigDirector_Dial::doUpdate(Widget *target) {
  void * jtarget = 0 ;
  
  if (!swig_callbackdoUpdate__SWIG_0) {
    Widget::doUpdate(target);
    return;
  } else {
    jtarget = (void *) target; 
    swig_callbackdoUpdate__SWIG_0(jtarget);
  }
}

void SwigDirector_Dial::raise(Widget *widget) {
  void * jwidget = 0 ;
  
  if (!swig_callbackraise__SWIG_0) {
    Widget::raise(widget);
    return;
  } else {
    jwidget = (void *) widget; 
    swig_callbackraise__SWIG_0(jwidget);
  }
}

void SwigDirector_Dial::lower(Widget *widget) {
  void * jwidget = 0 ;
  
  if (!swig_callbacklower__SWIG_0) {
    Widget::lower(widget);
    return;
  } else {
    jwidget = (void *) widget; 
    swig_callbacklower__SWIG_0(jwidget);
  }
}

void SwigDirector_Dial::draw() {
  if (!swig_callbackdraw) {
    Dial::draw();
    return;
  } else {
    swig_callbackdraw();
  }
}

void SwigDirector_Dial::action(Gesture *gesture) {
  void * jgesture = 0 ;
  
  if (!swig_callbackaction) {
    Dial::action(gesture);
    return;
  } else {
    jgesture = (void *) gesture; 
    swig_callbackaction(jgesture);
  }
}

void SwigDirector_Dial::enter(double z) {
  double jz  ;
  
  if (!swig_callbackenter__SWIG_0) {
    Widget::enter(z);
    return;
  } else {
    jz = z;
    swig_callbackenter__SWIG_0(jz);
  }
}

void SwigDirector_Dial::paint(bool update_stencil) {
  unsigned int jupdate_stencil  ;
  
  if (!swig_callbackpaint__SWIG_0) {
    Widget::paint(update_stencil);
    return;
  } else {
    jupdate_stencil = update_stencil;
    swig_callbackpaint__SWIG_0(jupdate_stencil);
  }
}

void SwigDirector_Dial::swig_connect_director(SWIG_Callback0_t callbackoutline, SWIG_Callback1_t callbackupdate__SWIG_0, SWIG_Callback2_t callbackupdate__SWIG_1, SWIG_Callback3_t callbackdoUpdate__SWIG_0, SWIG_Callback4_t callbackdoUpdate__SWIG_1, SWIG_Callback5_t callbackraise__SWIG_0, SWIG_Callback6_t callbackraise__SWIG_1, SWIG_Callback7_t callbacklower__SWIG_0, SWIG_Callback8_t callbacklower__SWIG_1, SWIG_Callback9_t callbackdraw, SWIG_Callback10_t callbackaction, SWIG_Callback11_t callbackenter__SWIG_0, SWIG_Callback12_t callbackenter__SWIG_1, SWIG_Callback13_t callbackpaint__SWIG_0, SWIG_Callback14_t callbackpaint__SWIG_1) {
  swig_callbackoutline = callbackoutline;
  swig_callbackupdate__SWIG_0 = callbackupdate__SWIG_0;
  swig_callbackupdate__SWIG_1 = callbackupdate__SWIG_1;
  swig_callbackdoUpdate__SWIG_0 = callbackdoUpdate__SWIG_0;
  swig_callbackdoUpdate__SWIG_1 = callbackdoUpdate__SWIG_1;
  swig_callbackraise__SWIG_0 = callbackraise__SWIG_0;
  swig_callbackraise__SWIG_1 = callbackraise__SWIG_1;
  swig_callbacklower__SWIG_0 = callbacklower__SWIG_0;
  swig_callbacklower__SWIG_1 = callbacklower__SWIG_1;
  swig_callbackdraw = callbackdraw;
  swig_callbackaction = callbackaction;
  swig_callbackenter__SWIG_0 = callbackenter__SWIG_0;
  swig_callbackenter__SWIG_1 = callbackenter__SWIG_1;
  swig_callbackpaint__SWIG_0 = callbackpaint__SWIG_0;
  swig_callbackpaint__SWIG_1 = callbackpaint__SWIG_1;
}

void SwigDirector_Dial::swig_init_callbacks() {
  swig_callbackoutline = 0;
  swig_callbackupdate__SWIG_0 = 0;
  swig_callbackupdate__SWIG_1 = 0;
  swig_callbackdoUpdate__SWIG_0 = 0;
  swig_callbackdoUpdate__SWIG_1 = 0;
  swig_callbackraise__SWIG_0 = 0;
  swig_callbackraise__SWIG_1 = 0;
  swig_callbacklower__SWIG_0 = 0;
  swig_callbacklower__SWIG_1 = 0;
  swig_callbackdraw = 0;
  swig_callbackaction = 0;
  swig_callbackenter__SWIG_0 = 0;
  swig_callbackenter__SWIG_1 = 0;
  swig_callbackpaint__SWIG_0 = 0;
  swig_callbackpaint__SWIG_1 = 0;
}

SwigDirector_MasterContainer::SwigDirector_MasterContainer(int w, int h, int defaults) : MasterContainer(w, h, defaults), Swig::Director() {
  swig_init_callbacks();
}

SwigDirector_MasterContainer::~SwigDirector_MasterContainer() {
  
}


void SwigDirector_MasterContainer::outline() {
  if (!swig_callbackoutline) {
    Widget::outline();
    return;
  } else {
    swig_callbackoutline();
  }
}

void SwigDirector_MasterContainer::update(Widget *target) {
  void * jtarget = 0 ;
  
  if (!swig_callbackupdate__SWIG_0) {
    Widget::update(target);
    return;
  } else {
    jtarget = (void *) target; 
    swig_callbackupdate__SWIG_0(jtarget);
  }
}

void SwigDirector_MasterContainer::doUpdate(Widget *target) {
  void * jtarget = 0 ;
  
  if (!swig_callbackdoUpdate__SWIG_0) {
    MasterContainer::doUpdate(target);
    return;
  } else {
    jtarget = (void *) target; 
    swig_callbackdoUpdate__SWIG_0(jtarget);
  }
}

void SwigDirector_MasterContainer::raise(Widget *widget) {
  void * jwidget = 0 ;
  
  if (!swig_callbackraise__SWIG_0) {
    Container::raise(widget);
    return;
  } else {
    jwidget = (void *) widget; 
    swig_callbackraise__SWIG_0(jwidget);
  }
}

void SwigDirector_MasterContainer::lower(Widget *widget) {
  void * jwidget = 0 ;
  
  if (!swig_callbacklower__SWIG_0) {
    Container::lower(widget);
    return;
  } else {
    jwidget = (void *) widget; 
    swig_callbacklower__SWIG_0(jwidget);
  }
}

void SwigDirector_MasterContainer::draw() {
  if (!swig_callbackdraw) {
    Container::draw();
    return;
  } else {
    swig_callbackdraw();
  }
}

void SwigDirector_MasterContainer::action(Gesture *gesture) {
  void * jgesture = 0 ;
  
  if (!swig_callbackaction) {
    Tile::action(gesture);
    return;
  } else {
    jgesture = (void *) gesture; 
    swig_callbackaction(jgesture);
  }
}

void SwigDirector_MasterContainer::enter(double z) {
  double jz  ;
  
  if (!swig_callbackenter__SWIG_0) {
    Widget::enter(z);
    return;
  } else {
    jz = z;
    swig_callbackenter__SWIG_0(jz);
  }
}

void SwigDirector_MasterContainer::paint(bool update_stencil) {
  unsigned int jupdate_stencil  ;
  
  if (!swig_callbackpaint__SWIG_0) {
    Container::paint(update_stencil);
    return;
  } else {
    jupdate_stencil = update_stencil;
    swig_callbackpaint__SWIG_0(jupdate_stencil);
  }
}

void SwigDirector_MasterContainer::tap(Vector vec, int id) {
  void * jvec  ;
  int jid  ;
  
  if (!swig_callbacktap) {
    Container::tap(vec,id);
    return;
  } else {
    jvec = (void *)&vec; 
    jid = id;
    swig_callbacktap(jvec, jid);
  }
}

void SwigDirector_MasterContainer::release() {
  if (!swig_callbackrelease) {
    Button::release();
    return;
  } else {
    swig_callbackrelease();
  }
}

void SwigDirector_MasterContainer::apply(Vector delta) {
  void * jdelta  ;
  
  if (!swig_callbackapply) {
    Tile::apply(delta);
    return;
  } else {
    jdelta = (void *)&delta; 
    swig_callbackapply(jdelta);
  }
}

void SwigDirector_MasterContainer::swig_connect_director(SWIG_Callback0_t callbackoutline, SWIG_Callback1_t callbackupdate__SWIG_0, SWIG_Callback2_t callbackupdate__SWIG_1, SWIG_Callback3_t callbackdoUpdate__SWIG_0, SWIG_Callback4_t callbackdoUpdate__SWIG_1, SWIG_Callback5_t callbackraise__SWIG_0, SWIG_Callback6_t callbackraise__SWIG_1, SWIG_Callback7_t callbacklower__SWIG_0, SWIG_Callback8_t callbacklower__SWIG_1, SWIG_Callback9_t callbackdraw, SWIG_Callback10_t callbackaction, SWIG_Callback11_t callbackenter__SWIG_0, SWIG_Callback12_t callbackenter__SWIG_1, SWIG_Callback13_t callbackpaint__SWIG_0, SWIG_Callback14_t callbackpaint__SWIG_1, SWIG_Callback15_t callbacktap, SWIG_Callback16_t callbackrelease, SWIG_Callback17_t callbackapply) {
  swig_callbackoutline = callbackoutline;
  swig_callbackupdate__SWIG_0 = callbackupdate__SWIG_0;
  swig_callbackupdate__SWIG_1 = callbackupdate__SWIG_1;
  swig_callbackdoUpdate__SWIG_0 = callbackdoUpdate__SWIG_0;
  swig_callbackdoUpdate__SWIG_1 = callbackdoUpdate__SWIG_1;
  swig_callbackraise__SWIG_0 = callbackraise__SWIG_0;
  swig_callbackraise__SWIG_1 = callbackraise__SWIG_1;
  swig_callbacklower__SWIG_0 = callbacklower__SWIG_0;
  swig_callbacklower__SWIG_1 = callbacklower__SWIG_1;
  swig_callbackdraw = callbackdraw;
  swig_callbackaction = callbackaction;
  swig_callbackenter__SWIG_0 = callbackenter__SWIG_0;
  swig_callbackenter__SWIG_1 = callbackenter__SWIG_1;
  swig_callbackpaint__SWIG_0 = callbackpaint__SWIG_0;
  swig_callbackpaint__SWIG_1 = callbackpaint__SWIG_1;
  swig_callbacktap = callbacktap;
  swig_callbackrelease = callbackrelease;
  swig_callbackapply = callbackapply;
}

void SwigDirector_MasterContainer::swig_init_callbacks() {
  swig_callbackoutline = 0;
  swig_callbackupdate__SWIG_0 = 0;
  swig_callbackupdate__SWIG_1 = 0;
  swig_callbackdoUpdate__SWIG_0 = 0;
  swig_callbackdoUpdate__SWIG_1 = 0;
  swig_callbackraise__SWIG_0 = 0;
  swig_callbackraise__SWIG_1 = 0;
  swig_callbacklower__SWIG_0 = 0;
  swig_callbacklower__SWIG_1 = 0;
  swig_callbackdraw = 0;
  swig_callbackaction = 0;
  swig_callbackenter__SWIG_0 = 0;
  swig_callbackenter__SWIG_1 = 0;
  swig_callbackpaint__SWIG_0 = 0;
  swig_callbackpaint__SWIG_1 = 0;
  swig_callbacktap = 0;
  swig_callbackrelease = 0;
  swig_callbackapply = 0;
}

SwigDirector_Window::SwigDirector_Window(int w, int h, std::string title, int use_mouse) : Window(w, h, title, use_mouse), Swig::Director() {
  swig_init_callbacks();
}

SwigDirector_Window::~SwigDirector_Window() {
  
}


void SwigDirector_Window::idle() {
  if (!swig_callbackidle) {
    Window::idle();
    return;
  } else {
    swig_callbackidle();
  }
}

void SwigDirector_Window::display() {
  if (!swig_callbackdisplay) {
    Window::display();
    return;
  } else {
    swig_callbackdisplay();
  }
}

void SwigDirector_Window::reshape(int w, int h) {
  int jw  ;
  int jh  ;
  
  if (!swig_callbackreshape) {
    Window::reshape(w,h);
    return;
  } else {
    jw = w;
    jh = h;
    swig_callbackreshape(jw, jh);
  }
}

void SwigDirector_Window::keyboard(int key, int x, int y) {
  int jkey  ;
  int jx  ;
  int jy  ;
  
  if (!swig_callbackkeyboard) {
    Window::keyboard(key,x,y);
    return;
  } else {
    jkey = key;
    jx = x;
    jy = y;
    swig_callbackkeyboard(jkey, jx, jy);
  }
}

void SwigDirector_Window::mouse(int num, int button, int state, int x, int y) {
  int jnum  ;
  int jbutton  ;
  int jstate  ;
  int jx  ;
  int jy  ;
  
  if (!swig_callbackmouse) {
    Window::mouse(num,button,state,x,y);
    return;
  } else {
    jnum = num;
    jbutton = button;
    jstate = state;
    jx = x;
    jy = y;
    swig_callbackmouse(jnum, jbutton, jstate, jx, jy);
  }
}

void SwigDirector_Window::passive(int num, int x, int y) {
  int jnum  ;
  int jx  ;
  int jy  ;
  
  if (!swig_callbackpassive) {
    Window::passive(num,x,y);
    return;
  } else {
    jnum = num;
    jx = x;
    jy = y;
    swig_callbackpassive(jnum, jx, jy);
  }
}

void SwigDirector_Window::motion(int num, int x, int y) {
  int jnum  ;
  int jx  ;
  int jy  ;
  
  if (!swig_callbackmotion) {
    Window::motion(num,x,y);
    return;
  } else {
    jnum = num;
    jx = x;
    jy = y;
    swig_callbackmotion(jnum, jx, jy);
  }
}

void SwigDirector_Window::entry(int num, int state) {
  int jnum  ;
  int jstate  ;
  
  if (!swig_callbackentry) {
    Window::entry(num,state);
    return;
  } else {
    jnum = num;
    jstate = state;
    swig_callbackentry(jnum, jstate);
  }
}

void SwigDirector_Window::update(Widget *target) {
  void * jtarget = 0 ;
  
  if (!swig_callbackupdate__SWIG_0) {
    Window::update(target);
    return;
  } else {
    jtarget = (void *) target; 
    swig_callbackupdate__SWIG_0(jtarget);
  }
}

void SwigDirector_Window::swig_connect_director(SWIG_Callback0_t callbackidle, SWIG_Callback1_t callbackdisplay, SWIG_Callback2_t callbackreshape, SWIG_Callback3_t callbackkeyboard, SWIG_Callback4_t callbackmouse, SWIG_Callback5_t callbackpassive, SWIG_Callback6_t callbackmotion, SWIG_Callback7_t callbackentry, SWIG_Callback8_t callbackupdate__SWIG_0, SWIG_Callback9_t callbackupdate__SWIG_1) {
  swig_callbackidle = callbackidle;
  swig_callbackdisplay = callbackdisplay;
  swig_callbackreshape = callbackreshape;
  swig_callbackkeyboard = callbackkeyboard;
  swig_callbackmouse = callbackmouse;
  swig_callbackpassive = callbackpassive;
  swig_callbackmotion = callbackmotion;
  swig_callbackentry = callbackentry;
  swig_callbackupdate__SWIG_0 = callbackupdate__SWIG_0;
  swig_callbackupdate__SWIG_1 = callbackupdate__SWIG_1;
}

void SwigDirector_Window::swig_init_callbacks() {
  swig_callbackidle = 0;
  swig_callbackdisplay = 0;
  swig_callbackreshape = 0;
  swig_callbackkeyboard = 0;
  swig_callbackmouse = 0;
  swig_callbackpassive = 0;
  swig_callbackmotion = 0;
  swig_callbackentry = 0;
  swig_callbackupdate__SWIG_0 = 0;
  swig_callbackupdate__SWIG_1 = 0;
}


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT void * SWIGSTDCALL CSharp_new_Vector__SWIG_0(double jarg1, double jarg2, double jarg3) {
  void * jresult ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  _Vector< double > *result = 0 ;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      result = (_Vector< double > *)new _Vector< double >(arg1,arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Vector__SWIG_1(double jarg1, double jarg2) {
  void * jresult ;
  double arg1 ;
  double arg2 ;
  _Vector< double > *result = 0 ;
  
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      result = (_Vector< double > *)new _Vector< double >(arg1,arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Vector__SWIG_2(double jarg1) {
  void * jresult ;
  double arg1 ;
  _Vector< double > *result = 0 ;
  
  arg1 = (double)jarg1; 
  {
    try {
      result = (_Vector< double > *)new _Vector< double >(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Vector__SWIG_3() {
  void * jresult ;
  _Vector< double > *result = 0 ;
  
  {
    try {
      result = (_Vector< double > *)new _Vector< double >();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vector_normalize(void * jarg1) {
  _Vector< double > *arg1 = (_Vector< double > *) 0 ;
  
  arg1 = (_Vector< double > *)jarg1; 
  {
    try {
      (arg1)->normalize();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vector_set__SWIG_0(void * jarg1, double jarg2, double jarg3, double jarg4) {
  _Vector< double > *arg1 = (_Vector< double > *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  
  arg1 = (_Vector< double > *)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      (arg1)->set(arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vector_set__SWIG_1(void * jarg1, double jarg2, double jarg3) {
  _Vector< double > *arg1 = (_Vector< double > *) 0 ;
  double arg2 ;
  double arg3 ;
  
  arg1 = (_Vector< double > *)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      (arg1)->set(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vector_set__SWIG_2(void * jarg1, double jarg2) {
  _Vector< double > *arg1 = (_Vector< double > *) 0 ;
  double arg2 ;
  
  arg1 = (_Vector< double > *)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      (arg1)->set(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vector_set__SWIG_3(void * jarg1) {
  _Vector< double > *arg1 = (_Vector< double > *) 0 ;
  
  arg1 = (_Vector< double > *)jarg1; 
  {
    try {
      (arg1)->set();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT double SWIGSTDCALL CSharp_Vector_length(void * jarg1) {
  double jresult ;
  _Vector< double > *arg1 = (_Vector< double > *) 0 ;
  double result;
  
  arg1 = (_Vector< double > *)jarg1; 
  {
    try {
      result = (double)((_Vector< double > const *)arg1)->length();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vector_rotate(void * jarg1, double jarg2) {
  _Vector< double > *arg1 = (_Vector< double > *) 0 ;
  double arg2 ;
  
  arg1 = (_Vector< double > *)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      (arg1)->rotate(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Vector_round(void * jarg1) {
  void * jresult ;
  _Vector< double > *arg1 = (_Vector< double > *) 0 ;
  _Vector< int > result;
  
  arg1 = (_Vector< double > *)jarg1; 
  {
    try {
      result = (arg1)->round();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new _Vector< int >((const _Vector< int > &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vector_x_set(void * jarg1, double jarg2) {
  _Vector< double > *arg1 = (_Vector< double > *) 0 ;
  double arg2 ;
  
  arg1 = (_Vector< double > *)jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Vector_x_get(void * jarg1) {
  double jresult ;
  _Vector< double > *arg1 = (_Vector< double > *) 0 ;
  double result;
  
  arg1 = (_Vector< double > *)jarg1; 
  result = (double) ((arg1)->x);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vector_y_set(void * jarg1, double jarg2) {
  _Vector< double > *arg1 = (_Vector< double > *) 0 ;
  double arg2 ;
  
  arg1 = (_Vector< double > *)jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Vector_y_get(void * jarg1) {
  double jresult ;
  _Vector< double > *arg1 = (_Vector< double > *) 0 ;
  double result;
  
  arg1 = (_Vector< double > *)jarg1; 
  result = (double) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Vector_z_set(void * jarg1, double jarg2) {
  _Vector< double > *arg1 = (_Vector< double > *) 0 ;
  double arg2 ;
  
  arg1 = (_Vector< double > *)jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->z = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Vector_z_get(void * jarg1) {
  double jresult ;
  _Vector< double > *arg1 = (_Vector< double > *) 0 ;
  double result;
  
  arg1 = (_Vector< double > *)jarg1; 
  result = (double) ((arg1)->z);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Vector(void * jarg1) {
  _Vector< double > *arg1 = (_Vector< double > *) 0 ;
  
  arg1 = (_Vector< double > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_IntVector__SWIG_0(int jarg1, int jarg2, int jarg3) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  _Vector< int > *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = (_Vector< int > *)new _Vector< int >(arg1,arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_IntVector__SWIG_1(int jarg1, int jarg2) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  _Vector< int > *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      result = (_Vector< int > *)new _Vector< int >(arg1,arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_IntVector__SWIG_2(int jarg1) {
  void * jresult ;
  int arg1 ;
  _Vector< int > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      result = (_Vector< int > *)new _Vector< int >(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_IntVector__SWIG_3() {
  void * jresult ;
  _Vector< int > *result = 0 ;
  
  {
    try {
      result = (_Vector< int > *)new _Vector< int >();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_IntVector_normalize(void * jarg1) {
  _Vector< int > *arg1 = (_Vector< int > *) 0 ;
  
  arg1 = (_Vector< int > *)jarg1; 
  {
    try {
      (arg1)->normalize();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_IntVector_set__SWIG_0(void * jarg1, int jarg2, int jarg3, int jarg4) {
  _Vector< int > *arg1 = (_Vector< int > *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (_Vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      (arg1)->set(arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_IntVector_set__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  _Vector< int > *arg1 = (_Vector< int > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (_Vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      (arg1)->set(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_IntVector_set__SWIG_2(void * jarg1, int jarg2) {
  _Vector< int > *arg1 = (_Vector< int > *) 0 ;
  int arg2 ;
  
  arg1 = (_Vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      (arg1)->set(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_IntVector_set__SWIG_3(void * jarg1) {
  _Vector< int > *arg1 = (_Vector< int > *) 0 ;
  
  arg1 = (_Vector< int > *)jarg1; 
  {
    try {
      (arg1)->set();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT double SWIGSTDCALL CSharp_IntVector_length(void * jarg1) {
  double jresult ;
  _Vector< int > *arg1 = (_Vector< int > *) 0 ;
  double result;
  
  arg1 = (_Vector< int > *)jarg1; 
  {
    try {
      result = (double)((_Vector< int > const *)arg1)->length();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_IntVector_rotate(void * jarg1, double jarg2) {
  _Vector< int > *arg1 = (_Vector< int > *) 0 ;
  double arg2 ;
  
  arg1 = (_Vector< int > *)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      (arg1)->rotate(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_IntVector_round(void * jarg1) {
  void * jresult ;
  _Vector< int > *arg1 = (_Vector< int > *) 0 ;
  _Vector< int > result;
  
  arg1 = (_Vector< int > *)jarg1; 
  {
    try {
      result = (arg1)->round();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new _Vector< int >((const _Vector< int > &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_IntVector_x_set(void * jarg1, int jarg2) {
  _Vector< int > *arg1 = (_Vector< int > *) 0 ;
  int arg2 ;
  
  arg1 = (_Vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_IntVector_x_get(void * jarg1) {
  int jresult ;
  _Vector< int > *arg1 = (_Vector< int > *) 0 ;
  int result;
  
  arg1 = (_Vector< int > *)jarg1; 
  result = (int) ((arg1)->x);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_IntVector_y_set(void * jarg1, int jarg2) {
  _Vector< int > *arg1 = (_Vector< int > *) 0 ;
  int arg2 ;
  
  arg1 = (_Vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_IntVector_y_get(void * jarg1) {
  int jresult ;
  _Vector< int > *arg1 = (_Vector< int > *) 0 ;
  int result;
  
  arg1 = (_Vector< int > *)jarg1; 
  result = (int) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_IntVector_z_set(void * jarg1, int jarg2) {
  _Vector< int > *arg1 = (_Vector< int > *) 0 ;
  int arg2 ;
  
  arg1 = (_Vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->z = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_IntVector_z_get(void * jarg1) {
  int jresult ;
  _Vector< int > *arg1 = (_Vector< int > *) 0 ;
  int result;
  
  arg1 = (_Vector< int > *)jarg1; 
  result = (int) ((arg1)->z);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_IntVector(void * jarg1) {
  _Vector< int > *arg1 = (_Vector< int > *) 0 ;
  
  arg1 = (_Vector< int > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorVector_Clear(void * jarg1) {
  std::vector< Vector > *arg1 = (std::vector< Vector > *) 0 ;
  
  arg1 = (std::vector< Vector > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorVector_Add(void * jarg1, void * jarg2) {
  std::vector< Vector > *arg1 = (std::vector< Vector > *) 0 ;
  _Vector< double > *arg2 = 0 ;
  
  arg1 = (std::vector< Vector > *)jarg1; 
  arg2 = (_Vector< double > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "_Vector< double > const & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->push_back((_Vector< double > const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_vectorVector_size(void * jarg1) {
  unsigned long jresult ;
  std::vector< Vector > *arg1 = (std::vector< Vector > *) 0 ;
  std::vector< _Vector< double > >::size_type result;
  
  arg1 = (std::vector< Vector > *)jarg1; 
  {
    try {
      result = ((std::vector< Vector > const *)arg1)->size();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_vectorVector_capacity(void * jarg1) {
  unsigned long jresult ;
  std::vector< Vector > *arg1 = (std::vector< Vector > *) 0 ;
  std::vector< _Vector< double > >::size_type result;
  
  arg1 = (std::vector< Vector > *)jarg1; 
  {
    try {
      result = ((std::vector< Vector > const *)arg1)->capacity();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorVector_reserve(void * jarg1, unsigned long jarg2) {
  std::vector< Vector > *arg1 = (std::vector< Vector > *) 0 ;
  std::vector< _Vector< double > >::size_type arg2 ;
  
  arg1 = (std::vector< Vector > *)jarg1; 
  arg2 = (std::vector< _Vector< double > >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_vectorVector__SWIG_0() {
  void * jresult ;
  std::vector< Vector > *result = 0 ;
  
  {
    try {
      result = (std::vector< Vector > *)new std::vector< Vector >();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_vectorVector__SWIG_1(void * jarg1) {
  void * jresult ;
  std::vector< Vector > *arg1 = 0 ;
  std::vector< Vector > *result = 0 ;
  
  arg1 = (std::vector< Vector > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< Vector > const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< Vector > *)new std::vector< Vector >((std::vector< Vector > const &)*arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_vectorVector__SWIG_2(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< Vector > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< Vector > *)new_std_vector_Sl_Vector_Sg___SWIG_2(arg1);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorVector_getitemcopy(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< Vector > *arg1 = (std::vector< Vector > *) 0 ;
  int arg2 ;
  _Vector< double > result;
  
  arg1 = (std::vector< Vector > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = std_vector_Sl_Vector_Sg__getitemcopy(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new _Vector< double >((const _Vector< double > &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorVector_getitem(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< Vector > *arg1 = (std::vector< Vector > *) 0 ;
  int arg2 ;
  _Vector< double > *result = 0 ;
  
  arg1 = (std::vector< Vector > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (_Vector< double > *) &std_vector_Sl_Vector_Sg__getitem(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorVector_setitem(void * jarg1, int jarg2, void * jarg3) {
  std::vector< Vector > *arg1 = (std::vector< Vector > *) 0 ;
  int arg2 ;
  _Vector< double > *arg3 = 0 ;
  
  arg1 = (std::vector< Vector > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (_Vector< double > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "_Vector< double > const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_Vector_Sg__setitem(arg1,arg2,(_Vector< double > const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorVector_AddRange(void * jarg1, void * jarg2) {
  std::vector< Vector > *arg1 = (std::vector< Vector > *) 0 ;
  std::vector< _Vector< double > > *arg2 = 0 ;
  
  arg1 = (std::vector< Vector > *)jarg1; 
  arg2 = (std::vector< _Vector< double > > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< _Vector< double > > const & type is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_Vector_Sg__AddRange(arg1,(std::vector< _Vector< double > > const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorVector_GetRange(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< Vector > *arg1 = (std::vector< Vector > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< _Vector< double > > *result = 0 ;
  
  arg1 = (std::vector< Vector > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< _Vector< double > > *)std_vector_Sl_Vector_Sg__GetRange(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorVector_Insert(void * jarg1, int jarg2, void * jarg3) {
  std::vector< Vector > *arg1 = (std::vector< Vector > *) 0 ;
  int arg2 ;
  _Vector< double > *arg3 = 0 ;
  
  arg1 = (std::vector< Vector > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (_Vector< double > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "_Vector< double > const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_Vector_Sg__Insert(arg1,arg2,(_Vector< double > const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorVector_InsertRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< Vector > *arg1 = (std::vector< Vector > *) 0 ;
  int arg2 ;
  std::vector< _Vector< double > > *arg3 = 0 ;
  
  arg1 = (std::vector< Vector > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< _Vector< double > > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< _Vector< double > > const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_Vector_Sg__InsertRange(arg1,arg2,(std::vector< _Vector< double > > const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorVector_RemoveAt(void * jarg1, int jarg2) {
  std::vector< Vector > *arg1 = (std::vector< Vector > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< Vector > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_Vector_Sg__RemoveAt(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorVector_RemoveRange(void * jarg1, int jarg2, int jarg3) {
  std::vector< Vector > *arg1 = (std::vector< Vector > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< Vector > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_Vector_Sg__RemoveRange(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorVector_Repeat(void * jarg1, int jarg2) {
  void * jresult ;
  _Vector< double > *arg1 = 0 ;
  int arg2 ;
  std::vector< _Vector< double > > *result = 0 ;
  
  arg1 = (_Vector< double > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "_Vector< double > const & type is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< _Vector< double > > *)std_vector_Sl_Vector_Sg__Repeat((_Vector< double > const &)*arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorVector_Reverse__SWIG_0(void * jarg1) {
  std::vector< Vector > *arg1 = (std::vector< Vector > *) 0 ;
  
  arg1 = (std::vector< Vector > *)jarg1; 
  {
    try {
      std_vector_Sl_Vector_Sg__Reverse__SWIG_0(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorVector_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::vector< Vector > *arg1 = (std::vector< Vector > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< Vector > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_Vector_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorVector_SetRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< Vector > *arg1 = (std::vector< Vector > *) 0 ;
  int arg2 ;
  std::vector< _Vector< double > > *arg3 = 0 ;
  
  arg1 = (std::vector< Vector > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< _Vector< double > > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< _Vector< double > > const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_Vector_Sg__SetRange(arg1,arg2,(std::vector< _Vector< double > > const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_vectorVector(void * jarg1) {
  std::vector< Vector > *arg1 = (std::vector< Vector > *) 0 ;
  
  arg1 = (std::vector< Vector > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_read_from__SWIG_2(void * jarg1, void * jarg2) {
  void * jresult ;
  std::istream *arg1 = 0 ;
  BasicBlob *arg2 = 0 ;
  std::istream *result = 0 ;
  
  arg1 = (std::istream *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::istream & type is null", 0);
    return 0;
  } 
  arg2 = (BasicBlob *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "BasicBlob & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::istream *) &operator >>(*arg1,*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_write_to__SWIG_3(void * jarg1, void * jarg2) {
  void * jresult ;
  std::ostream *arg1 = 0 ;
  BasicBlob *arg2 = 0 ;
  std::ostream *result = 0 ;
  
  arg1 = (std::ostream *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::ostream & type is null", 0);
    return 0;
  } 
  arg2 = (BasicBlob *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "BasicBlob & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::ostream *) &operator <<(*arg1,*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_BasicBlob() {
  void * jresult ;
  BasicBlob *result = 0 ;
  
  {
    try {
      result = (BasicBlob *)new BasicBlob();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BasicBlob_id_set(void * jarg1, int jarg2) {
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  osc::int32 arg2 ;
  
  arg1 = (BasicBlob *)jarg1; 
  arg2 = (osc::int32)jarg2; 
  if (arg1) (arg1)->id = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BasicBlob_id_get(void * jarg1) {
  int jresult ;
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  osc::int32 result;
  
  arg1 = (BasicBlob *)jarg1; 
  result = (osc::int32) ((arg1)->id);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BasicBlob_pid_set(void * jarg1, int jarg2) {
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  osc::int32 arg2 ;
  
  arg1 = (BasicBlob *)jarg1; 
  arg2 = (osc::int32)jarg2; 
  if (arg1) (arg1)->pid = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BasicBlob_pid_get(void * jarg1) {
  int jresult ;
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  osc::int32 result;
  
  arg1 = (BasicBlob *)jarg1; 
  result = (osc::int32) ((arg1)->pid);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BasicBlob_type_set(void * jarg1, int jarg2) {
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  osc::int32 arg2 ;
  
  arg1 = (BasicBlob *)jarg1; 
  arg2 = (osc::int32)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BasicBlob_type_get(void * jarg1) {
  int jresult ;
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  osc::int32 result;
  
  arg1 = (BasicBlob *)jarg1; 
  result = (osc::int32) ((arg1)->type);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BasicBlob_size_set(void * jarg1, int jarg2) {
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  int arg2 ;
  
  arg1 = (BasicBlob *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->size = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BasicBlob_size_get(void * jarg1) {
  int jresult ;
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  int result;
  
  arg1 = (BasicBlob *)jarg1; 
  result = (int) ((arg1)->size);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BasicBlob_tracked_set(void * jarg1, int jarg2) {
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  int arg2 ;
  
  arg1 = (BasicBlob *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->tracked = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BasicBlob_tracked_get(void * jarg1) {
  int jresult ;
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  int result;
  
  arg1 = (BasicBlob *)jarg1; 
  result = (int) ((arg1)->tracked);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BasicBlob_value_set(void * jarg1, unsigned char jarg2) {
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  unsigned char arg2 ;
  
  arg1 = (BasicBlob *)jarg1; 
  arg2 = (unsigned char)jarg2; 
  if (arg1) (arg1)->value = arg2;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_BasicBlob_value_get(void * jarg1) {
  unsigned char jresult ;
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  unsigned char result;
  
  arg1 = (BasicBlob *)jarg1; 
  result = (unsigned char) ((arg1)->value);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BasicBlob_pos_set(void * jarg1, void * jarg2) {
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  ::Vector *arg2 = (::Vector *) 0 ;
  
  arg1 = (BasicBlob *)jarg1; 
  arg2 = (::Vector *)jarg2; 
  if (arg1) (arg1)->pos = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BasicBlob_pos_get(void * jarg1) {
  void * jresult ;
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  ::Vector *result = 0 ;
  
  arg1 = (BasicBlob *)jarg1; 
  result = (::Vector *)& ((arg1)->pos);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BasicBlob_speed_set(void * jarg1, void * jarg2) {
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  ::Vector *arg2 = (::Vector *) 0 ;
  
  arg1 = (BasicBlob *)jarg1; 
  arg2 = (::Vector *)jarg2; 
  if (arg1) (arg1)->speed = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BasicBlob_speed_get(void * jarg1) {
  void * jresult ;
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  ::Vector *result = 0 ;
  
  arg1 = (BasicBlob *)jarg1; 
  result = (::Vector *)& ((arg1)->speed);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BasicBlob_peak_set(void * jarg1, void * jarg2) {
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  ::Vector *arg2 = (::Vector *) 0 ;
  
  arg1 = (BasicBlob *)jarg1; 
  arg2 = (::Vector *)jarg2; 
  if (arg1) (arg1)->peak = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BasicBlob_peak_get(void * jarg1) {
  void * jresult ;
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  ::Vector *result = 0 ;
  
  arg1 = (BasicBlob *)jarg1; 
  result = (::Vector *)& ((arg1)->peak);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BasicBlob_axis1_set(void * jarg1, void * jarg2) {
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  ::Vector *arg2 = (::Vector *) 0 ;
  
  arg1 = (BasicBlob *)jarg1; 
  arg2 = (::Vector *)jarg2; 
  if (arg1) (arg1)->axis1 = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BasicBlob_axis1_get(void * jarg1) {
  void * jresult ;
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  ::Vector *result = 0 ;
  
  arg1 = (BasicBlob *)jarg1; 
  result = (::Vector *)& ((arg1)->axis1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BasicBlob_axis2_set(void * jarg1, void * jarg2) {
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  ::Vector *arg2 = (::Vector *) 0 ;
  
  arg1 = (BasicBlob *)jarg1; 
  arg2 = (::Vector *)jarg2; 
  if (arg1) (arg1)->axis2 = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BasicBlob_axis2_get(void * jarg1) {
  void * jresult ;
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  ::Vector *result = 0 ;
  
  arg1 = (BasicBlob *)jarg1; 
  result = (::Vector *)& ((arg1)->axis2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_BasicBlob(void * jarg1) {
  BasicBlob *arg1 = (BasicBlob *) 0 ;
  
  arg1 = (BasicBlob *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_dequeBasicBlob_empty(void * jarg1) {
  unsigned int jresult ;
  std::deque< BasicBlob > *arg1 = (std::deque< BasicBlob > *) 0 ;
  bool result;
  
  arg1 = (std::deque< BasicBlob > *)jarg1; 
  {
    try {
      result = (bool)((std::deque< BasicBlob > const *)arg1)->empty();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_dequeBasicBlob__SWIG_0() {
  void * jresult ;
  std::deque< BasicBlob > *result = 0 ;
  
  {
    try {
      result = (std::deque< BasicBlob > *)new std::deque< BasicBlob >();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_dequeBasicBlob__SWIG_1(unsigned int jarg1, void * jarg2) {
  void * jresult ;
  unsigned int arg1 ;
  BasicBlob *arg2 = 0 ;
  std::deque< BasicBlob > *result = 0 ;
  
  arg1 = (unsigned int)jarg1; 
  arg2 = (BasicBlob *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "BasicBlob const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::deque< BasicBlob > *)new std::deque< BasicBlob >(arg1,(BasicBlob const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_dequeBasicBlob__SWIG_2(unsigned int jarg1) {
  void * jresult ;
  unsigned int arg1 ;
  std::deque< BasicBlob > *result = 0 ;
  
  arg1 = (unsigned int)jarg1; 
  {
    try {
      result = (std::deque< BasicBlob > *)new std::deque< BasicBlob >(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_dequeBasicBlob__SWIG_3(void * jarg1) {
  void * jresult ;
  std::deque< BasicBlob > *arg1 = 0 ;
  std::deque< BasicBlob > *result = 0 ;
  
  arg1 = (std::deque< BasicBlob > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::deque< BasicBlob > const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::deque< BasicBlob > *)new std::deque< BasicBlob >((std::deque< BasicBlob > const &)*arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_dequeBasicBlob(void * jarg1) {
  std::deque< BasicBlob > *arg1 = (std::deque< BasicBlob > *) 0 ;
  
  arg1 = (std::deque< BasicBlob > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_dequeBasicBlob_assign(void * jarg1, unsigned int jarg2, void * jarg3) {
  std::deque< BasicBlob > *arg1 = (std::deque< BasicBlob > *) 0 ;
  unsigned int arg2 ;
  BasicBlob *arg3 = 0 ;
  
  arg1 = (std::deque< BasicBlob > *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  arg3 = (BasicBlob *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "BasicBlob const & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->assign(arg2,(BasicBlob const &)*arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_dequeBasicBlob_swap(void * jarg1, void * jarg2) {
  std::deque< BasicBlob > *arg1 = (std::deque< BasicBlob > *) 0 ;
  std::deque< BasicBlob > *arg2 = 0 ;
  
  arg1 = (std::deque< BasicBlob > *)jarg1; 
  arg2 = (std::deque< BasicBlob > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::deque< BasicBlob > & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->swap(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_dequeBasicBlob_size(void * jarg1) {
  unsigned int jresult ;
  std::deque< BasicBlob > *arg1 = (std::deque< BasicBlob > *) 0 ;
  unsigned int result;
  
  arg1 = (std::deque< BasicBlob > *)jarg1; 
  {
    try {
      result = (unsigned int)((std::deque< BasicBlob > const *)arg1)->size();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_dequeBasicBlob_max_size(void * jarg1) {
  unsigned int jresult ;
  std::deque< BasicBlob > *arg1 = (std::deque< BasicBlob > *) 0 ;
  unsigned int result;
  
  arg1 = (std::deque< BasicBlob > *)jarg1; 
  {
    try {
      result = (unsigned int)((std::deque< BasicBlob > const *)arg1)->max_size();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_dequeBasicBlob_resize__SWIG_0(void * jarg1, unsigned int jarg2, void * jarg3) {
  std::deque< BasicBlob > *arg1 = (std::deque< BasicBlob > *) 0 ;
  unsigned int arg2 ;
  BasicBlob arg3 ;
  BasicBlob *argp3 ;
  
  arg1 = (std::deque< BasicBlob > *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  argp3 = (BasicBlob *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null BasicBlob", 0);
    return ;
  }
  arg3 = *argp3; 
  {
    try {
      (arg1)->resize(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_dequeBasicBlob_resize__SWIG_1(void * jarg1, unsigned int jarg2) {
  std::deque< BasicBlob > *arg1 = (std::deque< BasicBlob > *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (std::deque< BasicBlob > *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  {
    try {
      (arg1)->resize(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_dequeBasicBlob_front(void * jarg1) {
  void * jresult ;
  std::deque< BasicBlob > *arg1 = (std::deque< BasicBlob > *) 0 ;
  BasicBlob *result = 0 ;
  
  arg1 = (std::deque< BasicBlob > *)jarg1; 
  {
    try {
      result = (BasicBlob *) &(arg1)->front();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_dequeBasicBlob_back(void * jarg1) {
  void * jresult ;
  std::deque< BasicBlob > *arg1 = (std::deque< BasicBlob > *) 0 ;
  BasicBlob *result = 0 ;
  
  arg1 = (std::deque< BasicBlob > *)jarg1; 
  {
    try {
      result = (BasicBlob *) &(arg1)->back();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_dequeBasicBlob_push_front(void * jarg1, void * jarg2) {
  std::deque< BasicBlob > *arg1 = (std::deque< BasicBlob > *) 0 ;
  BasicBlob *arg2 = 0 ;
  
  arg1 = (std::deque< BasicBlob > *)jarg1; 
  arg2 = (BasicBlob *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "BasicBlob const & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->push_front((BasicBlob const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_dequeBasicBlob_push_back(void * jarg1, void * jarg2) {
  std::deque< BasicBlob > *arg1 = (std::deque< BasicBlob > *) 0 ;
  BasicBlob *arg2 = 0 ;
  
  arg1 = (std::deque< BasicBlob > *)jarg1; 
  arg2 = (BasicBlob *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "BasicBlob const & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->push_back((BasicBlob const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_dequeBasicBlob_pop_front(void * jarg1) {
  std::deque< BasicBlob > *arg1 = (std::deque< BasicBlob > *) 0 ;
  
  arg1 = (std::deque< BasicBlob > *)jarg1; 
  {
    try {
      (arg1)->pop_front();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_dequeBasicBlob_pop_back(void * jarg1) {
  std::deque< BasicBlob > *arg1 = (std::deque< BasicBlob > *) 0 ;
  
  arg1 = (std::deque< BasicBlob > *)jarg1; 
  {
    try {
      (arg1)->pop_back();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_dequeBasicBlob_clear(void * jarg1) {
  std::deque< BasicBlob > *arg1 = (std::deque< BasicBlob > *) 0 ;
  
  arg1 = (std::deque< BasicBlob > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_dequeBasicBlob_getitem(void * jarg1, int jarg2) {
  void * jresult ;
  std::deque< BasicBlob > *arg1 = (std::deque< BasicBlob > *) 0 ;
  int arg2 ;
  BasicBlob *result = 0 ;
  
  arg1 = (std::deque< BasicBlob > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (BasicBlob *) &std_deque_Sl_BasicBlob_Sg__getitem(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_dequeBasicBlob_setitem(void * jarg1, int jarg2, void * jarg3) {
  std::deque< BasicBlob > *arg1 = (std::deque< BasicBlob > *) 0 ;
  int arg2 ;
  BasicBlob *arg3 = 0 ;
  
  arg1 = (std::deque< BasicBlob > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (BasicBlob *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "BasicBlob const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_deque_Sl_BasicBlob_Sg__setitem(arg1,arg2,(BasicBlob const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_dequeBasicBlob_delitem(void * jarg1, int jarg2) {
  std::deque< BasicBlob > *arg1 = (std::deque< BasicBlob > *) 0 ;
  int arg2 ;
  
  arg1 = (std::deque< BasicBlob > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_deque_Sl_BasicBlob_Sg__delitem(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_dequeBasicBlob_getslice(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::deque< BasicBlob > *arg1 = (std::deque< BasicBlob > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::deque< BasicBlob > result;
  
  arg1 = (std::deque< BasicBlob > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = std_deque_Sl_BasicBlob_Sg__getslice(arg1,arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new std::deque< BasicBlob >((const std::deque< BasicBlob > &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_dequeBasicBlob_setslice(void * jarg1, int jarg2, int jarg3, void * jarg4) {
  std::deque< BasicBlob > *arg1 = (std::deque< BasicBlob > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::deque< BasicBlob > *arg4 = 0 ;
  
  arg1 = (std::deque< BasicBlob > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (std::deque< BasicBlob > *)jarg4;
  if (!arg4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::deque< BasicBlob > const & type is null", 0);
    return ;
  } 
  {
    try {
      std_deque_Sl_BasicBlob_Sg__setslice(arg1,arg2,arg3,(std::deque< BasicBlob > const &)*arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_dequeBasicBlob_delslice(void * jarg1, int jarg2, int jarg3) {
  std::deque< BasicBlob > *arg1 = (std::deque< BasicBlob > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::deque< BasicBlob > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      std_deque_Sl_BasicBlob_Sg__delslice(arg1,arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_mapIntBlobHistory__SWIG_0() {
  void * jresult ;
  std::map< int,BlobHistory > *result = 0 ;
  
  {
    try {
      result = (std::map< int,BlobHistory > *)new std::map< int,BlobHistory >();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_mapIntBlobHistory__SWIG_1(void * jarg1) {
  void * jresult ;
  std::map< int,BlobHistory > *arg1 = 0 ;
  std::map< int,BlobHistory > *result = 0 ;
  
  arg1 = (std::map< int,BlobHistory > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< int,BlobHistory > const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::map< int,BlobHistory > *)new std::map< int,BlobHistory >((std::map< int,BlobHistory > const &)*arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_mapIntBlobHistory_size(void * jarg1) {
  unsigned long jresult ;
  std::map< int,BlobHistory > *arg1 = (std::map< int,BlobHistory > *) 0 ;
  std::map< int,BlobHistory >::size_type result;
  
  arg1 = (std::map< int,BlobHistory > *)jarg1; 
  {
    try {
      result = ((std::map< int,BlobHistory > const *)arg1)->size();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mapIntBlobHistory_empty(void * jarg1) {
  unsigned int jresult ;
  std::map< int,BlobHistory > *arg1 = (std::map< int,BlobHistory > *) 0 ;
  bool result;
  
  arg1 = (std::map< int,BlobHistory > *)jarg1; 
  {
    try {
      result = (bool)((std::map< int,BlobHistory > const *)arg1)->empty();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_mapIntBlobHistory_Clear(void * jarg1) {
  std::map< int,BlobHistory > *arg1 = (std::map< int,BlobHistory > *) 0 ;
  
  arg1 = (std::map< int,BlobHistory > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mapIntBlobHistory_getitem(void * jarg1, int jarg2) {
  void * jresult ;
  std::map< int,BlobHistory > *arg1 = (std::map< int,BlobHistory > *) 0 ;
  std::map< int,BlobHistory >::key_type *arg2 = 0 ;
  std::map< int,BlobHistory >::key_type temp2 ;
  std::map< int,BlobHistory >::mapped_type *result = 0 ;
  
  arg1 = (std::map< int,BlobHistory > *)jarg1; 
  temp2 = (std::map< int,BlobHistory >::key_type)jarg2; 
  arg2 = &temp2; 
  {
    try {
      try {
        result = (std::map< int,BlobHistory >::mapped_type *) &std_map_Sl_int_Sc_BlobHistory_Sg__getitem(arg1,(int const &)*arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_mapIntBlobHistory_setitem(void * jarg1, int jarg2, void * jarg3) {
  std::map< int,BlobHistory > *arg1 = (std::map< int,BlobHistory > *) 0 ;
  std::map< int,BlobHistory >::key_type *arg2 = 0 ;
  std::map< int,BlobHistory >::mapped_type *arg3 = 0 ;
  std::map< int,BlobHistory >::key_type temp2 ;
  
  arg1 = (std::map< int,BlobHistory > *)jarg1; 
  temp2 = (std::map< int,BlobHistory >::key_type)jarg2; 
  arg2 = &temp2; 
  arg3 = (std::map< int,BlobHistory >::mapped_type *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< int,BlobHistory >::mapped_type const & type is null", 0);
    return ;
  } 
  {
    try {
      std_map_Sl_int_Sc_BlobHistory_Sg__setitem(arg1,(int const &)*arg2,(BlobHistory const &)*arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mapIntBlobHistory_ContainsKey(void * jarg1, int jarg2) {
  unsigned int jresult ;
  std::map< int,BlobHistory > *arg1 = (std::map< int,BlobHistory > *) 0 ;
  std::map< int,BlobHistory >::key_type *arg2 = 0 ;
  std::map< int,BlobHistory >::key_type temp2 ;
  bool result;
  
  arg1 = (std::map< int,BlobHistory > *)jarg1; 
  temp2 = (std::map< int,BlobHistory >::key_type)jarg2; 
  arg2 = &temp2; 
  {
    try {
      result = (bool)std_map_Sl_int_Sc_BlobHistory_Sg__ContainsKey(arg1,(int const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_mapIntBlobHistory_Add(void * jarg1, int jarg2, void * jarg3) {
  std::map< int,BlobHistory > *arg1 = (std::map< int,BlobHistory > *) 0 ;
  std::map< int,BlobHistory >::key_type *arg2 = 0 ;
  std::map< int,BlobHistory >::mapped_type *arg3 = 0 ;
  std::map< int,BlobHistory >::key_type temp2 ;
  
  arg1 = (std::map< int,BlobHistory > *)jarg1; 
  temp2 = (std::map< int,BlobHistory >::key_type)jarg2; 
  arg2 = &temp2; 
  arg3 = (std::map< int,BlobHistory >::mapped_type *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< int,BlobHistory >::mapped_type const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_map_Sl_int_Sc_BlobHistory_Sg__Add(arg1,(int const &)*arg2,(BlobHistory const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mapIntBlobHistory_Remove(void * jarg1, int jarg2) {
  unsigned int jresult ;
  std::map< int,BlobHistory > *arg1 = (std::map< int,BlobHistory > *) 0 ;
  std::map< int,BlobHistory >::key_type *arg2 = 0 ;
  std::map< int,BlobHistory >::key_type temp2 ;
  bool result;
  
  arg1 = (std::map< int,BlobHistory > *)jarg1; 
  temp2 = (std::map< int,BlobHistory >::key_type)jarg2; 
  arg2 = &temp2; 
  {
    try {
      result = (bool)std_map_Sl_int_Sc_BlobHistory_Sg__Remove(arg1,(int const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mapIntBlobHistory_create_iterator_begin(void * jarg1) {
  void * jresult ;
  std::map< int,BlobHistory > *arg1 = (std::map< int,BlobHistory > *) 0 ;
  std::map< int,BlobHistory >::iterator *result = 0 ;
  
  arg1 = (std::map< int,BlobHistory > *)jarg1; 
  {
    try {
      result = (std::map< int,BlobHistory >::iterator *)std_map_Sl_int_Sc_BlobHistory_Sg__create_iterator_begin(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_mapIntBlobHistory_get_next_key(void * jarg1, void * jarg2) {
  int jresult ;
  std::map< int,BlobHistory > *arg1 = (std::map< int,BlobHistory > *) 0 ;
  std::map< int,BlobHistory >::iterator *arg2 = (std::map< int,BlobHistory >::iterator *) 0 ;
  std::map< int,BlobHistory >::key_type *result = 0 ;
  
  arg1 = (std::map< int,BlobHistory > *)jarg1; 
  arg2 = (std::map< int,BlobHistory >::iterator *)jarg2; 
  {
    try {
      result = (std::map< int,BlobHistory >::key_type *) &std_map_Sl_int_Sc_BlobHistory_Sg__get_next_key(arg1,arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = *result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_mapIntBlobHistory_destroy_iterator(void * jarg1, void * jarg2) {
  std::map< int,BlobHistory > *arg1 = (std::map< int,BlobHistory > *) 0 ;
  std::map< int,BlobHistory >::iterator *arg2 = (std::map< int,BlobHistory >::iterator *) 0 ;
  
  arg1 = (std::map< int,BlobHistory > *)jarg1; 
  arg2 = (std::map< int,BlobHistory >::iterator *)jarg2; 
  {
    try {
      std_map_Sl_int_Sc_BlobHistory_Sg__destroy_iterator(arg1,arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_mapIntBlobHistory(void * jarg1) {
  std::map< int,BlobHistory > *arg1 = (std::map< int,BlobHistory > *) 0 ;
  
  arg1 = (std::map< int,BlobHistory > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorBlobState_Clear(void * jarg1) {
  std::vector< BlobState > *arg1 = (std::vector< BlobState > *) 0 ;
  
  arg1 = (std::vector< BlobState > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorBlobState_Add(void * jarg1, void * jarg2) {
  std::vector< BlobState > *arg1 = (std::vector< BlobState > *) 0 ;
  BlobState *arg2 = 0 ;
  
  arg1 = (std::vector< BlobState > *)jarg1; 
  arg2 = (BlobState *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "BlobState const & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->push_back((BlobState const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_vectorBlobState_size(void * jarg1) {
  unsigned long jresult ;
  std::vector< BlobState > *arg1 = (std::vector< BlobState > *) 0 ;
  std::vector< BlobState >::size_type result;
  
  arg1 = (std::vector< BlobState > *)jarg1; 
  {
    try {
      result = ((std::vector< BlobState > const *)arg1)->size();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_vectorBlobState_capacity(void * jarg1) {
  unsigned long jresult ;
  std::vector< BlobState > *arg1 = (std::vector< BlobState > *) 0 ;
  std::vector< BlobState >::size_type result;
  
  arg1 = (std::vector< BlobState > *)jarg1; 
  {
    try {
      result = ((std::vector< BlobState > const *)arg1)->capacity();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorBlobState_reserve(void * jarg1, unsigned long jarg2) {
  std::vector< BlobState > *arg1 = (std::vector< BlobState > *) 0 ;
  std::vector< BlobState >::size_type arg2 ;
  
  arg1 = (std::vector< BlobState > *)jarg1; 
  arg2 = (std::vector< BlobState >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_vectorBlobState__SWIG_0() {
  void * jresult ;
  std::vector< BlobState > *result = 0 ;
  
  {
    try {
      result = (std::vector< BlobState > *)new std::vector< BlobState >();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_vectorBlobState__SWIG_1(void * jarg1) {
  void * jresult ;
  std::vector< BlobState > *arg1 = 0 ;
  std::vector< BlobState > *result = 0 ;
  
  arg1 = (std::vector< BlobState > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< BlobState > const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< BlobState > *)new std::vector< BlobState >((std::vector< BlobState > const &)*arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_vectorBlobState__SWIG_2(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< BlobState > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< BlobState > *)new_std_vector_Sl_BlobState_Sg___SWIG_2(arg1);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorBlobState_getitemcopy(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< BlobState > *arg1 = (std::vector< BlobState > *) 0 ;
  int arg2 ;
  BlobState result;
  
  arg1 = (std::vector< BlobState > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = std_vector_Sl_BlobState_Sg__getitemcopy(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new BlobState((const BlobState &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorBlobState_getitem(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< BlobState > *arg1 = (std::vector< BlobState > *) 0 ;
  int arg2 ;
  BlobState *result = 0 ;
  
  arg1 = (std::vector< BlobState > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (BlobState *) &std_vector_Sl_BlobState_Sg__getitem(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorBlobState_setitem(void * jarg1, int jarg2, void * jarg3) {
  std::vector< BlobState > *arg1 = (std::vector< BlobState > *) 0 ;
  int arg2 ;
  BlobState *arg3 = 0 ;
  
  arg1 = (std::vector< BlobState > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (BlobState *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "BlobState const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_BlobState_Sg__setitem(arg1,arg2,(BlobState const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorBlobState_AddRange(void * jarg1, void * jarg2) {
  std::vector< BlobState > *arg1 = (std::vector< BlobState > *) 0 ;
  std::vector< BlobState > *arg2 = 0 ;
  
  arg1 = (std::vector< BlobState > *)jarg1; 
  arg2 = (std::vector< BlobState > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< BlobState > const & type is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_BlobState_Sg__AddRange(arg1,(std::vector< BlobState > const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorBlobState_GetRange(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< BlobState > *arg1 = (std::vector< BlobState > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< BlobState > *result = 0 ;
  
  arg1 = (std::vector< BlobState > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< BlobState > *)std_vector_Sl_BlobState_Sg__GetRange(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorBlobState_Insert(void * jarg1, int jarg2, void * jarg3) {
  std::vector< BlobState > *arg1 = (std::vector< BlobState > *) 0 ;
  int arg2 ;
  BlobState *arg3 = 0 ;
  
  arg1 = (std::vector< BlobState > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (BlobState *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "BlobState const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_BlobState_Sg__Insert(arg1,arg2,(BlobState const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorBlobState_InsertRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< BlobState > *arg1 = (std::vector< BlobState > *) 0 ;
  int arg2 ;
  std::vector< BlobState > *arg3 = 0 ;
  
  arg1 = (std::vector< BlobState > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< BlobState > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< BlobState > const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_BlobState_Sg__InsertRange(arg1,arg2,(std::vector< BlobState > const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorBlobState_RemoveAt(void * jarg1, int jarg2) {
  std::vector< BlobState > *arg1 = (std::vector< BlobState > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< BlobState > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_BlobState_Sg__RemoveAt(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorBlobState_RemoveRange(void * jarg1, int jarg2, int jarg3) {
  std::vector< BlobState > *arg1 = (std::vector< BlobState > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< BlobState > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_BlobState_Sg__RemoveRange(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorBlobState_Repeat(void * jarg1, int jarg2) {
  void * jresult ;
  BlobState *arg1 = 0 ;
  int arg2 ;
  std::vector< BlobState > *result = 0 ;
  
  arg1 = (BlobState *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "BlobState const & type is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< BlobState > *)std_vector_Sl_BlobState_Sg__Repeat((BlobState const &)*arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorBlobState_Reverse__SWIG_0(void * jarg1) {
  std::vector< BlobState > *arg1 = (std::vector< BlobState > *) 0 ;
  
  arg1 = (std::vector< BlobState > *)jarg1; 
  {
    try {
      std_vector_Sl_BlobState_Sg__Reverse__SWIG_0(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorBlobState_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::vector< BlobState > *arg1 = (std::vector< BlobState > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< BlobState > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_BlobState_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorBlobState_SetRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< BlobState > *arg1 = (std::vector< BlobState > *) 0 ;
  int arg2 ;
  std::vector< BlobState > *arg3 = 0 ;
  
  arg1 = (std::vector< BlobState > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< BlobState > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< BlobState > const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_BlobState_Sg__SetRange(arg1,arg2,(std::vector< BlobState > const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_vectorBlobState(void * jarg1) {
  std::vector< BlobState > *arg1 = (std::vector< BlobState > *) 0 ;
  
  arg1 = (std::vector< BlobState > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_BlobHistory__SWIG_0(int jarg1) {
  void * jresult ;
  int arg1 ;
  BlobHistory *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      result = (BlobHistory *)new BlobHistory(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_BlobHistory__SWIG_1() {
  void * jresult ;
  BlobHistory *result = 0 ;
  
  {
    try {
      result = (BlobHistory *)new BlobHistory();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BlobHistory_add(void * jarg1, void * jarg2) {
  BlobHistory *arg1 = (BlobHistory *) 0 ;
  BasicBlob *arg2 = 0 ;
  
  arg1 = (BlobHistory *)jarg1; 
  arg2 = (BasicBlob *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "BasicBlob & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->add(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_BlobHistory_avg_set(void * jarg1, void * jarg2) {
  BlobHistory *arg1 = (BlobHistory *) 0 ;
  Vector *arg2 = (Vector *) 0 ;
  
  arg1 = (BlobHistory *)jarg1; 
  arg2 = (Vector *)jarg2; 
  if (arg1) (arg1)->avg = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BlobHistory_avg_get(void * jarg1) {
  void * jresult ;
  BlobHistory *arg1 = (BlobHistory *) 0 ;
  Vector *result = 0 ;
  
  arg1 = (BlobHistory *)jarg1; 
  result = (Vector *)& ((arg1)->avg);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BlobHistory_stddev_set(void * jarg1, void * jarg2) {
  BlobHistory *arg1 = (BlobHistory *) 0 ;
  Vector *arg2 = (Vector *) 0 ;
  
  arg1 = (BlobHistory *)jarg1; 
  arg2 = (Vector *)jarg2; 
  if (arg1) (arg1)->stddev = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BlobHistory_stddev_get(void * jarg1) {
  void * jresult ;
  BlobHistory *arg1 = (BlobHistory *) 0 ;
  Vector *result = 0 ;
  
  arg1 = (BlobHistory *)jarg1; 
  result = (Vector *)& ((arg1)->stddev);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BlobHistory_pos_set(void * jarg1, void * jarg2) {
  BlobHistory *arg1 = (BlobHistory *) 0 ;
  Vector *arg2 = (Vector *) 0 ;
  
  arg1 = (BlobHistory *)jarg1; 
  arg2 = (Vector *)jarg2; 
  if (arg1) (arg1)->pos = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BlobHistory_pos_get(void * jarg1) {
  void * jresult ;
  BlobHistory *arg1 = (BlobHistory *) 0 ;
  Vector *result = 0 ;
  
  arg1 = (BlobHistory *)jarg1; 
  result = (Vector *)& ((arg1)->pos);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BlobHistory_first_set(void * jarg1, void * jarg2) {
  BlobHistory *arg1 = (BlobHistory *) 0 ;
  BasicBlob *arg2 = (BasicBlob *) 0 ;
  
  arg1 = (BlobHistory *)jarg1; 
  arg2 = (BasicBlob *)jarg2; 
  if (arg1) (arg1)->first = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BlobHistory_first_get(void * jarg1) {
  void * jresult ;
  BlobHistory *arg1 = (BlobHistory *) 0 ;
  BasicBlob *result = 0 ;
  
  arg1 = (BlobHistory *)jarg1; 
  result = (BasicBlob *)& ((arg1)->first);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BlobHistory_recent_set(void * jarg1, int jarg2) {
  BlobHistory *arg1 = (BlobHistory *) 0 ;
  int arg2 ;
  
  arg1 = (BlobHistory *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->recent = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BlobHistory_recent_get(void * jarg1) {
  int jresult ;
  BlobHistory *arg1 = (BlobHistory *) 0 ;
  int result;
  
  arg1 = (BlobHistory *)jarg1; 
  result = (int) ((arg1)->recent);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BlobHistory_newblob_set(void * jarg1, int jarg2) {
  BlobHistory *arg1 = (BlobHistory *) 0 ;
  int arg2 ;
  
  arg1 = (BlobHistory *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->newblob = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BlobHistory_newblob_get(void * jarg1) {
  int jresult ;
  BlobHistory *arg1 = (BlobHistory *) 0 ;
  int result;
  
  arg1 = (BlobHistory *)jarg1; 
  result = (int) ((arg1)->newblob);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BlobHistory_total_set(void * jarg1, int jarg2) {
  BlobHistory *arg1 = (BlobHistory *) 0 ;
  int arg2 ;
  
  arg1 = (BlobHistory *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->total = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BlobHistory_total_get(void * jarg1) {
  int jresult ;
  BlobHistory *arg1 = (BlobHistory *) 0 ;
  int result;
  
  arg1 = (BlobHistory *)jarg1; 
  result = (int) ((arg1)->total);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_BlobHistory(void * jarg1) {
  BlobHistory *arg1 = (BlobHistory *) 0 ;
  
  arg1 = (BlobHistory *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_BlobState() {
  void * jresult ;
  BlobState *result = 0 ;
  
  {
    try {
      result = (BlobState *)new BlobState();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BlobState_purge(void * jarg1) {
  BlobState *arg1 = (BlobState *) 0 ;
  
  arg1 = (BlobState *)jarg1; 
  {
    try {
      (arg1)->purge();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_BlobState_lost_set(void * jarg1, void * jarg2) {
  BlobState *arg1 = (BlobState *) 0 ;
  std::vector< int > *arg2 = (std::vector< int > *) 0 ;
  
  arg1 = (BlobState *)jarg1; 
  arg2 = (std::vector< int > *)jarg2; 
  if (arg1) (arg1)->lost = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BlobState_lost_get(void * jarg1) {
  void * jresult ;
  BlobState *arg1 = (BlobState *) 0 ;
  std::vector< int > *result = 0 ;
  
  arg1 = (BlobState *)jarg1; 
  result = (std::vector< int > *)& ((arg1)->lost);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BlobState_changed_set(void * jarg1, int jarg2) {
  BlobState *arg1 = (BlobState *) 0 ;
  int arg2 ;
  
  arg1 = (BlobState *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->changed = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_BlobState_changed_get(void * jarg1) {
  int jresult ;
  BlobState *arg1 = (BlobState *) 0 ;
  int result;
  
  arg1 = (BlobState *)jarg1; 
  result = (int) ((arg1)->changed);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_BlobState(void * jarg1) {
  BlobState *arg1 = (BlobState *) 0 ;
  
  arg1 = (BlobState *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_InputState() {
  void * jresult ;
  InputState *result = 0 ;
  
  {
    try {
      result = (InputState *)new InputState();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_InputState_purge(void * jarg1) {
  InputState *arg1 = (InputState *) 0 ;
  
  arg1 = (InputState *)jarg1; 
  {
    try {
      (arg1)->purge();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_InputState_changed(void * jarg1) {
  int jresult ;
  InputState *arg1 = (InputState *) 0 ;
  int result;
  
  arg1 = (InputState *)jarg1; 
  {
    try {
      result = (int)(arg1)->changed();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_InputState(void * jarg1) {
  InputState *arg1 = (InputState *) 0 ;
  
  arg1 = (InputState *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FeatureBase__SWIG_0(unsigned int jarg1) {
  void * jresult ;
  unsigned int arg1 ;
  FeatureBase *result = 0 ;
  
  arg1 = (unsigned int)jarg1; 
  {
    try {
      result = (FeatureBase *)new SwigDirector_FeatureBase(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_FeatureBase__SWIG_1() {
  void * jresult ;
  FeatureBase *result = 0 ;
  
  {
    try {
      result = (FeatureBase *)new SwigDirector_FeatureBase();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_FeatureBase(void * jarg1) {
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  
  arg1 = (FeatureBase *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_FeatureBase_name(void * jarg1) {
  char * jresult ;
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  char *result = 0 ;
  
  arg1 = (FeatureBase *)jarg1; 
  {
    try {
      result = (char *)((FeatureBase const *)arg1)->name();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FeatureBase_clone(void * jarg1) {
  void * jresult ;
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  FeatureBase *result = 0 ;
  
  arg1 = (FeatureBase *)jarg1; 
  {
    try {
      result = (FeatureBase *)((FeatureBase const *)arg1)->clone();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FeatureBase_load(void * jarg1, void * jarg2) {
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  InputState *arg2 = 0 ;
  
  arg1 = (FeatureBase *)jarg1; 
  arg2 = (InputState *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "InputState & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->load(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_FeatureBase_next(void * jarg1) {
  int jresult ;
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  int result;
  
  arg1 = (FeatureBase *)jarg1; 
  {
    try {
      result = (int)(arg1)->next();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FeatureBase_serialize(void * jarg1, void * jarg2) {
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  std::ostream *arg2 = 0 ;
  
  arg1 = (FeatureBase *)jarg1; 
  arg2 = (std::ostream *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::ostream & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->serialize(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_FeatureBase_unserialize(void * jarg1, void * jarg2) {
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  std::istream *arg2 = 0 ;
  
  arg1 = (FeatureBase *)jarg1; 
  arg2 = (std::istream *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::istream & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->unserialize(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_FeatureBase_has_result_set(void * jarg1, int jarg2) {
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  int arg2 ;
  
  arg1 = (FeatureBase *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->has_result = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_FeatureBase_has_result_get(void * jarg1) {
  int jresult ;
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  int result;
  
  arg1 = (FeatureBase *)jarg1; 
  result = (int) ((arg1)->has_result);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FeatureBase_typeflags_set(void * jarg1, unsigned int jarg2) {
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  unsigned int arg2 ;
  SwigDirector_FeatureBase *darg = 0;
  
  arg1 = (FeatureBase *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  darg = dynamic_cast<SwigDirector_FeatureBase *>(arg1);
  if (arg1) darg->typeflags = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_FeatureBase_typeflags_get(void * jarg1) {
  unsigned int jresult ;
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  SwigDirector_FeatureBase *darg = 0;
  unsigned int result;
  
  arg1 = (FeatureBase *)jarg1; 
  darg = dynamic_cast<SwigDirector_FeatureBase *>(arg1);
  result = (unsigned int) (darg->typeflags);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FeatureBase_director_connect(void *objarg, SwigDirector_FeatureBase::SWIG_Callback0_t callback0, SwigDirector_FeatureBase::SWIG_Callback1_t callback1, SwigDirector_FeatureBase::SWIG_Callback2_t callback2, SwigDirector_FeatureBase::SWIG_Callback3_t callback3, SwigDirector_FeatureBase::SWIG_Callback4_t callback4, SwigDirector_FeatureBase::SWIG_Callback5_t callback5) {
  FeatureBase *obj = (FeatureBase *)objarg;
  SwigDirector_FeatureBase *director = dynamic_cast<SwigDirector_FeatureBase *>(obj);
  if (director) {
    director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_g_factory() {
  void * jresult ;
  std::map< std::string,FeatureConstructor > *result = 0 ;
  
  {
    try {
      result = (std::map< std::string,FeatureConstructor > *) &g_factory();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_createFeature(char * jarg1) {
  void * jresult ;
  std::string *arg1 = 0 ;
  FeatureBase *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg1_str(jarg1);
  arg1 = &arg1_str; 
  {
    try {
      result = (FeatureBase *)createFeature((std::string const &)*arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_mapStringFeatureBaseP__SWIG_0() {
  void * jresult ;
  std::map< std::string,FeatureBase * > *result = 0 ;
  
  {
    try {
      result = (std::map< std::string,FeatureBase * > *)new std::map< std::string,FeatureBase * >();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_mapStringFeatureBaseP__SWIG_1(void * jarg1) {
  void * jresult ;
  std::map< std::string,FeatureBase * > *arg1 = 0 ;
  std::map< std::string,FeatureBase * > *result = 0 ;
  
  arg1 = (std::map< std::string,FeatureBase * > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::map< std::string,FeatureBase * > const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::map< std::string,FeatureBase * > *)new std::map< std::string,FeatureBase * >((std::map< std::string,FeatureBase * > const &)*arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_mapStringFeatureBaseP_size(void * jarg1) {
  unsigned long jresult ;
  std::map< std::string,FeatureBase * > *arg1 = (std::map< std::string,FeatureBase * > *) 0 ;
  std::map< std::string,FeatureBase * >::size_type result;
  
  arg1 = (std::map< std::string,FeatureBase * > *)jarg1; 
  {
    try {
      result = ((std::map< std::string,FeatureBase * > const *)arg1)->size();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mapStringFeatureBaseP_empty(void * jarg1) {
  unsigned int jresult ;
  std::map< std::string,FeatureBase * > *arg1 = (std::map< std::string,FeatureBase * > *) 0 ;
  bool result;
  
  arg1 = (std::map< std::string,FeatureBase * > *)jarg1; 
  {
    try {
      result = (bool)((std::map< std::string,FeatureBase * > const *)arg1)->empty();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_mapStringFeatureBaseP_Clear(void * jarg1) {
  std::map< std::string,FeatureBase * > *arg1 = (std::map< std::string,FeatureBase * > *) 0 ;
  
  arg1 = (std::map< std::string,FeatureBase * > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mapStringFeatureBaseP_getitem(void * jarg1, char * jarg2) {
  void * jresult ;
  std::map< std::string,FeatureBase * > *arg1 = (std::map< std::string,FeatureBase * > *) 0 ;
  std::map< std::string,FeatureBase * >::key_type *arg2 = 0 ;
  std::map< std::string,FeatureBase * >::mapped_type *result = 0 ;
  
  arg1 = (std::map< std::string,FeatureBase * > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      try {
        result = (std::map< std::string,FeatureBase * >::mapped_type *) &std_map_Sl_std_string_Sc_FeatureBase_Sm__Sg__getitem(arg1,(std::string const &)*arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)*result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_mapStringFeatureBaseP_setitem(void * jarg1, char * jarg2, void * jarg3) {
  std::map< std::string,FeatureBase * > *arg1 = (std::map< std::string,FeatureBase * > *) 0 ;
  std::map< std::string,FeatureBase * >::key_type *arg2 = 0 ;
  std::map< std::string,FeatureBase * >::mapped_type *arg3 = 0 ;
  std::map< std::string,FeatureBase * >::mapped_type temp3 = 0 ;
  
  arg1 = (std::map< std::string,FeatureBase * > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  temp3 = (std::map< std::string,FeatureBase * >::mapped_type)jarg3;
  arg3 = (std::map< std::string,FeatureBase * >::mapped_type *)&temp3; 
  {
    try {
      std_map_Sl_std_string_Sc_FeatureBase_Sm__Sg__setitem(arg1,(std::string const &)*arg2,(FeatureBase *const &)*arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mapStringFeatureBaseP_ContainsKey(void * jarg1, char * jarg2) {
  unsigned int jresult ;
  std::map< std::string,FeatureBase * > *arg1 = (std::map< std::string,FeatureBase * > *) 0 ;
  std::map< std::string,FeatureBase * >::key_type *arg2 = 0 ;
  bool result;
  
  arg1 = (std::map< std::string,FeatureBase * > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = (bool)std_map_Sl_std_string_Sc_FeatureBase_Sm__Sg__ContainsKey(arg1,(std::string const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_mapStringFeatureBaseP_Add(void * jarg1, char * jarg2, void * jarg3) {
  std::map< std::string,FeatureBase * > *arg1 = (std::map< std::string,FeatureBase * > *) 0 ;
  std::map< std::string,FeatureBase * >::key_type *arg2 = 0 ;
  std::map< std::string,FeatureBase * >::mapped_type *arg3 = 0 ;
  std::map< std::string,FeatureBase * >::mapped_type temp3 = 0 ;
  
  arg1 = (std::map< std::string,FeatureBase * > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  temp3 = (std::map< std::string,FeatureBase * >::mapped_type)jarg3;
  arg3 = (std::map< std::string,FeatureBase * >::mapped_type *)&temp3; 
  {
    try {
      try {
        std_map_Sl_std_string_Sc_FeatureBase_Sm__Sg__Add(arg1,(std::string const &)*arg2,(FeatureBase *const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_mapStringFeatureBaseP_Remove(void * jarg1, char * jarg2) {
  unsigned int jresult ;
  std::map< std::string,FeatureBase * > *arg1 = (std::map< std::string,FeatureBase * > *) 0 ;
  std::map< std::string,FeatureBase * >::key_type *arg2 = 0 ;
  bool result;
  
  arg1 = (std::map< std::string,FeatureBase * > *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      result = (bool)std_map_Sl_std_string_Sc_FeatureBase_Sm__Sg__Remove(arg1,(std::string const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_mapStringFeatureBaseP_create_iterator_begin(void * jarg1) {
  void * jresult ;
  std::map< std::string,FeatureBase * > *arg1 = (std::map< std::string,FeatureBase * > *) 0 ;
  std::map< std::string,FeatureBase * >::iterator *result = 0 ;
  
  arg1 = (std::map< std::string,FeatureBase * > *)jarg1; 
  {
    try {
      result = (std::map< std::string,FeatureBase * >::iterator *)std_map_Sl_std_string_Sc_FeatureBase_Sm__Sg__create_iterator_begin(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_mapStringFeatureBaseP_get_next_key(void * jarg1, void * jarg2) {
  char * jresult ;
  std::map< std::string,FeatureBase * > *arg1 = (std::map< std::string,FeatureBase * > *) 0 ;
  std::map< std::string,FeatureBase * >::iterator *arg2 = (std::map< std::string,FeatureBase * >::iterator *) 0 ;
  std::map< std::string,FeatureBase * >::key_type *result = 0 ;
  
  arg1 = (std::map< std::string,FeatureBase * > *)jarg1; 
  arg2 = (std::map< std::string,FeatureBase * >::iterator *)jarg2; 
  {
    try {
      result = (std::map< std::string,FeatureBase * >::key_type *) &std_map_Sl_std_string_Sc_FeatureBase_Sm__Sg__get_next_key(arg1,arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_mapStringFeatureBaseP_destroy_iterator(void * jarg1, void * jarg2) {
  std::map< std::string,FeatureBase * > *arg1 = (std::map< std::string,FeatureBase * > *) 0 ;
  std::map< std::string,FeatureBase * >::iterator *arg2 = (std::map< std::string,FeatureBase * >::iterator *) 0 ;
  
  arg1 = (std::map< std::string,FeatureBase * > *)jarg1; 
  arg2 = (std::map< std::string,FeatureBase * >::iterator *)jarg2; 
  {
    try {
      std_map_Sl_std_string_Sc_FeatureBase_Sm__Sg__destroy_iterator(arg1,arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_mapStringFeatureBaseP(void * jarg1) {
  std::map< std::string,FeatureBase * > *arg1 = (std::map< std::string,FeatureBase * > *) 0 ;
  
  arg1 = (std::map< std::string,FeatureBase * > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_smartPtrFeatureBase__SWIG_0(void * jarg1) {
  void * jresult ;
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  SmartPtr< FeatureBase > *result = 0 ;
  
  arg1 = (FeatureBase *)jarg1; 
  {
    try {
      result = (SmartPtr< FeatureBase > *)new SmartPtr< FeatureBase >(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_smartPtrFeatureBase__SWIG_1() {
  void * jresult ;
  SmartPtr< FeatureBase > *result = 0 ;
  
  {
    try {
      result = (SmartPtr< FeatureBase > *)new SmartPtr< FeatureBase >();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_smartPtrFeatureBase(void * jarg1) {
  SmartPtr< FeatureBase > *arg1 = (SmartPtr< FeatureBase > *) 0 ;
  
  arg1 = (SmartPtr< FeatureBase > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_smartPtrFeatureBase__SWIG_2(void * jarg1) {
  void * jresult ;
  SmartPtr< FeatureBase > *arg1 = 0 ;
  SmartPtr< FeatureBase > *result = 0 ;
  
  arg1 = (SmartPtr< FeatureBase > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "SmartPtr< FeatureBase > const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (SmartPtr< FeatureBase > *)new SmartPtr< FeatureBase >((SmartPtr< FeatureBase > const &)*arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_smartPtrFeatureBase_assign(void * jarg1, void * jarg2) {
  void * jresult ;
  SmartPtr< FeatureBase > *arg1 = (SmartPtr< FeatureBase > *) 0 ;
  SmartPtr< FeatureBase > *arg2 = 0 ;
  SmartPtr< FeatureBase > *result = 0 ;
  
  arg1 = (SmartPtr< FeatureBase > *)jarg1; 
  arg2 = (SmartPtr< FeatureBase > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "SmartPtr< FeatureBase > const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (SmartPtr< FeatureBase > *) &(arg1)->operator =((SmartPtr< FeatureBase > const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_smartPtrFeatureBase___ref__(void * jarg1) {
  void * jresult ;
  SmartPtr< FeatureBase > *arg1 = (SmartPtr< FeatureBase > *) 0 ;
  FeatureBase *result = 0 ;
  
  arg1 = (SmartPtr< FeatureBase > *)jarg1; 
  {
    try {
      result = (FeatureBase *) &((SmartPtr< FeatureBase > const *)arg1)->operator *();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_smartPtrFeatureBase___deref__(void * jarg1) {
  void * jresult ;
  SmartPtr< FeatureBase > *arg1 = (SmartPtr< FeatureBase > *) 0 ;
  FeatureBase *result = 0 ;
  
  arg1 = (SmartPtr< FeatureBase > *)jarg1; 
  {
    try {
      result = (FeatureBase *)((SmartPtr< FeatureBase > const *)arg1)->operator ->();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_smartPtrFeatureBase_get(void * jarg1) {
  void * jresult ;
  SmartPtr< FeatureBase > *arg1 = (SmartPtr< FeatureBase > *) 0 ;
  FeatureBase *result = 0 ;
  
  arg1 = (SmartPtr< FeatureBase > *)jarg1; 
  {
    try {
      result = (FeatureBase *)((SmartPtr< FeatureBase > const *)arg1)->get();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_smartPtrFeatureBase_unique(void * jarg1) {
  unsigned int jresult ;
  SmartPtr< FeatureBase > *arg1 = (SmartPtr< FeatureBase > *) 0 ;
  bool result;
  
  arg1 = (SmartPtr< FeatureBase > *)jarg1; 
  {
    try {
      result = (bool)((SmartPtr< FeatureBase > const *)arg1)->unique();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_smartPtrFeatureBase_name(void * jarg1) {
  char * jresult ;
  SmartPtr< FeatureBase > *arg1 = (SmartPtr< FeatureBase > *) 0 ;
  char *result = 0 ;
  
  arg1 = (SmartPtr< FeatureBase > *)jarg1; 
  {
    try {
      result = (char *)(*arg1)->name();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_smartPtrFeatureBase_clone(void * jarg1) {
  void * jresult ;
  SmartPtr< FeatureBase > *arg1 = (SmartPtr< FeatureBase > *) 0 ;
  FeatureBase *result = 0 ;
  
  arg1 = (SmartPtr< FeatureBase > *)jarg1; 
  {
    try {
      result = (FeatureBase *)(*arg1)->clone();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_smartPtrFeatureBase_load(void * jarg1, void * jarg2) {
  SmartPtr< FeatureBase > *arg1 = (SmartPtr< FeatureBase > *) 0 ;
  InputState *arg2 = 0 ;
  
  arg1 = (SmartPtr< FeatureBase > *)jarg1; 
  arg2 = (InputState *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "InputState & type is null", 0);
    return ;
  } 
  {
    try {
      (*arg1)->load(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_smartPtrFeatureBase_next(void * jarg1) {
  int jresult ;
  SmartPtr< FeatureBase > *arg1 = (SmartPtr< FeatureBase > *) 0 ;
  int result;
  
  arg1 = (SmartPtr< FeatureBase > *)jarg1; 
  {
    try {
      result = (int)(*arg1)->next();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_smartPtrFeatureBase_serialize(void * jarg1, void * jarg2) {
  SmartPtr< FeatureBase > *arg1 = (SmartPtr< FeatureBase > *) 0 ;
  std::ostream *arg2 = 0 ;
  
  arg1 = (SmartPtr< FeatureBase > *)jarg1; 
  arg2 = (std::ostream *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::ostream & type is null", 0);
    return ;
  } 
  {
    try {
      (*arg1)->serialize(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_smartPtrFeatureBase_unserialize(void * jarg1, void * jarg2) {
  SmartPtr< FeatureBase > *arg1 = (SmartPtr< FeatureBase > *) 0 ;
  std::istream *arg2 = 0 ;
  
  arg1 = (SmartPtr< FeatureBase > *)jarg1; 
  arg2 = (std::istream *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::istream & type is null", 0);
    return ;
  } 
  {
    try {
      (*arg1)->unserialize(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_smartPtrFeatureBase_has_result_set(void * jarg1, int jarg2) {
  SmartPtr< FeatureBase > *arg1 = (SmartPtr< FeatureBase > *) 0 ;
  int arg2 ;
  
  arg1 = (SmartPtr< FeatureBase > *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (*arg1)->has_result = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_smartPtrFeatureBase_has_result_get(void * jarg1) {
  int jresult ;
  SmartPtr< FeatureBase > *arg1 = (SmartPtr< FeatureBase > *) 0 ;
  int result;
  
  arg1 = (SmartPtr< FeatureBase > *)jarg1; 
  result = (int) ((*arg1)->has_result);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorSmartPtrFeatureBase_Clear(void * jarg1) {
  std::vector< SmartPtr< FeatureBase > > *arg1 = (std::vector< SmartPtr< FeatureBase > > *) 0 ;
  
  arg1 = (std::vector< SmartPtr< FeatureBase > > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorSmartPtrFeatureBase_Add(void * jarg1, void * jarg2) {
  std::vector< SmartPtr< FeatureBase > > *arg1 = (std::vector< SmartPtr< FeatureBase > > *) 0 ;
  SmartPtr< FeatureBase > *arg2 = 0 ;
  
  arg1 = (std::vector< SmartPtr< FeatureBase > > *)jarg1; 
  arg2 = (SmartPtr< FeatureBase > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "SmartPtr< FeatureBase > const & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->push_back((SmartPtr< FeatureBase > const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_vectorSmartPtrFeatureBase_size(void * jarg1) {
  unsigned long jresult ;
  std::vector< SmartPtr< FeatureBase > > *arg1 = (std::vector< SmartPtr< FeatureBase > > *) 0 ;
  std::vector< SmartPtr< FeatureBase > >::size_type result;
  
  arg1 = (std::vector< SmartPtr< FeatureBase > > *)jarg1; 
  {
    try {
      result = ((std::vector< SmartPtr< FeatureBase > > const *)arg1)->size();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_vectorSmartPtrFeatureBase_capacity(void * jarg1) {
  unsigned long jresult ;
  std::vector< SmartPtr< FeatureBase > > *arg1 = (std::vector< SmartPtr< FeatureBase > > *) 0 ;
  std::vector< SmartPtr< FeatureBase > >::size_type result;
  
  arg1 = (std::vector< SmartPtr< FeatureBase > > *)jarg1; 
  {
    try {
      result = ((std::vector< SmartPtr< FeatureBase > > const *)arg1)->capacity();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorSmartPtrFeatureBase_reserve(void * jarg1, unsigned long jarg2) {
  std::vector< SmartPtr< FeatureBase > > *arg1 = (std::vector< SmartPtr< FeatureBase > > *) 0 ;
  std::vector< SmartPtr< FeatureBase > >::size_type arg2 ;
  
  arg1 = (std::vector< SmartPtr< FeatureBase > > *)jarg1; 
  arg2 = (std::vector< SmartPtr< FeatureBase > >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_vectorSmartPtrFeatureBase__SWIG_0() {
  void * jresult ;
  std::vector< SmartPtr< FeatureBase > > *result = 0 ;
  
  {
    try {
      result = (std::vector< SmartPtr< FeatureBase > > *)new std::vector< SmartPtr< FeatureBase > >();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_vectorSmartPtrFeatureBase__SWIG_1(void * jarg1) {
  void * jresult ;
  std::vector< SmartPtr< FeatureBase > > *arg1 = 0 ;
  std::vector< SmartPtr< FeatureBase > > *result = 0 ;
  
  arg1 = (std::vector< SmartPtr< FeatureBase > > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< SmartPtr< FeatureBase > > const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< SmartPtr< FeatureBase > > *)new std::vector< SmartPtr< FeatureBase > >((std::vector< SmartPtr< FeatureBase > > const &)*arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_vectorSmartPtrFeatureBase__SWIG_2(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< SmartPtr< FeatureBase > > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< SmartPtr< FeatureBase > > *)new_std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg___SWIG_2(arg1);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorSmartPtrFeatureBase_getitemcopy(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< SmartPtr< FeatureBase > > *arg1 = (std::vector< SmartPtr< FeatureBase > > *) 0 ;
  int arg2 ;
  SmartPtr< FeatureBase > result;
  
  arg1 = (std::vector< SmartPtr< FeatureBase > > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__getitemcopy(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new SmartPtr< FeatureBase >((const SmartPtr< FeatureBase > &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorSmartPtrFeatureBase_getitem(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< SmartPtr< FeatureBase > > *arg1 = (std::vector< SmartPtr< FeatureBase > > *) 0 ;
  int arg2 ;
  SmartPtr< FeatureBase > *result = 0 ;
  
  arg1 = (std::vector< SmartPtr< FeatureBase > > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (SmartPtr< FeatureBase > *) &std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__getitem(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorSmartPtrFeatureBase_setitem(void * jarg1, int jarg2, void * jarg3) {
  std::vector< SmartPtr< FeatureBase > > *arg1 = (std::vector< SmartPtr< FeatureBase > > *) 0 ;
  int arg2 ;
  SmartPtr< FeatureBase > *arg3 = 0 ;
  
  arg1 = (std::vector< SmartPtr< FeatureBase > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (SmartPtr< FeatureBase > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "SmartPtr< FeatureBase > const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__setitem(arg1,arg2,(SmartPtr< FeatureBase > const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorSmartPtrFeatureBase_AddRange(void * jarg1, void * jarg2) {
  std::vector< SmartPtr< FeatureBase > > *arg1 = (std::vector< SmartPtr< FeatureBase > > *) 0 ;
  std::vector< SmartPtr< FeatureBase > > *arg2 = 0 ;
  
  arg1 = (std::vector< SmartPtr< FeatureBase > > *)jarg1; 
  arg2 = (std::vector< SmartPtr< FeatureBase > > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< SmartPtr< FeatureBase > > const & type is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__AddRange(arg1,(std::vector< SmartPtr< FeatureBase > > const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorSmartPtrFeatureBase_GetRange(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< SmartPtr< FeatureBase > > *arg1 = (std::vector< SmartPtr< FeatureBase > > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< SmartPtr< FeatureBase > > *result = 0 ;
  
  arg1 = (std::vector< SmartPtr< FeatureBase > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< SmartPtr< FeatureBase > > *)std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__GetRange(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorSmartPtrFeatureBase_Insert(void * jarg1, int jarg2, void * jarg3) {
  std::vector< SmartPtr< FeatureBase > > *arg1 = (std::vector< SmartPtr< FeatureBase > > *) 0 ;
  int arg2 ;
  SmartPtr< FeatureBase > *arg3 = 0 ;
  
  arg1 = (std::vector< SmartPtr< FeatureBase > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (SmartPtr< FeatureBase > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "SmartPtr< FeatureBase > const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__Insert(arg1,arg2,(SmartPtr< FeatureBase > const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorSmartPtrFeatureBase_InsertRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< SmartPtr< FeatureBase > > *arg1 = (std::vector< SmartPtr< FeatureBase > > *) 0 ;
  int arg2 ;
  std::vector< SmartPtr< FeatureBase > > *arg3 = 0 ;
  
  arg1 = (std::vector< SmartPtr< FeatureBase > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< SmartPtr< FeatureBase > > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< SmartPtr< FeatureBase > > const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__InsertRange(arg1,arg2,(std::vector< SmartPtr< FeatureBase > > const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorSmartPtrFeatureBase_RemoveAt(void * jarg1, int jarg2) {
  std::vector< SmartPtr< FeatureBase > > *arg1 = (std::vector< SmartPtr< FeatureBase > > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< SmartPtr< FeatureBase > > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__RemoveAt(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorSmartPtrFeatureBase_RemoveRange(void * jarg1, int jarg2, int jarg3) {
  std::vector< SmartPtr< FeatureBase > > *arg1 = (std::vector< SmartPtr< FeatureBase > > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< SmartPtr< FeatureBase > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__RemoveRange(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorSmartPtrFeatureBase_Repeat(void * jarg1, int jarg2) {
  void * jresult ;
  SmartPtr< FeatureBase > *arg1 = 0 ;
  int arg2 ;
  std::vector< SmartPtr< FeatureBase > > *result = 0 ;
  
  arg1 = (SmartPtr< FeatureBase > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "SmartPtr< FeatureBase > const & type is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< SmartPtr< FeatureBase > > *)std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__Repeat((SmartPtr< FeatureBase > const &)*arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorSmartPtrFeatureBase_Reverse__SWIG_0(void * jarg1) {
  std::vector< SmartPtr< FeatureBase > > *arg1 = (std::vector< SmartPtr< FeatureBase > > *) 0 ;
  
  arg1 = (std::vector< SmartPtr< FeatureBase > > *)jarg1; 
  {
    try {
      std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__Reverse__SWIG_0(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorSmartPtrFeatureBase_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::vector< SmartPtr< FeatureBase > > *arg1 = (std::vector< SmartPtr< FeatureBase > > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< SmartPtr< FeatureBase > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorSmartPtrFeatureBase_SetRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< SmartPtr< FeatureBase > > *arg1 = (std::vector< SmartPtr< FeatureBase > > *) 0 ;
  int arg2 ;
  std::vector< SmartPtr< FeatureBase > > *arg3 = 0 ;
  
  arg1 = (std::vector< SmartPtr< FeatureBase > > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< SmartPtr< FeatureBase > > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< SmartPtr< FeatureBase > > const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_SmartPtr_Sl_FeatureBase_Sg__Sg__SetRange(arg1,arg2,(std::vector< SmartPtr< FeatureBase > > const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_vectorSmartPtrFeatureBase(void * jarg1) {
  std::vector< SmartPtr< FeatureBase > > *arg1 = (std::vector< SmartPtr< FeatureBase > > *) 0 ;
  
  arg1 = (std::vector< SmartPtr< FeatureBase > > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_GESTURE_FLAGS_STICKY_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GESTURE_FLAGS_ONESHOT_get() {
  int jresult ;
  int result;
  
  result = (int)(2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GESTURE_FLAGS_DEFAULT_get() {
  int jresult ;
  int result;
  
  result = (int)(4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_read_from__SWIG_3(void * jarg1, void * jarg2) {
  void * jresult ;
  std::istream *arg1 = 0 ;
  Gesture *arg2 = 0 ;
  std::istream *result = 0 ;
  
  arg1 = (std::istream *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::istream & type is null", 0);
    return 0;
  } 
  arg2 = (Gesture *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Gesture & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::istream *) &operator >>(*arg1,*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_write_to__SWIG_4(void * jarg1, void * jarg2) {
  void * jresult ;
  std::ostream *arg1 = 0 ;
  Gesture *arg2 = 0 ;
  std::ostream *result = 0 ;
  
  arg1 = (std::ostream *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::ostream & type is null", 0);
    return 0;
  } 
  arg2 = (Gesture *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Gesture & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::ostream *) &operator <<(*arg1,*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Gesture__SWIG_0() {
  void * jresult ;
  Gesture *result = 0 ;
  
  {
    try {
      result = (Gesture *)new Gesture();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Gesture__SWIG_1(char * jarg1, int jarg2) {
  void * jresult ;
  std::string arg1 ;
  int arg2 ;
  Gesture *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg1)->assign(jarg1); 
  arg2 = (int)jarg2; 
  {
    try {
      result = (Gesture *)new Gesture(arg1,arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Gesture__SWIG_2(char * jarg1) {
  void * jresult ;
  std::string arg1 ;
  Gesture *result = 0 ;
  
  if (!jarg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg1)->assign(jarg1); 
  {
    try {
      result = (Gesture *)new Gesture(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Gesture__SWIG_3(void * jarg1) {
  void * jresult ;
  Gesture *arg1 = 0 ;
  Gesture *result = 0 ;
  
  arg1 = (Gesture *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Gesture const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (Gesture *)new Gesture((Gesture const &)*arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Gesture_assign(void * jarg1, void * jarg2) {
  void * jresult ;
  Gesture *arg1 = (Gesture *) 0 ;
  Gesture *arg2 = 0 ;
  Gesture *result = 0 ;
  
  arg1 = (Gesture *)jarg1; 
  arg2 = (Gesture *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Gesture const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (Gesture *) &(arg1)->operator =((Gesture const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Gesture_load(void * jarg1, void * jarg2) {
  Gesture *arg1 = (Gesture *) 0 ;
  InputState *arg2 = 0 ;
  
  arg1 = (Gesture *)jarg1; 
  arg2 = (InputState *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "InputState & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->load(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Gesture_check(void * jarg1) {
  Gesture *arg1 = (Gesture *) 0 ;
  
  arg1 = (Gesture *)jarg1; 
  {
    try {
      (arg1)->check();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_Gesture_next(void * jarg1) {
  int jresult ;
  Gesture *arg1 = (Gesture *) 0 ;
  int result;
  
  arg1 = (Gesture *)jarg1; 
  {
    try {
      result = (int)(arg1)->next();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Gesture_match(void * jarg1) {
  int jresult ;
  Gesture *arg1 = (Gesture *) 0 ;
  int result;
  
  arg1 = (Gesture *)jarg1; 
  {
    try {
      result = (int)(arg1)->match();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_Gesture_name(void * jarg1) {
  char * jresult ;
  Gesture *arg1 = (Gesture *) 0 ;
  std::string *result = 0 ;
  
  arg1 = (Gesture *)jarg1; 
  {
    try {
      result = (std::string *) &((Gesture const *)arg1)->name();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Gesture_flags(void * jarg1) {
  int jresult ;
  Gesture *arg1 = (Gesture *) 0 ;
  int result;
  
  arg1 = (Gesture *)jarg1; 
  {
    try {
      result = (int)((Gesture const *)arg1)->flags();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Gesture(void * jarg1) {
  Gesture *arg1 = (Gesture *) 0 ;
  
  arg1 = (Gesture *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorGesture_Clear(void * jarg1) {
  std::vector< Gesture > *arg1 = (std::vector< Gesture > *) 0 ;
  
  arg1 = (std::vector< Gesture > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorGesture_Add(void * jarg1, void * jarg2) {
  std::vector< Gesture > *arg1 = (std::vector< Gesture > *) 0 ;
  Gesture *arg2 = 0 ;
  
  arg1 = (std::vector< Gesture > *)jarg1; 
  arg2 = (Gesture *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Gesture const & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->push_back((Gesture const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_vectorGesture_size(void * jarg1) {
  unsigned long jresult ;
  std::vector< Gesture > *arg1 = (std::vector< Gesture > *) 0 ;
  std::vector< Gesture >::size_type result;
  
  arg1 = (std::vector< Gesture > *)jarg1; 
  {
    try {
      result = ((std::vector< Gesture > const *)arg1)->size();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_vectorGesture_capacity(void * jarg1) {
  unsigned long jresult ;
  std::vector< Gesture > *arg1 = (std::vector< Gesture > *) 0 ;
  std::vector< Gesture >::size_type result;
  
  arg1 = (std::vector< Gesture > *)jarg1; 
  {
    try {
      result = ((std::vector< Gesture > const *)arg1)->capacity();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorGesture_reserve(void * jarg1, unsigned long jarg2) {
  std::vector< Gesture > *arg1 = (std::vector< Gesture > *) 0 ;
  std::vector< Gesture >::size_type arg2 ;
  
  arg1 = (std::vector< Gesture > *)jarg1; 
  arg2 = (std::vector< Gesture >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_vectorGesture__SWIG_0() {
  void * jresult ;
  std::vector< Gesture > *result = 0 ;
  
  {
    try {
      result = (std::vector< Gesture > *)new std::vector< Gesture >();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_vectorGesture__SWIG_1(void * jarg1) {
  void * jresult ;
  std::vector< Gesture > *arg1 = 0 ;
  std::vector< Gesture > *result = 0 ;
  
  arg1 = (std::vector< Gesture > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< Gesture > const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< Gesture > *)new std::vector< Gesture >((std::vector< Gesture > const &)*arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_vectorGesture__SWIG_2(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< Gesture > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< Gesture > *)new_std_vector_Sl_Gesture_Sg___SWIG_2(arg1);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorGesture_getitemcopy(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< Gesture > *arg1 = (std::vector< Gesture > *) 0 ;
  int arg2 ;
  Gesture result;
  
  arg1 = (std::vector< Gesture > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = std_vector_Sl_Gesture_Sg__getitemcopy(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new Gesture((const Gesture &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorGesture_getitem(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< Gesture > *arg1 = (std::vector< Gesture > *) 0 ;
  int arg2 ;
  Gesture *result = 0 ;
  
  arg1 = (std::vector< Gesture > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (Gesture *) &std_vector_Sl_Gesture_Sg__getitem(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorGesture_setitem(void * jarg1, int jarg2, void * jarg3) {
  std::vector< Gesture > *arg1 = (std::vector< Gesture > *) 0 ;
  int arg2 ;
  Gesture *arg3 = 0 ;
  
  arg1 = (std::vector< Gesture > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (Gesture *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Gesture const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_Gesture_Sg__setitem(arg1,arg2,(Gesture const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorGesture_AddRange(void * jarg1, void * jarg2) {
  std::vector< Gesture > *arg1 = (std::vector< Gesture > *) 0 ;
  std::vector< Gesture > *arg2 = 0 ;
  
  arg1 = (std::vector< Gesture > *)jarg1; 
  arg2 = (std::vector< Gesture > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< Gesture > const & type is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_Gesture_Sg__AddRange(arg1,(std::vector< Gesture > const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorGesture_GetRange(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< Gesture > *arg1 = (std::vector< Gesture > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< Gesture > *result = 0 ;
  
  arg1 = (std::vector< Gesture > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< Gesture > *)std_vector_Sl_Gesture_Sg__GetRange(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorGesture_Insert(void * jarg1, int jarg2, void * jarg3) {
  std::vector< Gesture > *arg1 = (std::vector< Gesture > *) 0 ;
  int arg2 ;
  Gesture *arg3 = 0 ;
  
  arg1 = (std::vector< Gesture > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (Gesture *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Gesture const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_Gesture_Sg__Insert(arg1,arg2,(Gesture const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorGesture_InsertRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< Gesture > *arg1 = (std::vector< Gesture > *) 0 ;
  int arg2 ;
  std::vector< Gesture > *arg3 = 0 ;
  
  arg1 = (std::vector< Gesture > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< Gesture > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< Gesture > const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_Gesture_Sg__InsertRange(arg1,arg2,(std::vector< Gesture > const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorGesture_RemoveAt(void * jarg1, int jarg2) {
  std::vector< Gesture > *arg1 = (std::vector< Gesture > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< Gesture > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_Gesture_Sg__RemoveAt(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorGesture_RemoveRange(void * jarg1, int jarg2, int jarg3) {
  std::vector< Gesture > *arg1 = (std::vector< Gesture > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< Gesture > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_Gesture_Sg__RemoveRange(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorGesture_Repeat(void * jarg1, int jarg2) {
  void * jresult ;
  Gesture *arg1 = 0 ;
  int arg2 ;
  std::vector< Gesture > *result = 0 ;
  
  arg1 = (Gesture *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Gesture const & type is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< Gesture > *)std_vector_Sl_Gesture_Sg__Repeat((Gesture const &)*arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorGesture_Reverse__SWIG_0(void * jarg1) {
  std::vector< Gesture > *arg1 = (std::vector< Gesture > *) 0 ;
  
  arg1 = (std::vector< Gesture > *)jarg1; 
  {
    try {
      std_vector_Sl_Gesture_Sg__Reverse__SWIG_0(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorGesture_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::vector< Gesture > *arg1 = (std::vector< Gesture > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< Gesture > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_Gesture_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorGesture_SetRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< Gesture > *arg1 = (std::vector< Gesture > *) 0 ;
  int arg2 ;
  std::vector< Gesture > *arg3 = 0 ;
  
  arg1 = (std::vector< Gesture > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< Gesture > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< Gesture > const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_Gesture_Sg__SetRange(arg1,arg2,(std::vector< Gesture > const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_vectorGesture(void * jarg1) {
  std::vector< Gesture > *arg1 = (std::vector< Gesture > *) 0 ;
  
  arg1 = (std::vector< Gesture > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_read_from__SWIG_4(void * jarg1, void * jarg2) {
  void * jresult ;
  std::istream *arg1 = 0 ;
  Region *arg2 = 0 ;
  std::istream *result = 0 ;
  
  arg1 = (std::istream *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::istream & type is null", 0);
    return 0;
  } 
  arg2 = (Region *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Region & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::istream *) &operator >>(*arg1,*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_write_to__SWIG_5(void * jarg1, void * jarg2) {
  void * jresult ;
  std::ostream *arg1 = 0 ;
  Region *arg2 = 0 ;
  std::ostream *result = 0 ;
  
  arg1 = (std::ostream *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::ostream & type is null", 0);
    return 0;
  } 
  arg2 = (Region *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Region & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::ostream *) &operator <<(*arg1,*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Region__SWIG_0(unsigned int jarg1) {
  void * jresult ;
  unsigned int arg1 ;
  Region *result = 0 ;
  
  arg1 = (unsigned int)jarg1; 
  {
    try {
      result = (Region *)new Region(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Region__SWIG_1() {
  void * jresult ;
  Region *result = 0 ;
  
  {
    try {
      result = (Region *)new Region();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Region_contains(void * jarg1, void * jarg2) {
  int jresult ;
  Region *arg1 = (Region *) 0 ;
  Vector arg2 ;
  Vector *argp2 ;
  int result;
  
  arg1 = (Region *)jarg1; 
  argp2 = (Vector *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null Vector", 0);
    return 0;
  }
  arg2 = *argp2; 
  {
    try {
      result = (int)(arg1)->contains(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Region_flags__SWIG_0(void * jarg1) {
  unsigned int jresult ;
  Region *arg1 = (Region *) 0 ;
  unsigned int result;
  
  arg1 = (Region *)jarg1; 
  {
    try {
      result = (unsigned int)((Region const *)arg1)->flags();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Region_flags__SWIG_1(void * jarg1, unsigned int jarg2) {
  Region *arg1 = (Region *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (Region *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  {
    try {
      (arg1)->flags(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Region_gestures_set(void * jarg1, void * jarg2) {
  Region *arg1 = (Region *) 0 ;
  std::vector< Gesture > *arg2 = (std::vector< Gesture > *) 0 ;
  
  arg1 = (Region *)jarg1; 
  arg2 = (std::vector< Gesture > *)jarg2; 
  if (arg1) (arg1)->gestures = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Region_gestures_get(void * jarg1) {
  void * jresult ;
  Region *arg1 = (Region *) 0 ;
  std::vector< Gesture > *result = 0 ;
  
  arg1 = (Region *)jarg1; 
  result = (std::vector< Gesture > *)& ((arg1)->gestures);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Region(void * jarg1) {
  Region *arg1 = (Region *) 0 ;
  
  arg1 = (Region *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_StateRegion__SWIG_0(unsigned long long jarg1) {
  void * jresult ;
  unsigned long long arg1 ;
  StateRegion *result = 0 ;
  
  arg1 = (unsigned long long)jarg1; 
  {
    try {
      result = (StateRegion *)new StateRegion(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_StateRegion__SWIG_1() {
  void * jresult ;
  StateRegion *result = 0 ;
  
  {
    try {
      result = (StateRegion *)new StateRegion();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_StateRegion_assign(void * jarg1, void * jarg2) {
  void * jresult ;
  StateRegion *arg1 = (StateRegion *) 0 ;
  Region *arg2 = 0 ;
  StateRegion *result = 0 ;
  
  arg1 = (StateRegion *)jarg1; 
  arg2 = (Region *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Region & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (StateRegion *) &(arg1)->operator =(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_StateRegion_update(void * jarg1) {
  StateRegion *arg1 = (StateRegion *) 0 ;
  
  arg1 = (StateRegion *)jarg1; 
  {
    try {
      (arg1)->update();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_StateRegion_nextMatch(void * jarg1) {
  void * jresult ;
  StateRegion *arg1 = (StateRegion *) 0 ;
  Gesture *result = 0 ;
  
  arg1 = (StateRegion *)jarg1; 
  {
    try {
      result = (Gesture *)(arg1)->nextMatch();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_StateRegion_id_set(void * jarg1, unsigned long long jarg2) {
  StateRegion *arg1 = (StateRegion *) 0 ;
  unsigned long long arg2 ;
  
  arg1 = (StateRegion *)jarg1; 
  arg2 = (unsigned long long)jarg2; 
  if (arg1) (arg1)->id = arg2;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_StateRegion_id_get(void * jarg1) {
  unsigned long long jresult ;
  StateRegion *arg1 = (StateRegion *) 0 ;
  unsigned long long result;
  
  arg1 = (StateRegion *)jarg1; 
  result = (unsigned long long) ((arg1)->id);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_StateRegion_first_set(void * jarg1, int jarg2) {
  StateRegion *arg1 = (StateRegion *) 0 ;
  int arg2 ;
  
  arg1 = (StateRegion *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->first = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_StateRegion_first_get(void * jarg1) {
  int jresult ;
  StateRegion *arg1 = (StateRegion *) 0 ;
  int result;
  
  arg1 = (StateRegion *)jarg1; 
  result = (int) ((arg1)->first);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_StateRegion_state_set(void * jarg1, void * jarg2) {
  StateRegion *arg1 = (StateRegion *) 0 ;
  InputState *arg2 = (InputState *) 0 ;
  
  arg1 = (StateRegion *)jarg1; 
  arg2 = (InputState *)jarg2; 
  if (arg1) (arg1)->state = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_StateRegion_state_get(void * jarg1) {
  void * jresult ;
  StateRegion *arg1 = (StateRegion *) 0 ;
  InputState *result = 0 ;
  
  arg1 = (StateRegion *)jarg1; 
  result = (InputState *)& ((arg1)->state);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_StateRegion_gst_set(void * jarg1, void * jarg2) {
  StateRegion *arg1 = (StateRegion *) 0 ;
  std::vector< Gesture >::iterator *arg2 = (std::vector< Gesture >::iterator *) 0 ;
  
  arg1 = (StateRegion *)jarg1; 
  arg2 = (std::vector< Gesture >::iterator *)jarg2; 
  if (arg1) (arg1)->gst = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_StateRegion_gst_get(void * jarg1) {
  void * jresult ;
  StateRegion *arg1 = (StateRegion *) 0 ;
  std::vector< Gesture >::iterator *result = 0 ;
  
  arg1 = (StateRegion *)jarg1; 
  result = (std::vector< Gesture >::iterator *)& ((arg1)->gst);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_StateRegion(void * jarg1) {
  StateRegion *arg1 = (StateRegion *) 0 ;
  
  arg1 = (StateRegion *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Matcher_request_update(void * jarg1, unsigned long long jarg2) {
  Matcher *arg1 = (Matcher *) 0 ;
  unsigned long long arg2 ;
  
  arg1 = (Matcher *)jarg1; 
  arg2 = (unsigned long long)jarg2; 
  {
    try {
      (arg1)->request_update(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Matcher_trigger_gesture(void * jarg1, unsigned long long jarg2, void * jarg3) {
  Matcher *arg1 = (Matcher *) 0 ;
  unsigned long long arg2 ;
  Gesture *arg3 = (Gesture *) 0 ;
  
  arg1 = (Matcher *)jarg1; 
  arg2 = (unsigned long long)jarg2; 
  arg3 = (Gesture *)jarg3; 
  {
    try {
      (arg1)->trigger_gesture(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Matcher_process_blob(void * jarg1, void * jarg2) {
  Matcher *arg1 = (Matcher *) 0 ;
  BasicBlob *arg2 = 0 ;
  
  arg1 = (Matcher *)jarg1; 
  arg2 = (BasicBlob *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "BasicBlob & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->process_blob(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Matcher_prepare_updates(void * jarg1) {
  Matcher *arg1 = (Matcher *) 0 ;
  
  arg1 = (Matcher *)jarg1; 
  {
    try {
      (arg1)->prepare_updates();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Matcher_process_updates(void * jarg1) {
  Matcher *arg1 = (Matcher *) 0 ;
  
  arg1 = (Matcher *)jarg1; 
  {
    try {
      (arg1)->process_updates();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Matcher_prepare_gestures(void * jarg1) {
  Matcher *arg1 = (Matcher *) 0 ;
  
  arg1 = (Matcher *)jarg1; 
  {
    try {
      (arg1)->prepare_gestures();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Matcher_process_gestures(void * jarg1) {
  Matcher *arg1 = (Matcher *) 0 ;
  
  arg1 = (Matcher *)jarg1; 
  {
    try {
      (arg1)->process_gestures();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Matcher_has_input_data(void * jarg1) {
  unsigned int jresult ;
  Matcher *arg1 = (Matcher *) 0 ;
  bool result;
  
  arg1 = (Matcher *)jarg1; 
  {
    try {
      result = (bool)(arg1)->has_input_data();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Matcher_load_defaults__SWIG_0(void * jarg1, unsigned int jarg2) {
  Matcher *arg1 = (Matcher *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (Matcher *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  {
    try {
      (arg1)->load_defaults(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Matcher_load_defaults__SWIG_1(void * jarg1) {
  Matcher *arg1 = (Matcher *) 0 ;
  
  arg1 = (Matcher *)jarg1; 
  {
    try {
      (arg1)->load_defaults();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Matcher_run(void * jarg1) {
  void * jresult ;
  Matcher *arg1 = (Matcher *) 0 ;
  void *result = 0 ;
  
  arg1 = (Matcher *)jarg1; 
  {
    try {
      result = (void *)(arg1)->run();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Matcher_update(void * jarg1, unsigned long long jarg2, void * jarg3) {
  Matcher *arg1 = (Matcher *) 0 ;
  unsigned long long arg2 ;
  Region *arg3 = (Region *) 0 ;
  
  arg1 = (Matcher *)jarg1; 
  arg2 = (unsigned long long)jarg2; 
  arg3 = (Region *)jarg3; 
  {
    try {
      (arg1)->update(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Matcher_remove(void * jarg1, unsigned long long jarg2) {
  Matcher *arg1 = (Matcher *) 0 ;
  unsigned long long arg2 ;
  
  arg1 = (Matcher *)jarg1; 
  arg2 = (unsigned long long)jarg2; 
  {
    try {
      (arg1)->remove(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Matcher_raise(void * jarg1, unsigned long long jarg2) {
  Matcher *arg1 = (Matcher *) 0 ;
  unsigned long long arg2 ;
  
  arg1 = (Matcher *)jarg1; 
  arg2 = (unsigned long long)jarg2; 
  {
    try {
      (arg1)->raise(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Matcher_lower(void * jarg1, unsigned long long jarg2) {
  Matcher *arg1 = (Matcher *) 0 ;
  unsigned long long arg2 ;
  
  arg1 = (Matcher *)jarg1; 
  arg2 = (unsigned long long)jarg2; 
  {
    try {
      (arg1)->lower(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Matcher_peakmode(void * jarg1, unsigned int jarg2) {
  Matcher *arg1 = (Matcher *) 0 ;
  bool arg2 ;
  
  arg1 = (Matcher *)jarg1; 
  arg2 = jarg2 ? true : false; 
  {
    try {
      (arg1)->peakmode(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Matcher_clear(void * jarg1) {
  Matcher *arg1 = (Matcher *) 0 ;
  
  arg1 = (Matcher *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Matcher(void * jarg1) {
  Matcher *arg1 = (Matcher *) 0 ;
  
  arg1 = (Matcher *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MatcherTUIOInput(void * jarg1) {
  void * jresult ;
  Matcher *arg1 = (Matcher *) 0 ;
  MatcherTUIOInput *result = 0 ;
  
  arg1 = (Matcher *)jarg1; 
  {
    try {
      result = (MatcherTUIOInput *)new MatcherTUIOInput(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MatcherTUIOInput_process_frame(void * jarg1) {
  MatcherTUIOInput *arg1 = (MatcherTUIOInput *) 0 ;
  
  arg1 = (MatcherTUIOInput *)jarg1; 
  {
    try {
      (arg1)->process_frame();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_MatcherTUIOInput_process_blob(void * jarg1, void * jarg2) {
  MatcherTUIOInput *arg1 = (MatcherTUIOInput *) 0 ;
  BasicBlob *arg2 = 0 ;
  
  arg1 = (MatcherTUIOInput *)jarg1; 
  arg2 = (BasicBlob *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "BasicBlob & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->process_blob(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MatcherTUIOInput(void * jarg1) {
  MatcherTUIOInput *arg1 = (MatcherTUIOInput *) 0 ;
  
  arg1 = (MatcherTUIOInput *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_FeatureInt(void * jarg1) {
  Feature< int > *arg1 = (Feature< int > *) 0 ;
  
  arg1 = (Feature< int > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_FeatureInt_result(void * jarg1) {
  int jresult ;
  Feature< int > *arg1 = (Feature< int > *) 0 ;
  int result;
  
  arg1 = (Feature< int > *)jarg1; 
  {
    try {
      result = (int)(arg1)->result();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FeatureInt_bounds(void * jarg1, void * jarg2) {
  Feature< int > *arg1 = (Feature< int > *) 0 ;
  std::vector< int > *arg2 = 0 ;
  
  arg1 = (Feature< int > *)jarg1; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->bounds(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_FeatureInt_next(void * jarg1) {
  int jresult ;
  Feature< int > *arg1 = (Feature< int > *) 0 ;
  int result;
  
  arg1 = (Feature< int > *)jarg1; 
  {
    try {
      result = (int)(arg1)->next();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FeatureInt_load(void * jarg1, void * jarg2) {
  Feature< int > *arg1 = (Feature< int > *) 0 ;
  InputState *arg2 = 0 ;
  
  arg1 = (Feature< int > *)jarg1; 
  arg2 = (InputState *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "InputState & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->load(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_FeatureInt_name(void * jarg1) {
  char * jresult ;
  Feature< int > *arg1 = (Feature< int > *) 0 ;
  char *result = 0 ;
  
  arg1 = (Feature< int > *)jarg1; 
  {
    try {
      result = (char *)((Feature< int > const *)arg1)->name();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FeatureInt_serialize(void * jarg1, void * jarg2) {
  Feature< int > *arg1 = (Feature< int > *) 0 ;
  std::ostream *arg2 = 0 ;
  
  arg1 = (Feature< int > *)jarg1; 
  arg2 = (std::ostream *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::ostream & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->serialize(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_FeatureInt_unserialize(void * jarg1, void * jarg2) {
  Feature< int > *arg1 = (Feature< int > *) 0 ;
  std::istream *arg2 = 0 ;
  
  arg1 = (Feature< int > *)jarg1; 
  arg2 = (std::istream *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::istream & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->unserialize(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FeatureInt_dynamic_cast(void * jarg1) {
  void * jresult ;
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  Feature< int > *result = 0 ;
  
  arg1 = (FeatureBase *)jarg1; 
  {
    try {
      result = (Feature< int > *)Feature_Sl_int_Sg__dynamic_cast(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorInt_Clear(void * jarg1) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorInt_Add(void * jarg1, int jarg2) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int *arg2 = 0 ;
  int temp2 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  temp2 = (int)jarg2; 
  arg2 = &temp2; 
  {
    try {
      (arg1)->push_back((int const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_vectorInt_size(void * jarg1) {
  unsigned long jresult ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::size_type result;
  
  arg1 = (std::vector< int > *)jarg1; 
  {
    try {
      result = ((std::vector< int > const *)arg1)->size();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_vectorInt_capacity(void * jarg1) {
  unsigned long jresult ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::size_type result;
  
  arg1 = (std::vector< int > *)jarg1; 
  {
    try {
      result = ((std::vector< int > const *)arg1)->capacity();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorInt_reserve(void * jarg1, unsigned long jarg2) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::size_type arg2 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (std::vector< int >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_vectorInt__SWIG_0() {
  void * jresult ;
  std::vector< int > *result = 0 ;
  
  {
    try {
      result = (std::vector< int > *)new std::vector< int >();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_vectorInt__SWIG_1(void * jarg1) {
  void * jresult ;
  std::vector< int > *arg1 = 0 ;
  std::vector< int > *result = 0 ;
  
  arg1 = (std::vector< int > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< int > *)new std::vector< int >((std::vector< int > const &)*arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_vectorInt__SWIG_2(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< int > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< int > *)new_std_vector_Sl_int_Sg___SWIG_2(arg1);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_vectorInt_getitemcopy(void * jarg1, int jarg2) {
  int jresult ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int arg2 ;
  int result;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (int)std_vector_Sl_int_Sg__getitemcopy(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_vectorInt_getitem(void * jarg1, int jarg2) {
  int jresult ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int arg2 ;
  int *result = 0 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (int *) &std_vector_Sl_int_Sg__getitem(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = *result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorInt_setitem(void * jarg1, int jarg2, int jarg3) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int arg2 ;
  int *arg3 = 0 ;
  int temp3 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  temp3 = (int)jarg3; 
  arg3 = &temp3; 
  {
    try {
      try {
        std_vector_Sl_int_Sg__setitem(arg1,arg2,(int const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorInt_AddRange(void * jarg1, void * jarg2) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int > *arg2 = 0 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (std::vector< int > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & type is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_int_Sg__AddRange(arg1,(std::vector< int > const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorInt_GetRange(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< int > *result = 0 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< int > *)std_vector_Sl_int_Sg__GetRange(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorInt_Insert(void * jarg1, int jarg2, int jarg3) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int arg2 ;
  int *arg3 = 0 ;
  int temp3 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  temp3 = (int)jarg3; 
  arg3 = &temp3; 
  {
    try {
      try {
        std_vector_Sl_int_Sg__Insert(arg1,arg2,(int const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorInt_InsertRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int arg2 ;
  std::vector< int > *arg3 = 0 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< int > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_int_Sg__InsertRange(arg1,arg2,(std::vector< int > const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorInt_RemoveAt(void * jarg1, int jarg2) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_int_Sg__RemoveAt(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorInt_RemoveRange(void * jarg1, int jarg2, int jarg3) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_int_Sg__RemoveRange(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorInt_Repeat(int jarg1, int jarg2) {
  void * jresult ;
  int *arg1 = 0 ;
  int arg2 ;
  int temp1 ;
  std::vector< int > *result = 0 ;
  
  temp1 = (int)jarg1; 
  arg1 = &temp1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< int > *)std_vector_Sl_int_Sg__Repeat((int const &)*arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorInt_Reverse__SWIG_0(void * jarg1) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  {
    try {
      std_vector_Sl_int_Sg__Reverse__SWIG_0(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorInt_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_int_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorInt_SetRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int arg2 ;
  std::vector< int > *arg3 = 0 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< int > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< int > const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_int_Sg__SetRange(arg1,arg2,(std::vector< int > const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_vectorInt_Contains(void * jarg1, int jarg2) {
  unsigned int jresult ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int *arg2 = 0 ;
  int temp2 ;
  bool result;
  
  arg1 = (std::vector< int > *)jarg1; 
  temp2 = (int)jarg2; 
  arg2 = &temp2; 
  {
    try {
      result = (bool)std_vector_Sl_int_Sg__Contains(arg1,(int const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_vectorInt_IndexOf(void * jarg1, int jarg2) {
  int jresult ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int *arg2 = 0 ;
  int temp2 ;
  int result;
  
  arg1 = (std::vector< int > *)jarg1; 
  temp2 = (int)jarg2; 
  arg2 = &temp2; 
  {
    try {
      result = (int)std_vector_Sl_int_Sg__IndexOf(arg1,(int const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_vectorInt_LastIndexOf(void * jarg1, int jarg2) {
  int jresult ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int *arg2 = 0 ;
  int temp2 ;
  int result;
  
  arg1 = (std::vector< int > *)jarg1; 
  temp2 = (int)jarg2; 
  arg2 = &temp2; 
  {
    try {
      result = (int)std_vector_Sl_int_Sg__LastIndexOf(arg1,(int const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_vectorInt_Remove(void * jarg1, int jarg2) {
  unsigned int jresult ;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  int *arg2 = 0 ;
  int temp2 ;
  bool result;
  
  arg1 = (std::vector< int > *)jarg1; 
  temp2 = (int)jarg2; 
  arg2 = &temp2; 
  {
    try {
      result = (bool)std_vector_Sl_int_Sg__Remove(arg1,(int const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_vectorInt(void * jarg1) {
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  
  arg1 = (std::vector< int > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_BlobCount__SWIG_0(unsigned int jarg1) {
  void * jresult ;
  unsigned int arg1 ;
  BlobCount *result = 0 ;
  
  arg1 = (unsigned int)jarg1; 
  {
    try {
      result = (BlobCount *)new BlobCount(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_BlobCount__SWIG_1() {
  void * jresult ;
  BlobCount *result = 0 ;
  
  {
    try {
      result = (BlobCount *)new BlobCount();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_BlobCount(void * jarg1) {
  BlobCount *arg1 = (BlobCount *) 0 ;
  
  arg1 = (BlobCount *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BlobCount_clone(void * jarg1) {
  void * jresult ;
  BlobCount *arg1 = (BlobCount *) 0 ;
  BlobCount *result = 0 ;
  
  arg1 = (BlobCount *)jarg1; 
  {
    try {
      result = (BlobCount *)((BlobCount const *)arg1)->clone();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BlobCount_load(void * jarg1, void * jarg2) {
  BlobCount *arg1 = (BlobCount *) 0 ;
  InputState *arg2 = 0 ;
  
  arg1 = (BlobCount *)jarg1; 
  arg2 = (InputState *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "InputState & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->load(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_BlobCount_name(void * jarg1) {
  char * jresult ;
  BlobCount *arg1 = (BlobCount *) 0 ;
  char *result = 0 ;
  
  arg1 = (BlobCount *)jarg1; 
  {
    try {
      result = (char *)((BlobCount const *)arg1)->name();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BlobCount_dynamic_cast(void * jarg1) {
  void * jresult ;
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  BlobCount *result = 0 ;
  
  arg1 = (FeatureBase *)jarg1; 
  {
    try {
      result = (BlobCount *)BlobCount_dynamic_cast(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_FeatureDimensions(void * jarg1) {
  Feature< Dimensions > *arg1 = (Feature< Dimensions > *) 0 ;
  
  arg1 = (Feature< Dimensions > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FeatureDimensions_result(void * jarg1) {
  void * jresult ;
  Feature< Dimensions > *arg1 = (Feature< Dimensions > *) 0 ;
  Dimensions result;
  
  arg1 = (Feature< Dimensions > *)jarg1; 
  {
    try {
      result = (arg1)->result();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new Dimensions((const Dimensions &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FeatureDimensions_bounds(void * jarg1, void * jarg2) {
  Feature< Dimensions > *arg1 = (Feature< Dimensions > *) 0 ;
  std::vector< Dimensions > *arg2 = 0 ;
  
  arg1 = (Feature< Dimensions > *)jarg1; 
  arg2 = (std::vector< Dimensions > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< Dimensions > & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->bounds(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_FeatureDimensions_next(void * jarg1) {
  int jresult ;
  Feature< Dimensions > *arg1 = (Feature< Dimensions > *) 0 ;
  int result;
  
  arg1 = (Feature< Dimensions > *)jarg1; 
  {
    try {
      result = (int)(arg1)->next();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FeatureDimensions_load(void * jarg1, void * jarg2) {
  Feature< Dimensions > *arg1 = (Feature< Dimensions > *) 0 ;
  InputState *arg2 = 0 ;
  
  arg1 = (Feature< Dimensions > *)jarg1; 
  arg2 = (InputState *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "InputState & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->load(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_FeatureDimensions_name(void * jarg1) {
  char * jresult ;
  Feature< Dimensions > *arg1 = (Feature< Dimensions > *) 0 ;
  char *result = 0 ;
  
  arg1 = (Feature< Dimensions > *)jarg1; 
  {
    try {
      result = (char *)((Feature< Dimensions > const *)arg1)->name();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FeatureDimensions_serialize(void * jarg1, void * jarg2) {
  Feature< Dimensions > *arg1 = (Feature< Dimensions > *) 0 ;
  std::ostream *arg2 = 0 ;
  
  arg1 = (Feature< Dimensions > *)jarg1; 
  arg2 = (std::ostream *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::ostream & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->serialize(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_FeatureDimensions_unserialize(void * jarg1, void * jarg2) {
  Feature< Dimensions > *arg1 = (Feature< Dimensions > *) 0 ;
  std::istream *arg2 = 0 ;
  
  arg1 = (Feature< Dimensions > *)jarg1; 
  arg2 = (std::istream *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::istream & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->unserialize(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FeatureDimensions_dynamic_cast(void * jarg1) {
  void * jresult ;
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  Feature< Dimensions > *result = 0 ;
  
  arg1 = (FeatureBase *)jarg1; 
  {
    try {
      result = (Feature< Dimensions > *)Feature_Sl_Dimensions_Sg__dynamic_cast(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDimensions_Clear(void * jarg1) {
  std::vector< Dimensions > *arg1 = (std::vector< Dimensions > *) 0 ;
  
  arg1 = (std::vector< Dimensions > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDimensions_Add(void * jarg1, void * jarg2) {
  std::vector< Dimensions > *arg1 = (std::vector< Dimensions > *) 0 ;
  Dimensions *arg2 = 0 ;
  
  arg1 = (std::vector< Dimensions > *)jarg1; 
  arg2 = (Dimensions *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Dimensions const & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->push_back((Dimensions const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_vectorDimensions_size(void * jarg1) {
  unsigned long jresult ;
  std::vector< Dimensions > *arg1 = (std::vector< Dimensions > *) 0 ;
  std::vector< Dimensions >::size_type result;
  
  arg1 = (std::vector< Dimensions > *)jarg1; 
  {
    try {
      result = ((std::vector< Dimensions > const *)arg1)->size();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_vectorDimensions_capacity(void * jarg1) {
  unsigned long jresult ;
  std::vector< Dimensions > *arg1 = (std::vector< Dimensions > *) 0 ;
  std::vector< Dimensions >::size_type result;
  
  arg1 = (std::vector< Dimensions > *)jarg1; 
  {
    try {
      result = ((std::vector< Dimensions > const *)arg1)->capacity();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDimensions_reserve(void * jarg1, unsigned long jarg2) {
  std::vector< Dimensions > *arg1 = (std::vector< Dimensions > *) 0 ;
  std::vector< Dimensions >::size_type arg2 ;
  
  arg1 = (std::vector< Dimensions > *)jarg1; 
  arg2 = (std::vector< Dimensions >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_vectorDimensions__SWIG_0() {
  void * jresult ;
  std::vector< Dimensions > *result = 0 ;
  
  {
    try {
      result = (std::vector< Dimensions > *)new std::vector< Dimensions >();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_vectorDimensions__SWIG_1(void * jarg1) {
  void * jresult ;
  std::vector< Dimensions > *arg1 = 0 ;
  std::vector< Dimensions > *result = 0 ;
  
  arg1 = (std::vector< Dimensions > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< Dimensions > const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< Dimensions > *)new std::vector< Dimensions >((std::vector< Dimensions > const &)*arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_vectorDimensions__SWIG_2(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< Dimensions > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< Dimensions > *)new_std_vector_Sl_Dimensions_Sg___SWIG_2(arg1);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorDimensions_getitemcopy(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< Dimensions > *arg1 = (std::vector< Dimensions > *) 0 ;
  int arg2 ;
  Dimensions result;
  
  arg1 = (std::vector< Dimensions > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = std_vector_Sl_Dimensions_Sg__getitemcopy(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new Dimensions((const Dimensions &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorDimensions_getitem(void * jarg1, int jarg2) {
  void * jresult ;
  std::vector< Dimensions > *arg1 = (std::vector< Dimensions > *) 0 ;
  int arg2 ;
  Dimensions *result = 0 ;
  
  arg1 = (std::vector< Dimensions > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (Dimensions *) &std_vector_Sl_Dimensions_Sg__getitem(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDimensions_setitem(void * jarg1, int jarg2, void * jarg3) {
  std::vector< Dimensions > *arg1 = (std::vector< Dimensions > *) 0 ;
  int arg2 ;
  Dimensions *arg3 = 0 ;
  
  arg1 = (std::vector< Dimensions > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (Dimensions *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Dimensions const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_Dimensions_Sg__setitem(arg1,arg2,(Dimensions const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDimensions_AddRange(void * jarg1, void * jarg2) {
  std::vector< Dimensions > *arg1 = (std::vector< Dimensions > *) 0 ;
  std::vector< Dimensions > *arg2 = 0 ;
  
  arg1 = (std::vector< Dimensions > *)jarg1; 
  arg2 = (std::vector< Dimensions > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< Dimensions > const & type is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_Dimensions_Sg__AddRange(arg1,(std::vector< Dimensions > const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorDimensions_GetRange(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< Dimensions > *arg1 = (std::vector< Dimensions > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< Dimensions > *result = 0 ;
  
  arg1 = (std::vector< Dimensions > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< Dimensions > *)std_vector_Sl_Dimensions_Sg__GetRange(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDimensions_Insert(void * jarg1, int jarg2, void * jarg3) {
  std::vector< Dimensions > *arg1 = (std::vector< Dimensions > *) 0 ;
  int arg2 ;
  Dimensions *arg3 = 0 ;
  
  arg1 = (std::vector< Dimensions > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (Dimensions *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Dimensions const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_Dimensions_Sg__Insert(arg1,arg2,(Dimensions const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDimensions_InsertRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< Dimensions > *arg1 = (std::vector< Dimensions > *) 0 ;
  int arg2 ;
  std::vector< Dimensions > *arg3 = 0 ;
  
  arg1 = (std::vector< Dimensions > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< Dimensions > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< Dimensions > const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_Dimensions_Sg__InsertRange(arg1,arg2,(std::vector< Dimensions > const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDimensions_RemoveAt(void * jarg1, int jarg2) {
  std::vector< Dimensions > *arg1 = (std::vector< Dimensions > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< Dimensions > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_Dimensions_Sg__RemoveAt(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDimensions_RemoveRange(void * jarg1, int jarg2, int jarg3) {
  std::vector< Dimensions > *arg1 = (std::vector< Dimensions > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< Dimensions > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_Dimensions_Sg__RemoveRange(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorDimensions_Repeat(void * jarg1, int jarg2) {
  void * jresult ;
  Dimensions *arg1 = 0 ;
  int arg2 ;
  std::vector< Dimensions > *result = 0 ;
  
  arg1 = (Dimensions *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Dimensions const & type is null", 0);
    return 0;
  } 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< Dimensions > *)std_vector_Sl_Dimensions_Sg__Repeat((Dimensions const &)*arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDimensions_Reverse__SWIG_0(void * jarg1) {
  std::vector< Dimensions > *arg1 = (std::vector< Dimensions > *) 0 ;
  
  arg1 = (std::vector< Dimensions > *)jarg1; 
  {
    try {
      std_vector_Sl_Dimensions_Sg__Reverse__SWIG_0(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDimensions_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::vector< Dimensions > *arg1 = (std::vector< Dimensions > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< Dimensions > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_Dimensions_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDimensions_SetRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< Dimensions > *arg1 = (std::vector< Dimensions > *) 0 ;
  int arg2 ;
  std::vector< Dimensions > *arg3 = 0 ;
  
  arg1 = (std::vector< Dimensions > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< Dimensions > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< Dimensions > const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_Dimensions_Sg__SetRange(arg1,arg2,(std::vector< Dimensions > const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_vectorDimensions(void * jarg1) {
  std::vector< Dimensions > *arg1 = (std::vector< Dimensions > *) 0 ;
  
  arg1 = (std::vector< Dimensions > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Dimensions_x1_set(void * jarg1, double jarg2) {
  Dimensions *arg1 = (Dimensions *) 0 ;
  double arg2 ;
  
  arg1 = (Dimensions *)jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->x1 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Dimensions_x1_get(void * jarg1) {
  double jresult ;
  Dimensions *arg1 = (Dimensions *) 0 ;
  double result;
  
  arg1 = (Dimensions *)jarg1; 
  result = (double) ((arg1)->x1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Dimensions_y1_set(void * jarg1, double jarg2) {
  Dimensions *arg1 = (Dimensions *) 0 ;
  double arg2 ;
  
  arg1 = (Dimensions *)jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->y1 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Dimensions_y1_get(void * jarg1) {
  double jresult ;
  Dimensions *arg1 = (Dimensions *) 0 ;
  double result;
  
  arg1 = (Dimensions *)jarg1; 
  result = (double) ((arg1)->y1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Dimensions_x2_set(void * jarg1, double jarg2) {
  Dimensions *arg1 = (Dimensions *) 0 ;
  double arg2 ;
  
  arg1 = (Dimensions *)jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->x2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Dimensions_x2_get(void * jarg1) {
  double jresult ;
  Dimensions *arg1 = (Dimensions *) 0 ;
  double result;
  
  arg1 = (Dimensions *)jarg1; 
  result = (double) ((arg1)->x2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Dimensions_y2_set(void * jarg1, double jarg2) {
  Dimensions *arg1 = (Dimensions *) 0 ;
  double arg2 ;
  
  arg1 = (Dimensions *)jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->y2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Dimensions_y2_get(void * jarg1) {
  double jresult ;
  Dimensions *arg1 = (Dimensions *) 0 ;
  double result;
  
  arg1 = (Dimensions *)jarg1; 
  result = (double) ((arg1)->y2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Dimensions_size_set(void * jarg1, double jarg2) {
  Dimensions *arg1 = (Dimensions *) 0 ;
  double arg2 ;
  
  arg1 = (Dimensions *)jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->size = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Dimensions_size_get(void * jarg1) {
  double jresult ;
  Dimensions *arg1 = (Dimensions *) 0 ;
  double result;
  
  arg1 = (Dimensions *)jarg1; 
  result = (double) ((arg1)->size);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Dimensions() {
  void * jresult ;
  Dimensions *result = 0 ;
  
  {
    try {
      result = (Dimensions *)new Dimensions();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Dimensions(void * jarg1) {
  Dimensions *arg1 = (Dimensions *) 0 ;
  
  arg1 = (Dimensions *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_read_from__SWIG_5(void * jarg1, void * jarg2) {
  void * jresult ;
  std::istream *arg1 = 0 ;
  Dimensions *arg2 = 0 ;
  std::istream *result = 0 ;
  
  arg1 = (std::istream *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::istream & type is null", 0);
    return 0;
  } 
  arg2 = (Dimensions *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Dimensions & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::istream *) &operator >>(*arg1,*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_write_to__SWIG_6(void * jarg1, void * jarg2) {
  void * jresult ;
  std::ostream *arg1 = 0 ;
  Dimensions *arg2 = 0 ;
  std::ostream *result = 0 ;
  
  arg1 = (std::ostream *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::ostream & type is null", 0);
    return 0;
  } 
  arg2 = (Dimensions *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Dimensions & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::ostream *) &operator <<(*arg1,*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_BlobDim__SWIG_0(unsigned int jarg1) {
  void * jresult ;
  unsigned int arg1 ;
  BlobDim *result = 0 ;
  
  arg1 = (unsigned int)jarg1; 
  {
    try {
      result = (BlobDim *)new BlobDim(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_BlobDim__SWIG_1() {
  void * jresult ;
  BlobDim *result = 0 ;
  
  {
    try {
      result = (BlobDim *)new BlobDim();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_BlobDim(void * jarg1) {
  BlobDim *arg1 = (BlobDim *) 0 ;
  
  arg1 = (BlobDim *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BlobDim_clone(void * jarg1) {
  void * jresult ;
  BlobDim *arg1 = (BlobDim *) 0 ;
  BlobDim *result = 0 ;
  
  arg1 = (BlobDim *)jarg1; 
  {
    try {
      result = (BlobDim *)((BlobDim const *)arg1)->clone();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BlobDim_load(void * jarg1, void * jarg2) {
  BlobDim *arg1 = (BlobDim *) 0 ;
  InputState *arg2 = 0 ;
  
  arg1 = (BlobDim *)jarg1; 
  arg2 = (InputState *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "InputState & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->load(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_BlobDim_next(void * jarg1) {
  int jresult ;
  BlobDim *arg1 = (BlobDim *) 0 ;
  int result;
  
  arg1 = (BlobDim *)jarg1; 
  {
    try {
      result = (int)(arg1)->next();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_BlobDim_name(void * jarg1) {
  char * jresult ;
  BlobDim *arg1 = (BlobDim *) 0 ;
  char *result = 0 ;
  
  arg1 = (BlobDim *)jarg1; 
  {
    try {
      result = (char *)((BlobDim const *)arg1)->name();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BlobDim_dynamic_cast(void * jarg1) {
  void * jresult ;
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  BlobDim *result = 0 ;
  
  arg1 = (FeatureBase *)jarg1; 
  {
    try {
      result = (BlobDim *)BlobDim_dynamic_cast(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_BlobID__SWIG_0(unsigned int jarg1) {
  void * jresult ;
  unsigned int arg1 ;
  BlobID *result = 0 ;
  
  arg1 = (unsigned int)jarg1; 
  {
    try {
      result = (BlobID *)new BlobID(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_BlobID__SWIG_1() {
  void * jresult ;
  BlobID *result = 0 ;
  
  {
    try {
      result = (BlobID *)new BlobID();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_BlobID(void * jarg1) {
  BlobID *arg1 = (BlobID *) 0 ;
  
  arg1 = (BlobID *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BlobID_clone(void * jarg1) {
  void * jresult ;
  BlobID *arg1 = (BlobID *) 0 ;
  BlobID *result = 0 ;
  
  arg1 = (BlobID *)jarg1; 
  {
    try {
      result = (BlobID *)((BlobID const *)arg1)->clone();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BlobID_load(void * jarg1, void * jarg2) {
  BlobID *arg1 = (BlobID *) 0 ;
  InputState *arg2 = 0 ;
  
  arg1 = (BlobID *)jarg1; 
  arg2 = (InputState *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "InputState & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->load(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_BlobID_next(void * jarg1) {
  int jresult ;
  BlobID *arg1 = (BlobID *) 0 ;
  int result;
  
  arg1 = (BlobID *)jarg1; 
  {
    try {
      result = (int)(arg1)->next();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_BlobID_name(void * jarg1) {
  char * jresult ;
  BlobID *arg1 = (BlobID *) 0 ;
  char *result = 0 ;
  
  arg1 = (BlobID *)jarg1; 
  {
    try {
      result = (char *)((BlobID const *)arg1)->name();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BlobID_dynamic_cast(void * jarg1) {
  void * jresult ;
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  BlobID *result = 0 ;
  
  arg1 = (FeatureBase *)jarg1; 
  {
    try {
      result = (BlobID *)BlobID_dynamic_cast(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_FeatureVector(void * jarg1) {
  Feature< Vector > *arg1 = (Feature< Vector > *) 0 ;
  
  arg1 = (Feature< Vector > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FeatureVector_result(void * jarg1) {
  void * jresult ;
  Feature< Vector > *arg1 = (Feature< Vector > *) 0 ;
  _Vector< double > result;
  
  arg1 = (Feature< Vector > *)jarg1; 
  {
    try {
      result = (arg1)->result();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new _Vector< double >((const _Vector< double > &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FeatureVector_bounds(void * jarg1, void * jarg2) {
  Feature< Vector > *arg1 = (Feature< Vector > *) 0 ;
  std::vector< _Vector< double > > *arg2 = 0 ;
  
  arg1 = (Feature< Vector > *)jarg1; 
  arg2 = (std::vector< _Vector< double > > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< _Vector< double > > & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->bounds(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_FeatureVector_next(void * jarg1) {
  int jresult ;
  Feature< Vector > *arg1 = (Feature< Vector > *) 0 ;
  int result;
  
  arg1 = (Feature< Vector > *)jarg1; 
  {
    try {
      result = (int)(arg1)->next();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FeatureVector_load(void * jarg1, void * jarg2) {
  Feature< Vector > *arg1 = (Feature< Vector > *) 0 ;
  InputState *arg2 = 0 ;
  
  arg1 = (Feature< Vector > *)jarg1; 
  arg2 = (InputState *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "InputState & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->load(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_FeatureVector_name(void * jarg1) {
  char * jresult ;
  Feature< Vector > *arg1 = (Feature< Vector > *) 0 ;
  char *result = 0 ;
  
  arg1 = (Feature< Vector > *)jarg1; 
  {
    try {
      result = (char *)((Feature< Vector > const *)arg1)->name();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FeatureVector_serialize(void * jarg1, void * jarg2) {
  Feature< Vector > *arg1 = (Feature< Vector > *) 0 ;
  std::ostream *arg2 = 0 ;
  
  arg1 = (Feature< Vector > *)jarg1; 
  arg2 = (std::ostream *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::ostream & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->serialize(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_FeatureVector_unserialize(void * jarg1, void * jarg2) {
  Feature< Vector > *arg1 = (Feature< Vector > *) 0 ;
  std::istream *arg2 = 0 ;
  
  arg1 = (Feature< Vector > *)jarg1; 
  arg2 = (std::istream *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::istream & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->unserialize(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FeatureVector_dynamic_cast(void * jarg1) {
  void * jresult ;
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  Feature< Vector > *result = 0 ;
  
  arg1 = (FeatureBase *)jarg1; 
  {
    try {
      result = (Feature< Vector > *)Feature_Sl_Vector_Sg__dynamic_cast(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_BlobPos__SWIG_0(unsigned int jarg1) {
  void * jresult ;
  unsigned int arg1 ;
  BlobPos *result = 0 ;
  
  arg1 = (unsigned int)jarg1; 
  {
    try {
      result = (BlobPos *)new BlobPos(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_BlobPos__SWIG_1() {
  void * jresult ;
  BlobPos *result = 0 ;
  
  {
    try {
      result = (BlobPos *)new BlobPos();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_BlobPos(void * jarg1) {
  BlobPos *arg1 = (BlobPos *) 0 ;
  
  arg1 = (BlobPos *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BlobPos_clone(void * jarg1) {
  void * jresult ;
  BlobPos *arg1 = (BlobPos *) 0 ;
  BlobPos *result = 0 ;
  
  arg1 = (BlobPos *)jarg1; 
  {
    try {
      result = (BlobPos *)((BlobPos const *)arg1)->clone();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BlobPos_load(void * jarg1, void * jarg2) {
  BlobPos *arg1 = (BlobPos *) 0 ;
  InputState *arg2 = 0 ;
  
  arg1 = (BlobPos *)jarg1; 
  arg2 = (InputState *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "InputState & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->load(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_BlobPos_next(void * jarg1) {
  int jresult ;
  BlobPos *arg1 = (BlobPos *) 0 ;
  int result;
  
  arg1 = (BlobPos *)jarg1; 
  {
    try {
      result = (int)(arg1)->next();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_BlobPos_name(void * jarg1) {
  char * jresult ;
  BlobPos *arg1 = (BlobPos *) 0 ;
  char *result = 0 ;
  
  arg1 = (BlobPos *)jarg1; 
  {
    try {
      result = (char *)((BlobPos const *)arg1)->name();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BlobPos_ids_set(void * jarg1, void * jarg2) {
  BlobPos *arg1 = (BlobPos *) 0 ;
  std::vector< Vector > *arg2 = (std::vector< Vector > *) 0 ;
  
  arg1 = (BlobPos *)jarg1; 
  arg2 = (std::vector< Vector > *)jarg2; 
  if (arg1) (arg1)->ids = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BlobPos_ids_get(void * jarg1) {
  void * jresult ;
  BlobPos *arg1 = (BlobPos *) 0 ;
  std::vector< Vector > *result = 0 ;
  
  arg1 = (BlobPos *)jarg1; 
  result = (std::vector< Vector > *)& ((arg1)->ids);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BlobPos_cur_set(void * jarg1, void * jarg2) {
  BlobPos *arg1 = (BlobPos *) 0 ;
  std::vector< Vector >::iterator *arg2 = (std::vector< Vector >::iterator *) 0 ;
  
  arg1 = (BlobPos *)jarg1; 
  arg2 = (std::vector< Vector >::iterator *)jarg2; 
  if (arg1) (arg1)->cur = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BlobPos_cur_get(void * jarg1) {
  void * jresult ;
  BlobPos *arg1 = (BlobPos *) 0 ;
  std::vector< Vector >::iterator *result = 0 ;
  
  arg1 = (BlobPos *)jarg1; 
  result = (std::vector< Vector >::iterator *)& ((arg1)->cur);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BlobPos_dynamic_cast(void * jarg1) {
  void * jresult ;
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  BlobPos *result = 0 ;
  
  arg1 = (FeatureBase *)jarg1; 
  {
    try {
      result = (BlobPos *)BlobPos_dynamic_cast(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_BlobGroup__SWIG_0(unsigned int jarg1) {
  void * jresult ;
  unsigned int arg1 ;
  BlobGroup *result = 0 ;
  
  arg1 = (unsigned int)jarg1; 
  {
    try {
      result = (BlobGroup *)new BlobGroup(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_BlobGroup__SWIG_1() {
  void * jresult ;
  BlobGroup *result = 0 ;
  
  {
    try {
      result = (BlobGroup *)new BlobGroup();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_BlobGroup(void * jarg1) {
  BlobGroup *arg1 = (BlobGroup *) 0 ;
  
  arg1 = (BlobGroup *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BlobGroup_clone(void * jarg1) {
  void * jresult ;
  BlobGroup *arg1 = (BlobGroup *) 0 ;
  BlobGroup *result = 0 ;
  
  arg1 = (BlobGroup *)jarg1; 
  {
    try {
      result = (BlobGroup *)((BlobGroup const *)arg1)->clone();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_BlobGroup_load(void * jarg1, void * jarg2) {
  BlobGroup *arg1 = (BlobGroup *) 0 ;
  InputState *arg2 = 0 ;
  
  arg1 = (BlobGroup *)jarg1; 
  arg2 = (InputState *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "InputState & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->load(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_BlobGroup_next(void * jarg1) {
  int jresult ;
  BlobGroup *arg1 = (BlobGroup *) 0 ;
  int result;
  
  arg1 = (BlobGroup *)jarg1; 
  {
    try {
      result = (int)(arg1)->next();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_BlobGroup_name(void * jarg1) {
  char * jresult ;
  BlobGroup *arg1 = (BlobGroup *) 0 ;
  char *result = 0 ;
  
  arg1 = (BlobGroup *)jarg1; 
  {
    try {
      result = (char *)((BlobGroup const *)arg1)->name();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_BlobGroup_dynamic_cast(void * jarg1) {
  void * jresult ;
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  BlobGroup *result = 0 ;
  
  arg1 = (FeatureBase *)jarg1; 
  {
    try {
      result = (BlobGroup *)BlobGroup_dynamic_cast(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_FeatureDouble(void * jarg1) {
  Feature< double > *arg1 = (Feature< double > *) 0 ;
  
  arg1 = (Feature< double > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT double SWIGSTDCALL CSharp_FeatureDouble_result(void * jarg1) {
  double jresult ;
  Feature< double > *arg1 = (Feature< double > *) 0 ;
  double result;
  
  arg1 = (Feature< double > *)jarg1; 
  {
    try {
      result = (double)(arg1)->result();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FeatureDouble_bounds(void * jarg1, void * jarg2) {
  Feature< double > *arg1 = (Feature< double > *) 0 ;
  std::vector< double > *arg2 = 0 ;
  
  arg1 = (Feature< double > *)jarg1; 
  arg2 = (std::vector< double > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< double > & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->bounds(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_FeatureDouble_next(void * jarg1) {
  int jresult ;
  Feature< double > *arg1 = (Feature< double > *) 0 ;
  int result;
  
  arg1 = (Feature< double > *)jarg1; 
  {
    try {
      result = (int)(arg1)->next();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FeatureDouble_load(void * jarg1, void * jarg2) {
  Feature< double > *arg1 = (Feature< double > *) 0 ;
  InputState *arg2 = 0 ;
  
  arg1 = (Feature< double > *)jarg1; 
  arg2 = (InputState *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "InputState & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->load(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_FeatureDouble_name(void * jarg1) {
  char * jresult ;
  Feature< double > *arg1 = (Feature< double > *) 0 ;
  char *result = 0 ;
  
  arg1 = (Feature< double > *)jarg1; 
  {
    try {
      result = (char *)((Feature< double > const *)arg1)->name();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FeatureDouble_serialize(void * jarg1, void * jarg2) {
  Feature< double > *arg1 = (Feature< double > *) 0 ;
  std::ostream *arg2 = 0 ;
  
  arg1 = (Feature< double > *)jarg1; 
  arg2 = (std::ostream *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::ostream & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->serialize(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_FeatureDouble_unserialize(void * jarg1, void * jarg2) {
  Feature< double > *arg1 = (Feature< double > *) 0 ;
  std::istream *arg2 = 0 ;
  
  arg1 = (Feature< double > *)jarg1; 
  arg2 = (std::istream *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::istream & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->unserialize(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_FeatureDouble_dynamic_cast(void * jarg1) {
  void * jresult ;
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  Feature< double > *result = 0 ;
  
  arg1 = (FeatureBase *)jarg1; 
  {
    try {
      result = (Feature< double > *)Feature_Sl_double_Sg__dynamic_cast(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDouble_Clear(void * jarg1) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDouble_Add(void * jarg1, double jarg2) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  double *arg2 = 0 ;
  double temp2 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  temp2 = (double)jarg2; 
  arg2 = &temp2; 
  {
    try {
      (arg1)->push_back((double const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_vectorDouble_size(void * jarg1) {
  unsigned long jresult ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::size_type result;
  
  arg1 = (std::vector< double > *)jarg1; 
  {
    try {
      result = ((std::vector< double > const *)arg1)->size();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT unsigned long SWIGSTDCALL CSharp_vectorDouble_capacity(void * jarg1) {
  unsigned long jresult ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::size_type result;
  
  arg1 = (std::vector< double > *)jarg1; 
  {
    try {
      result = ((std::vector< double > const *)arg1)->capacity();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (unsigned long)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDouble_reserve(void * jarg1, unsigned long jarg2) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double >::size_type arg2 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (std::vector< double >::size_type)jarg2; 
  {
    try {
      (arg1)->reserve(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_vectorDouble__SWIG_0() {
  void * jresult ;
  std::vector< double > *result = 0 ;
  
  {
    try {
      result = (std::vector< double > *)new std::vector< double >();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_vectorDouble__SWIG_1(void * jarg1) {
  void * jresult ;
  std::vector< double > *arg1 = 0 ;
  std::vector< double > *result = 0 ;
  
  arg1 = (std::vector< double > *)jarg1;
  if (!arg1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< double > const & type is null", 0);
    return 0;
  } 
  {
    try {
      result = (std::vector< double > *)new std::vector< double >((std::vector< double > const &)*arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_vectorDouble__SWIG_2(int jarg1) {
  void * jresult ;
  int arg1 ;
  std::vector< double > *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      try {
        result = (std::vector< double > *)new_std_vector_Sl_double_Sg___SWIG_2(arg1);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_vectorDouble_getitemcopy(void * jarg1, int jarg2) {
  double jresult ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  double result;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (double)std_vector_Sl_double_Sg__getitemcopy(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT double SWIGSTDCALL CSharp_vectorDouble_getitem(void * jarg1, int jarg2) {
  double jresult ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  double *result = 0 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (double *) &std_vector_Sl_double_Sg__getitem(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = *result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDouble_setitem(void * jarg1, int jarg2, double jarg3) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  double *arg3 = 0 ;
  double temp3 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (int)jarg2; 
  temp3 = (double)jarg3; 
  arg3 = &temp3; 
  {
    try {
      try {
        std_vector_Sl_double_Sg__setitem(arg1,arg2,(double const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDouble_AddRange(void * jarg1, void * jarg2) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  std::vector< double > *arg2 = 0 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (std::vector< double > *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< double > const & type is null", 0);
    return ;
  } 
  {
    try {
      std_vector_Sl_double_Sg__AddRange(arg1,(std::vector< double > const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorDouble_GetRange(void * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  int arg3 ;
  std::vector< double > *result = 0 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        result = (std::vector< double > *)std_vector_Sl_double_Sg__GetRange(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDouble_Insert(void * jarg1, int jarg2, double jarg3) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  double *arg3 = 0 ;
  double temp3 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (int)jarg2; 
  temp3 = (double)jarg3; 
  arg3 = &temp3; 
  {
    try {
      try {
        std_vector_Sl_double_Sg__Insert(arg1,arg2,(double const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDouble_InsertRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  std::vector< double > *arg3 = 0 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< double > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< double > const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_double_Sg__InsertRange(arg1,arg2,(std::vector< double > const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDouble_RemoveAt(void * jarg1, int jarg2) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        std_vector_Sl_double_Sg__RemoveAt(arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDouble_RemoveRange(void * jarg1, int jarg2, int jarg3) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_double_Sg__RemoveRange(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_vectorDouble_Repeat(double jarg1, int jarg2) {
  void * jresult ;
  double *arg1 = 0 ;
  int arg2 ;
  double temp1 ;
  std::vector< double > *result = 0 ;
  
  temp1 = (double)jarg1; 
  arg1 = &temp1; 
  arg2 = (int)jarg2; 
  {
    try {
      try {
        result = (std::vector< double > *)std_vector_Sl_double_Sg__Repeat((double const &)*arg1,arg2);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return 0;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDouble_Reverse__SWIG_0(void * jarg1) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  {
    try {
      std_vector_Sl_double_Sg__Reverse__SWIG_0(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDouble_Reverse__SWIG_1(void * jarg1, int jarg2, int jarg3) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      try {
        std_vector_Sl_double_Sg__Reverse__SWIG_1(arg1,arg2,arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      catch(std::invalid_argument &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentException, (&_e)->what(), "");
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_vectorDouble_SetRange(void * jarg1, int jarg2, void * jarg3) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  int arg2 ;
  std::vector< double > *arg3 = 0 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (std::vector< double > *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "std::vector< double > const & type is null", 0);
    return ;
  } 
  {
    try {
      try {
        std_vector_Sl_double_Sg__SetRange(arg1,arg2,(std::vector< double > const &)*arg3);
      }
      catch(std::out_of_range &_e) {
        SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, 0, (&_e)->what());
        return ;
      }
      
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_vectorDouble_Contains(void * jarg1, double jarg2) {
  unsigned int jresult ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  double *arg2 = 0 ;
  double temp2 ;
  bool result;
  
  arg1 = (std::vector< double > *)jarg1; 
  temp2 = (double)jarg2; 
  arg2 = &temp2; 
  {
    try {
      result = (bool)std_vector_Sl_double_Sg__Contains(arg1,(double const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_vectorDouble_IndexOf(void * jarg1, double jarg2) {
  int jresult ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  double *arg2 = 0 ;
  double temp2 ;
  int result;
  
  arg1 = (std::vector< double > *)jarg1; 
  temp2 = (double)jarg2; 
  arg2 = &temp2; 
  {
    try {
      result = (int)std_vector_Sl_double_Sg__IndexOf(arg1,(double const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_vectorDouble_LastIndexOf(void * jarg1, double jarg2) {
  int jresult ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  double *arg2 = 0 ;
  double temp2 ;
  int result;
  
  arg1 = (std::vector< double > *)jarg1; 
  temp2 = (double)jarg2; 
  arg2 = &temp2; 
  {
    try {
      result = (int)std_vector_Sl_double_Sg__LastIndexOf(arg1,(double const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_vectorDouble_Remove(void * jarg1, double jarg2) {
  unsigned int jresult ;
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  double *arg2 = 0 ;
  double temp2 ;
  bool result;
  
  arg1 = (std::vector< double > *)jarg1; 
  temp2 = (double)jarg2; 
  arg2 = &temp2; 
  {
    try {
      result = (bool)std_vector_Sl_double_Sg__Remove(arg1,(double const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_vectorDouble(void * jarg1) {
  std::vector< double > *arg1 = (std::vector< double > *) 0 ;
  
  arg1 = (std::vector< double > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Motion__SWIG_0(unsigned int jarg1) {
  void * jresult ;
  unsigned int arg1 ;
  Motion *result = 0 ;
  
  arg1 = (unsigned int)jarg1; 
  {
    try {
      result = (Motion *)new Motion(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Motion__SWIG_1() {
  void * jresult ;
  Motion *result = 0 ;
  
  {
    try {
      result = (Motion *)new Motion();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Motion(void * jarg1) {
  Motion *arg1 = (Motion *) 0 ;
  
  arg1 = (Motion *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Motion_clone(void * jarg1) {
  void * jresult ;
  Motion *arg1 = (Motion *) 0 ;
  Motion *result = 0 ;
  
  arg1 = (Motion *)jarg1; 
  {
    try {
      result = (Motion *)((Motion const *)arg1)->clone();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Motion_load(void * jarg1, void * jarg2) {
  Motion *arg1 = (Motion *) 0 ;
  InputState *arg2 = 0 ;
  
  arg1 = (Motion *)jarg1; 
  arg2 = (InputState *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "InputState & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->load(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_Motion_name(void * jarg1) {
  char * jresult ;
  Motion *arg1 = (Motion *) 0 ;
  char *result = 0 ;
  
  arg1 = (Motion *)jarg1; 
  {
    try {
      result = (char *)((Motion const *)arg1)->name();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Motion_dynamic_cast(void * jarg1) {
  void * jresult ;
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  Motion *result = 0 ;
  
  arg1 = (FeatureBase *)jarg1; 
  {
    try {
      result = (Motion *)Motion_dynamic_cast(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Rotation__SWIG_0(unsigned int jarg1) {
  void * jresult ;
  unsigned int arg1 ;
  Rotation *result = 0 ;
  
  arg1 = (unsigned int)jarg1; 
  {
    try {
      result = (Rotation *)new Rotation(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Rotation__SWIG_1() {
  void * jresult ;
  Rotation *result = 0 ;
  
  {
    try {
      result = (Rotation *)new Rotation();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Rotation(void * jarg1) {
  Rotation *arg1 = (Rotation *) 0 ;
  
  arg1 = (Rotation *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Rotation_clone(void * jarg1) {
  void * jresult ;
  Rotation *arg1 = (Rotation *) 0 ;
  Rotation *result = 0 ;
  
  arg1 = (Rotation *)jarg1; 
  {
    try {
      result = (Rotation *)((Rotation const *)arg1)->clone();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Rotation_load(void * jarg1, void * jarg2) {
  Rotation *arg1 = (Rotation *) 0 ;
  InputState *arg2 = 0 ;
  
  arg1 = (Rotation *)jarg1; 
  arg2 = (InputState *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "InputState & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->load(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_Rotation_name(void * jarg1) {
  char * jresult ;
  Rotation *arg1 = (Rotation *) 0 ;
  char *result = 0 ;
  
  arg1 = (Rotation *)jarg1; 
  {
    try {
      result = (char *)((Rotation const *)arg1)->name();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Rotation_dynamic_cast(void * jarg1) {
  void * jresult ;
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  Rotation *result = 0 ;
  
  arg1 = (FeatureBase *)jarg1; 
  {
    try {
      result = (Rotation *)Rotation_dynamic_cast(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MultiBlobRotation__SWIG_0(unsigned int jarg1) {
  void * jresult ;
  unsigned int arg1 ;
  MultiBlobRotation *result = 0 ;
  
  arg1 = (unsigned int)jarg1; 
  {
    try {
      result = (MultiBlobRotation *)new MultiBlobRotation(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MultiBlobRotation__SWIG_1() {
  void * jresult ;
  MultiBlobRotation *result = 0 ;
  
  {
    try {
      result = (MultiBlobRotation *)new MultiBlobRotation();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MultiBlobRotation(void * jarg1) {
  MultiBlobRotation *arg1 = (MultiBlobRotation *) 0 ;
  
  arg1 = (MultiBlobRotation *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MultiBlobRotation_clone(void * jarg1) {
  void * jresult ;
  MultiBlobRotation *arg1 = (MultiBlobRotation *) 0 ;
  MultiBlobRotation *result = 0 ;
  
  arg1 = (MultiBlobRotation *)jarg1; 
  {
    try {
      result = (MultiBlobRotation *)((MultiBlobRotation const *)arg1)->clone();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MultiBlobRotation_load(void * jarg1, void * jarg2) {
  MultiBlobRotation *arg1 = (MultiBlobRotation *) 0 ;
  InputState *arg2 = 0 ;
  
  arg1 = (MultiBlobRotation *)jarg1; 
  arg2 = (InputState *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "InputState & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->load(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_MultiBlobRotation_name(void * jarg1) {
  char * jresult ;
  MultiBlobRotation *arg1 = (MultiBlobRotation *) 0 ;
  char *result = 0 ;
  
  arg1 = (MultiBlobRotation *)jarg1; 
  {
    try {
      result = (char *)((MultiBlobRotation const *)arg1)->name();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MultiBlobRotation_dynamic_cast(void * jarg1) {
  void * jresult ;
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  MultiBlobRotation *result = 0 ;
  
  arg1 = (FeatureBase *)jarg1; 
  {
    try {
      result = (MultiBlobRotation *)MultiBlobRotation_dynamic_cast(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Scale__SWIG_0(unsigned int jarg1) {
  void * jresult ;
  unsigned int arg1 ;
  Scale *result = 0 ;
  
  arg1 = (unsigned int)jarg1; 
  {
    try {
      result = (Scale *)new Scale(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Scale__SWIG_1() {
  void * jresult ;
  Scale *result = 0 ;
  
  {
    try {
      result = (Scale *)new Scale();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Scale(void * jarg1) {
  Scale *arg1 = (Scale *) 0 ;
  
  arg1 = (Scale *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Scale_clone(void * jarg1) {
  void * jresult ;
  Scale *arg1 = (Scale *) 0 ;
  Scale *result = 0 ;
  
  arg1 = (Scale *)jarg1; 
  {
    try {
      result = (Scale *)((Scale const *)arg1)->clone();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Scale_load(void * jarg1, void * jarg2) {
  Scale *arg1 = (Scale *) 0 ;
  InputState *arg2 = 0 ;
  
  arg1 = (Scale *)jarg1; 
  arg2 = (InputState *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "InputState & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->load(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_Scale_name(void * jarg1) {
  char * jresult ;
  Scale *arg1 = (Scale *) 0 ;
  char *result = 0 ;
  
  arg1 = (Scale *)jarg1; 
  {
    try {
      result = (char *)((Scale const *)arg1)->name();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Scale_dynamic_cast(void * jarg1) {
  void * jresult ;
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  Scale *result = 0 ;
  
  arg1 = (FeatureBase *)jarg1; 
  {
    try {
      result = (Scale *)Scale_dynamic_cast(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MultiBlobScale__SWIG_0(unsigned int jarg1) {
  void * jresult ;
  unsigned int arg1 ;
  MultiBlobScale *result = 0 ;
  
  arg1 = (unsigned int)jarg1; 
  {
    try {
      result = (MultiBlobScale *)new MultiBlobScale(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MultiBlobScale__SWIG_1() {
  void * jresult ;
  MultiBlobScale *result = 0 ;
  
  {
    try {
      result = (MultiBlobScale *)new MultiBlobScale();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MultiBlobScale(void * jarg1) {
  MultiBlobScale *arg1 = (MultiBlobScale *) 0 ;
  
  arg1 = (MultiBlobScale *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MultiBlobScale_clone(void * jarg1) {
  void * jresult ;
  MultiBlobScale *arg1 = (MultiBlobScale *) 0 ;
  MultiBlobScale *result = 0 ;
  
  arg1 = (MultiBlobScale *)jarg1; 
  {
    try {
      result = (MultiBlobScale *)((MultiBlobScale const *)arg1)->clone();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MultiBlobScale_load(void * jarg1, void * jarg2) {
  MultiBlobScale *arg1 = (MultiBlobScale *) 0 ;
  InputState *arg2 = 0 ;
  
  arg1 = (MultiBlobScale *)jarg1; 
  arg2 = (InputState *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "InputState & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->load(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_MultiBlobScale_name(void * jarg1) {
  char * jresult ;
  MultiBlobScale *arg1 = (MultiBlobScale *) 0 ;
  char *result = 0 ;
  
  arg1 = (MultiBlobScale *)jarg1; 
  {
    try {
      result = (char *)((MultiBlobScale const *)arg1)->name();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MultiBlobScale_dynamic_cast(void * jarg1) {
  void * jresult ;
  FeatureBase *arg1 = (FeatureBase *) 0 ;
  MultiBlobScale *result = 0 ;
  
  arg1 = (FeatureBase *)jarg1; 
  {
    try {
      result = (MultiBlobScale *)MultiBlobScale_dynamic_cast(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GLEXT_VERSION_get() {
  int jresult ;
  int result;
  
  result = (int)(72);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_BYTE_3_3_2_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8032);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_SHORT_4_4_4_4_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8033);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_SHORT_5_5_5_1_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8034);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_8_8_8_8_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8035);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_10_10_10_2_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8036);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BINDING_3D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x806A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PACK_SKIP_IMAGES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x806B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PACK_IMAGE_HEIGHT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x806C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNPACK_SKIP_IMAGES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x806D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNPACK_IMAGE_HEIGHT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x806E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_3D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x806F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_TEXTURE_3D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8070);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_DEPTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8071);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_WRAP_R_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8072);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_3D_TEXTURE_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8073);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_BYTE_2_3_3_REV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8362);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_SHORT_5_6_5_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8363);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_SHORT_5_6_5_REV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8364);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_SHORT_4_4_4_4_REV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8365);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_SHORT_1_5_5_5_REV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8366);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_8_8_8_8_REV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8367);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_2_10_10_10_REV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8368);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BGR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80E0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BGRA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80E1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_ELEMENTS_VERTICES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80E8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_ELEMENTS_INDICES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80E9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLAMP_TO_EDGE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x812F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_MIN_LOD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x813A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_MAX_LOD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x813B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BASE_LEVEL_get() {
  int jresult ;
  int result;
  
  result = (int)(0x813C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_MAX_LEVEL_get() {
  int jresult ;
  int result;
  
  result = (int)(0x813D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SMOOTH_POINT_SIZE_RANGE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0B12);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SMOOTH_POINT_SIZE_GRANULARITY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0B13);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SMOOTH_LINE_WIDTH_RANGE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0B22);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SMOOTH_LINE_WIDTH_GRANULARITY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0B23);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALIASED_LINE_WIDTH_RANGE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x846E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RESCALE_NORMAL_get() {
  int jresult ;
  int result;
  
  result = (int)(0x803A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LIGHT_MODEL_COLOR_CONTROL_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81F8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SINGLE_COLOR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81F9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SEPARATE_SPECULAR_COLOR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81FA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALIASED_POINT_SIZE_RANGE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x846D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONSTANT_COLOR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8001);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ONE_MINUS_CONSTANT_COLOR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8002);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONSTANT_ALPHA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8003);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ONE_MINUS_CONSTANT_ALPHA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8004);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BLEND_COLOR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8005);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FUNC_ADD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8006);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MIN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8007);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8008);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BLEND_EQUATION_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8009);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FUNC_SUBTRACT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x800A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FUNC_REVERSE_SUBTRACT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x800B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONVOLUTION_1D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8010);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONVOLUTION_2D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8011);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SEPARABLE_2D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8012);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONVOLUTION_BORDER_MODE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8013);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONVOLUTION_FILTER_SCALE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8014);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONVOLUTION_FILTER_BIAS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8015);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REDUCE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8016);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONVOLUTION_FORMAT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8017);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONVOLUTION_WIDTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8018);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONVOLUTION_HEIGHT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8019);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_CONVOLUTION_WIDTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x801A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_CONVOLUTION_HEIGHT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x801B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_CONVOLUTION_RED_SCALE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x801C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_CONVOLUTION_GREEN_SCALE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x801D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_CONVOLUTION_BLUE_SCALE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x801E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_CONVOLUTION_ALPHA_SCALE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x801F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_CONVOLUTION_RED_BIAS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8020);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_CONVOLUTION_GREEN_BIAS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8021);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_CONVOLUTION_BLUE_BIAS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8022);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_CONVOLUTION_ALPHA_BIAS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8023);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HISTOGRAM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8024);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_HISTOGRAM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8025);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HISTOGRAM_WIDTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8026);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HISTOGRAM_FORMAT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8027);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HISTOGRAM_RED_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8028);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HISTOGRAM_GREEN_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8029);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HISTOGRAM_BLUE_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x802A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HISTOGRAM_ALPHA_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x802B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HISTOGRAM_LUMINANCE_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x802C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HISTOGRAM_SINK_get() {
  int jresult ;
  int result;
  
  result = (int)(0x802D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MINMAX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x802E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MINMAX_FORMAT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x802F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MINMAX_SINK_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8030);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TABLE_TOO_LARGE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8031);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_MATRIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80B1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_MATRIX_STACK_DEPTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80B2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_COLOR_MATRIX_STACK_DEPTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80B3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_COLOR_MATRIX_RED_SCALE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80B4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_COLOR_MATRIX_GREEN_SCALE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80B5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_COLOR_MATRIX_BLUE_SCALE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80B6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_COLOR_MATRIX_ALPHA_SCALE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80B7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_COLOR_MATRIX_RED_BIAS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80B8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_COLOR_MATRIX_GREEN_BIAS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80B9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_COLOR_MATRIX_BLUE_BIAS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80BA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_COLOR_MATRIX_ALPHA_BIAS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80BB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_TABLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80D0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_CONVOLUTION_COLOR_TABLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80D1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_COLOR_MATRIX_COLOR_TABLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80D2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_COLOR_TABLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80D3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80D4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80D5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_TABLE_SCALE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80D6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_TABLE_BIAS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80D7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_TABLE_FORMAT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80D8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_TABLE_WIDTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80D9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_TABLE_RED_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80DA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_TABLE_GREEN_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80DB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_TABLE_BLUE_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80DC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_TABLE_ALPHA_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80DD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_TABLE_LUMINANCE_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80DE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_TABLE_INTENSITY_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80DF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONSTANT_BORDER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8151);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REPLICATE_BORDER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8153);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONVOLUTION_BORDER_COLOR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8154);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE0_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84C0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE1_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84C1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE2_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84C2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE3_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84C3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE4_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84C4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE5_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84C5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE6_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84C6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE7_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84C7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE8_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84C8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE9_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84C9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE10_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84CA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE11_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84CB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE12_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84CC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE13_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84CD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE14_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84CE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE15_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84CF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE16_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84D0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE17_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84D1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE18_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84D2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE19_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84D3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE20_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84D4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE21_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84D5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE22_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84D6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE23_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84D7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE24_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84D8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE25_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84D9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE26_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84DA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE27_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84DB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE28_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84DC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE29_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84DD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE30_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84DE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE31_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84DF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ACTIVE_TEXTURE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84E0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MULTISAMPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x809D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_ALPHA_TO_COVERAGE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x809E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_ALPHA_TO_ONE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x809F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_COVERAGE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_BUFFERS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_COVERAGE_VALUE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80AA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_COVERAGE_INVERT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80AB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8513);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BINDING_CUBE_MAP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8514);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_POSITIVE_X_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8515);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_NEGATIVE_X_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8516);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_POSITIVE_Y_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8517);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8518);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_POSITIVE_Z_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8519);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_get() {
  int jresult ;
  int result;
  
  result = (int)(0x851A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_TEXTURE_CUBE_MAP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x851B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_CUBE_MAP_TEXTURE_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x851C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_RGB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84ED);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_RGBA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84EE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COMPRESSION_HINT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84EF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COMPRESSED_IMAGE_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86A0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COMPRESSED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86A1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NUM_COMPRESSED_TEXTURE_FORMATS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86A2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_TEXTURE_FORMATS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86A3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLAMP_TO_BORDER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x812D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLIENT_ACTIVE_TEXTURE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84E1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TEXTURE_UNITS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84E2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSPOSE_MODELVIEW_MATRIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84E3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSPOSE_PROJECTION_MATRIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84E4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSPOSE_TEXTURE_MATRIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84E5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSPOSE_COLOR_MATRIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84E6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MULTISAMPLE_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x20000000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NORMAL_MAP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8511);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REFLECTION_MAP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8512);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_ALPHA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84E9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_LUMINANCE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84EA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_LUMINANCE_ALPHA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84EB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_INTENSITY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84EC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8570);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINE_RGB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8571);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINE_ALPHA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8572);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SOURCE0_RGB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8580);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SOURCE1_RGB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8581);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SOURCE2_RGB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8582);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SOURCE0_ALPHA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8588);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SOURCE1_ALPHA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8589);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SOURCE2_ALPHA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x858A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OPERAND0_RGB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8590);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OPERAND1_RGB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8591);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OPERAND2_RGB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8592);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OPERAND0_ALPHA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8598);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OPERAND1_ALPHA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8599);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OPERAND2_ALPHA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x859A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB_SCALE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8573);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ADD_SIGNED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8574);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTERPOLATE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8575);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SUBTRACT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84E7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONSTANT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8576);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PRIMARY_COLOR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8577);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PREVIOUS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8578);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOT3_RGB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86AE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOT3_RGBA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86AF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BLEND_DST_RGB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80C8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BLEND_SRC_RGB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80C9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BLEND_DST_ALPHA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80CA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BLEND_SRC_ALPHA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80CB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POINT_FADE_THRESHOLD_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8128);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_COMPONENT16_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81A5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_COMPONENT24_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81A6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_COMPONENT32_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81A7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MIRRORED_REPEAT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8370);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TEXTURE_LOD_BIAS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84FD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_LOD_BIAS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8501);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INCR_WRAP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8507);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DECR_WRAP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8508);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_DEPTH_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x884A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COMPARE_MODE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x884C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COMPARE_FUNC_get() {
  int jresult ;
  int result;
  
  result = (int)(0x884D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POINT_SIZE_MIN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8126);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POINT_SIZE_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8127);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POINT_DISTANCE_ATTENUATION_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8129);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GENERATE_MIPMAP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8191);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GENERATE_MIPMAP_HINT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8192);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORDINATE_SOURCE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8450);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORDINATE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8451);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_DEPTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8452);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_FOG_COORDINATE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8453);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORDINATE_ARRAY_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8454);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORDINATE_ARRAY_STRIDE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8455);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORDINATE_ARRAY_POINTER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8456);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORDINATE_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8457);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_SUM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8458);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_SECONDARY_COLOR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8459);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SECONDARY_COLOR_ARRAY_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x845A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SECONDARY_COLOR_ARRAY_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x845B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SECONDARY_COLOR_ARRAY_STRIDE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x845C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SECONDARY_COLOR_ARRAY_POINTER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x845D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SECONDARY_COLOR_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x845E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_FILTER_CONTROL_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8500);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_TEXTURE_MODE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x884B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPARE_R_TO_TEXTURE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x884E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUFFER_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8764);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUFFER_USAGE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8765);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUERY_COUNTER_BITS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8864);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_QUERY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8865);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUERY_RESULT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8866);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUERY_RESULT_AVAILABLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8867);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARRAY_BUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8892);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ELEMENT_ARRAY_BUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8893);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARRAY_BUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8894);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ELEMENT_ARRAY_BUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8895);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x889F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_READ_ONLY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88B8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_WRITE_ONLY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88B9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_READ_WRITE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88BA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUFFER_ACCESS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88BB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUFFER_MAPPED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88BC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUFFER_MAP_POINTER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88BD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STREAM_DRAW_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88E0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STREAM_READ_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88E1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STREAM_COPY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88E2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STATIC_DRAW_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88E4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STATIC_READ_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88E5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STATIC_COPY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88E6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DYNAMIC_DRAW_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88E8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DYNAMIC_READ_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88E9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DYNAMIC_COPY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88EA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLES_PASSED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8914);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_BUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8896);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NORMAL_ARRAY_BUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8897);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ARRAY_BUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8898);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INDEX_ARRAY_BUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8899);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x889A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x889B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x889C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x889D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_WEIGHT_ARRAY_BUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x889E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORD_SRC_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8450);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8451);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_FOG_COORD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8453);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORD_ARRAY_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8454);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORD_ARRAY_STRIDE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8455);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORD_ARRAY_POINTER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8456);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORD_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8457);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORD_ARRAY_BUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x889D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SRC0_RGB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8580);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SRC1_RGB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8581);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SRC2_RGB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8582);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SRC0_ALPHA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8588);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SRC1_ALPHA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8589);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SRC2_ALPHA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x858A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BLEND_EQUATION_RGB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8009);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_ENABLED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8622);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8623);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_STRIDE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8624);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8625);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_VERTEX_ATTRIB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8626);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_PROGRAM_POINT_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8642);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_POINTER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8645);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_BACK_FUNC_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8800);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_BACK_FAIL_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8801);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_BACK_PASS_DEPTH_FAIL_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8802);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_BACK_PASS_DEPTH_PASS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8803);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_DRAW_BUFFERS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8824);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER0_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8825);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER1_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8826);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER2_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8827);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER3_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8828);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER4_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8829);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER5_get() {
  int jresult ;
  int result;
  
  result = (int)(0x882A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER6_get() {
  int jresult ;
  int result;
  
  result = (int)(0x882B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER7_get() {
  int jresult ;
  int result;
  
  result = (int)(0x882C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER8_get() {
  int jresult ;
  int result;
  
  result = (int)(0x882D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER9_get() {
  int jresult ;
  int result;
  
  result = (int)(0x882E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER10_get() {
  int jresult ;
  int result;
  
  result = (int)(0x882F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER11_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8830);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER12_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8831);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER13_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8832);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER14_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8833);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER15_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8834);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BLEND_EQUATION_ALPHA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x883D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_ATTRIBS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8869);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x886A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TEXTURE_IMAGE_UNITS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8872);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_SHADER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B30);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_SHADER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B31);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B49);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_UNIFORM_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B4A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VARYING_FLOATS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B4B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B4C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B4D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SHADER_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B4F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_VEC2_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B50);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_VEC3_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B51);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_VEC4_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B52);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_VEC2_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B53);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_VEC3_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B54);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_VEC4_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B55);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BOOL_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B56);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BOOL_VEC2_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B57);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BOOL_VEC3_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B58);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BOOL_VEC4_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B59);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_MAT2_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B5A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_MAT3_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B5B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_MAT4_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B5C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_1D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B5D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_2D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B5E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_3D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B5F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_CUBE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B60);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_1D_SHADOW_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B61);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_2D_SHADOW_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B62);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DELETE_STATUS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B80);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPILE_STATUS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B81);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LINK_STATUS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B82);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VALIDATE_STATUS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B83);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INFO_LOG_LENGTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B84);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATTACHED_SHADERS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B85);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ACTIVE_UNIFORMS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B86);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ACTIVE_UNIFORM_MAX_LENGTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B87);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SHADER_SOURCE_LENGTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B88);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ACTIVE_ATTRIBUTES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B89);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ACTIVE_ATTRIBUTE_MAX_LENGTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B8A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_SHADER_DERIVATIVE_HINT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B8B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SHADING_LANGUAGE_VERSION_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B8C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_PROGRAM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B8D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POINT_SPRITE_COORD_ORIGIN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CA0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LOWER_LEFT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CA1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UPPER_LEFT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CA2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_BACK_REF_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CA3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_BACK_VALUE_MASK_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CA4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_BACK_WRITEMASK_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CA5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_PROGRAM_TWO_SIDE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8643);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POINT_SPRITE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8861);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COORD_REPLACE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8862);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TEXTURE_COORDS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8871);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_PACK_BUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88EB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_UNPACK_BUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88EC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_PACK_BUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88ED);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_UNPACK_BUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88EF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_MAT2x3_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B65);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_MAT2x4_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B66);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_MAT3x2_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B67);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_MAT3x4_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B68);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_MAT4x2_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B69);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_MAT4x3_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B6A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SRGB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C40);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SRGB8_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C41);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SRGB_ALPHA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C42);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SRGB8_ALPHA8_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C43);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_SRGB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C48);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_SRGB_ALPHA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C49);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_RASTER_SECONDARY_COLOR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x845F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SLUMINANCE_ALPHA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C44);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SLUMINANCE8_ALPHA8_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C45);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SLUMINANCE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C46);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SLUMINANCE8_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C47);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_SLUMINANCE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C4A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_SLUMINANCE_ALPHA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C4B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPARE_REF_TO_TEXTURE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x884E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLIP_DISTANCE0_get() {
  int jresult ;
  int result;
  
  result = (int)(0x3000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLIP_DISTANCE1_get() {
  int jresult ;
  int result;
  
  result = (int)(0x3001);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLIP_DISTANCE2_get() {
  int jresult ;
  int result;
  
  result = (int)(0x3002);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLIP_DISTANCE3_get() {
  int jresult ;
  int result;
  
  result = (int)(0x3003);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLIP_DISTANCE4_get() {
  int jresult ;
  int result;
  
  result = (int)(0x3004);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLIP_DISTANCE5_get() {
  int jresult ;
  int result;
  
  result = (int)(0x3005);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLIP_DISTANCE6_get() {
  int jresult ;
  int result;
  
  result = (int)(0x3006);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLIP_DISTANCE7_get() {
  int jresult ;
  int result;
  
  result = (int)(0x3007);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_CLIP_DISTANCES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0D32);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAJOR_VERSION_get() {
  int jresult ;
  int result;
  
  result = (int)(0x821B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MINOR_VERSION_get() {
  int jresult ;
  int result;
  
  result = (int)(0x821C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NUM_EXTENSIONS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x821D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONTEXT_FLAGS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x821E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_BUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8223);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_BUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8224);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_RED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8225);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_RG_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8226);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0001);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA32F_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8814);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB32F_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8815);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA16F_get() {
  int jresult ;
  int result;
  
  result = (int)(0x881A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB16F_get() {
  int jresult ;
  int result;
  
  result = (int)(0x881B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_INTEGER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88FD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_ARRAY_TEXTURE_LAYERS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88FF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MIN_PROGRAM_TEXEL_OFFSET_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8904);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_TEXEL_OFFSET_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8905);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLAMP_READ_COLOR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x891C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FIXED_ONLY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x891D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VARYING_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B4B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_1D_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C18);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_TEXTURE_1D_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C19);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_2D_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C1A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_TEXTURE_2D_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C1B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BINDING_1D_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C1C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BINDING_2D_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C1D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_R11F_G11F_B10F_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C3A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_10F_11F_11F_REV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C3B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB9_E5_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C3D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_5_9_9_9_REV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C3E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_SHARED_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C3F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C76);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BUFFER_MODE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C7F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C80);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_VARYINGS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C83);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BUFFER_START_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C84);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C85);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PRIMITIVES_GENERATED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C87);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C88);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RASTERIZER_DISCARD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C89);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C8A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C8B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTERLEAVED_ATTRIBS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C8C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SEPARATE_ATTRIBS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C8D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C8E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C8F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA32UI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D70);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB32UI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D71);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA16UI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D76);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB16UI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D77);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA8UI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D7C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB8UI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D7D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA32I_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D82);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB32I_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D83);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA16I_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D88);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB16I_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D89);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA8I_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D8E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB8I_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D8F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RED_INTEGER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D94);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GREEN_INTEGER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D95);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BLUE_INTEGER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D96);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB_INTEGER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D98);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA_INTEGER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D99);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BGR_INTEGER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D9A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BGRA_INTEGER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D9B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_1D_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DC0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_2D_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DC1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_1D_ARRAY_SHADOW_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DC3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_2D_ARRAY_SHADOW_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DC4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_CUBE_SHADOW_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DC5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_VEC2_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DC6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_VEC3_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DC7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_VEC4_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DC8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_SAMPLER_1D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DC9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_SAMPLER_2D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DCA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_SAMPLER_3D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DCB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_SAMPLER_CUBE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DCC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_SAMPLER_1D_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DCE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_SAMPLER_2D_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DCF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_SAMPLER_1D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DD1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_SAMPLER_2D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DD2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_SAMPLER_3D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DD3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_SAMPLER_CUBE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DD4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DD6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DD7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUERY_WAIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E13);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUERY_NO_WAIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E14);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUERY_BY_REGION_WAIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E15);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUERY_BY_REGION_NO_WAIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E16);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUFFER_ACCESS_FLAGS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x911F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUFFER_MAP_LENGTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9120);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUFFER_MAP_OFFSET_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9121);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLAMP_VERTEX_COLOR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x891A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLAMP_FRAGMENT_COLOR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x891B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA_INTEGER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D97);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_2D_RECT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B63);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_2D_RECT_SHADOW_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B64);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_BUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DC2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_SAMPLER_2D_RECT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DCD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_SAMPLER_BUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DD0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_SAMPLER_2D_RECT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DD5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_SAMPLER_BUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DD8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C2A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TEXTURE_BUFFER_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C2B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BINDING_BUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C2C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BUFFER_DATA_STORE_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C2D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BUFFER_FORMAT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C2E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_RECTANGLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84F5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BINDING_RECTANGLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84F6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_TEXTURE_RECTANGLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84F7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_RECTANGLE_TEXTURE_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84F8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RED_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F90);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RG_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F91);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F92);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F93);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_R8_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F94);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RG8_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F95);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB8_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F96);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA8_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F97);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_R16_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F98);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RG16_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F99);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB16_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F9A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA16_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F9B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SIGNED_NORMALIZED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F9C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PRIMITIVE_RESTART_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F9D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PRIMITIVE_RESTART_INDEX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F9E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONTEXT_CORE_PROFILE_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000001);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONTEXT_COMPATIBILITY_PROFILE_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000002);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LINES_ADJACENCY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x000A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LINE_STRIP_ADJACENCY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x000B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRIANGLES_ADJACENCY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x000C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRIANGLE_STRIP_ADJACENCY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x000D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_POINT_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8642);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C29);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_ATTACHMENT_LAYERED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DA7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DA8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GEOMETRY_SHADER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DD9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GEOMETRY_VERTICES_OUT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8916);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GEOMETRY_INPUT_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8917);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GEOMETRY_OUTPUT_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8918);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DDF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_OUTPUT_VERTICES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DE0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DE1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_OUTPUT_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9122);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_INPUT_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9123);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9124);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_FRAGMENT_INPUT_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9125);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONTEXT_PROFILE_MASK_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9126);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_DIVISOR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88FE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_SHADING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C36);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MIN_SAMPLE_SHADING_VALUE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C37);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E5E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E5F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9009);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x900A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x900B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_CUBE_MAP_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x900C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_get() {
  int jresult ;
  int result;
  
  result = (int)(0x900D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_SAMPLER_CUBE_MAP_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x900E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x900F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE0_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84C0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE1_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84C1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE2_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84C2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE3_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84C3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE4_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84C4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE5_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84C5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE6_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84C6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE7_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84C7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE8_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84C8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE9_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84C9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE10_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84CA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE11_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84CB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE12_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84CC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE13_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84CD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE14_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84CE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE15_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84CF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE16_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84D0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE17_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84D1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE18_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84D2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE19_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84D3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE20_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84D4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE21_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84D5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE22_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84D6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE23_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84D7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE24_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84D8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE25_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84D9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE26_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84DA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE27_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84DB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE28_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84DC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE29_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84DD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE30_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84DE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE31_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84DF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ACTIVE_TEXTURE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84E0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLIENT_ACTIVE_TEXTURE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84E1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TEXTURE_UNITS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84E2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSPOSE_MODELVIEW_MATRIX_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84E3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSPOSE_PROJECTION_MATRIX_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84E4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSPOSE_TEXTURE_MATRIX_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84E5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSPOSE_COLOR_MATRIX_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84E6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MULTISAMPLE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x809D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_ALPHA_TO_COVERAGE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x809E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_ALPHA_TO_ONE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x809F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_COVERAGE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_BUFFERS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLES_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_COVERAGE_VALUE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80AA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_COVERAGE_INVERT_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80AB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MULTISAMPLE_BIT_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x20000000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NORMAL_MAP_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8511);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REFLECTION_MAP_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8512);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8513);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BINDING_CUBE_MAP_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8514);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8515);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8516);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8517);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8518);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8519);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x851A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_TEXTURE_CUBE_MAP_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x851B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x851C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_ALPHA_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84E9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_LUMINANCE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84EA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_LUMINANCE_ALPHA_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84EB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_INTENSITY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84EC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_RGB_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84ED);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_RGBA_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84EE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COMPRESSION_HINT_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84EF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86A0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COMPRESSED_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86A1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86A2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_TEXTURE_FORMATS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86A3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLAMP_TO_BORDER_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x812D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POINT_SIZE_MIN_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8126);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POINT_SIZE_MAX_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8127);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POINT_FADE_THRESHOLD_SIZE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8128);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POINT_DISTANCE_ATTENUATION_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8129);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_UNITS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86A4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ACTIVE_VERTEX_UNITS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86A5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_WEIGHT_SUM_UNITY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86A6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_BLEND_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86A7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_WEIGHT_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86A8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_WEIGHT_ARRAY_TYPE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86A9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_WEIGHT_ARRAY_STRIDE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86AA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_WEIGHT_ARRAY_SIZE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86AB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_WEIGHT_ARRAY_POINTER_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86AC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_WEIGHT_ARRAY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86AD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW0_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1700);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW1_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x850A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW2_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8722);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW3_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8723);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW4_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8724);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW5_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8725);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW6_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8726);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW7_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8727);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW8_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8728);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW9_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8729);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW10_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x872A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW11_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x872B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW12_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x872C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW13_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x872D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW14_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x872E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW15_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x872F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW16_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8730);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW17_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8731);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW18_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8732);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW19_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8733);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW20_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8734);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW21_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8735);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW22_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8736);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW23_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8737);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW24_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8738);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW25_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8739);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW26_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x873A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW27_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x873B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW28_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x873C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW29_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x873D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW30_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x873E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW31_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x873F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX_PALETTE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8840);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8841);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PALETTE_MATRICES_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8842);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_PALETTE_MATRIX_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8843);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX_INDEX_ARRAY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8844);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_MATRIX_INDEX_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8845);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX_INDEX_ARRAY_SIZE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8846);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX_INDEX_ARRAY_TYPE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8847);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX_INDEX_ARRAY_STRIDE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8848);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX_INDEX_ARRAY_POINTER_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8849);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8570);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINE_RGB_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8571);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINE_ALPHA_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8572);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SOURCE0_RGB_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8580);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SOURCE1_RGB_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8581);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SOURCE2_RGB_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8582);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SOURCE0_ALPHA_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8588);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SOURCE1_ALPHA_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8589);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SOURCE2_ALPHA_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x858A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OPERAND0_RGB_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8590);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OPERAND1_RGB_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8591);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OPERAND2_RGB_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8592);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OPERAND0_ALPHA_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8598);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OPERAND1_ALPHA_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8599);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OPERAND2_ALPHA_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x859A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB_SCALE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8573);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ADD_SIGNED_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8574);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTERPOLATE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8575);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SUBTRACT_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84E7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONSTANT_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8576);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PRIMARY_COLOR_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8577);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PREVIOUS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8578);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOT3_RGB_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86AE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOT3_RGBA_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86AF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MIRRORED_REPEAT_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8370);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_COMPONENT16_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81A5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_COMPONENT24_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81A6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_COMPONENT32_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81A7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_DEPTH_SIZE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x884A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_TEXTURE_MODE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x884B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COMPARE_MODE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x884C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COMPARE_FUNC_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x884D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPARE_R_TO_TEXTURE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x884E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COMPARE_FAIL_VALUE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80BF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_SUM_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8458);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_PROGRAM_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8620);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8622);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8623);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8624);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8625);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_VERTEX_ATTRIB_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8626);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_LENGTH_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8627);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_STRING_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8628);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x862E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_MATRICES_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x862F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_MATRIX_STACK_DEPTH_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8640);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_MATRIX_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8641);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_PROGRAM_POINT_SIZE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8642);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_PROGRAM_TWO_SIDE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8643);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8645);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_ERROR_POSITION_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x864B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_BINDING_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8677);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_ATTRIBS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8869);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x886A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_ERROR_STRING_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8874);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_FORMAT_ASCII_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8875);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_FORMAT_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8876);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_INSTRUCTIONS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88A0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_INSTRUCTIONS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88A1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88A2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88A3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_TEMPORARIES_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88A4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_TEMPORARIES_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88A5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_NATIVE_TEMPORARIES_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88A6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88A7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_PARAMETERS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88A8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_PARAMETERS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88A9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_NATIVE_PARAMETERS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88AA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88AB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_ATTRIBS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88AC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_ATTRIBS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88AD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_NATIVE_ATTRIBS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88AE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88AF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_ADDRESS_REGISTERS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88B0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88B1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88B2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88B3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88B4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_ENV_PARAMETERS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88B5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88B6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSPOSE_CURRENT_MATRIX_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88B7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX0_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88C0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX1_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88C1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX2_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88C2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX3_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88C3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX4_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88C4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX5_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88C5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX6_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88C6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX7_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88C7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX8_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88C8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX9_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88C9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX10_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88CA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX11_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88CB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX12_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88CC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX13_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88CD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX14_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88CE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX15_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88CF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX16_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88D0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX17_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88D1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX18_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88D2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX19_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88D3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX20_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88D4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX21_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88D5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX22_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88D6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX23_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88D7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX24_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88D8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX25_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88D9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX26_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88DA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX27_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88DB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX28_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88DC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX29_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88DD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX30_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88DE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX31_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88DF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_PROGRAM_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8804);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_ALU_INSTRUCTIONS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8805);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_TEX_INSTRUCTIONS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8806);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_TEX_INDIRECTIONS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8807);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8808);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8809);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x880A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x880B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x880C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x880D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x880E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x880F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8810);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TEXTURE_COORDS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8871);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TEXTURE_IMAGE_UNITS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8872);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUFFER_SIZE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8764);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUFFER_USAGE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8765);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARRAY_BUFFER_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8892);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ELEMENT_ARRAY_BUFFER_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8893);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARRAY_BUFFER_BINDING_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8894);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8895);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_BUFFER_BINDING_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8896);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NORMAL_ARRAY_BUFFER_BINDING_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8897);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ARRAY_BUFFER_BINDING_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8898);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INDEX_ARRAY_BUFFER_BINDING_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8899);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x889A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x889B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x889C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x889D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x889E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x889F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_READ_ONLY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88B8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_WRITE_ONLY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88B9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_READ_WRITE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88BA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUFFER_ACCESS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88BB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUFFER_MAPPED_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88BC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUFFER_MAP_POINTER_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88BD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STREAM_DRAW_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88E0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STREAM_READ_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88E1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STREAM_COPY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88E2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STATIC_DRAW_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88E4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STATIC_READ_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88E5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STATIC_COPY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88E6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DYNAMIC_DRAW_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88E8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DYNAMIC_READ_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88E9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DYNAMIC_COPY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88EA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUERY_COUNTER_BITS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8864);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_QUERY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8865);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUERY_RESULT_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8866);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUERY_RESULT_AVAILABLE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8867);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLES_PASSED_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8914);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_OBJECT_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B40);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SHADER_OBJECT_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B48);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OBJECT_TYPE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B4E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OBJECT_SUBTYPE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B4F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_VEC2_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B50);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_VEC3_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B51);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_VEC4_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B52);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_VEC2_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B53);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_VEC3_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B54);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_VEC4_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B55);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BOOL_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B56);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BOOL_VEC2_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B57);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BOOL_VEC3_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B58);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BOOL_VEC4_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B59);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_MAT2_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B5A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_MAT3_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B5B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_MAT4_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B5C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_1D_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B5D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_2D_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B5E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_3D_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B5F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_CUBE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B60);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_1D_SHADOW_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B61);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_2D_SHADOW_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B62);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_2D_RECT_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B63);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_2D_RECT_SHADOW_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B64);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OBJECT_DELETE_STATUS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B80);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OBJECT_COMPILE_STATUS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B81);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OBJECT_LINK_STATUS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B82);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OBJECT_VALIDATE_STATUS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B83);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OBJECT_INFO_LOG_LENGTH_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B84);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OBJECT_ATTACHED_OBJECTS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B85);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OBJECT_ACTIVE_UNIFORMS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B86);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B87);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OBJECT_SHADER_SOURCE_LENGTH_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B88);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_SHADER_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B31);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B4A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VARYING_FLOATS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B4B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B4C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B4D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OBJECT_ACTIVE_ATTRIBUTES_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B89);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B8A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_SHADER_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B30);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B49);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B8B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SHADING_LANGUAGE_VERSION_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B8C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POINT_SPRITE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8861);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COORD_REPLACE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8862);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_DRAW_BUFFERS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8824);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER0_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8825);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER1_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8826);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER2_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8827);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER3_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8828);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER4_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8829);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER5_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x882A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER6_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x882B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER7_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x882C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER8_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x882D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER9_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x882E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER10_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x882F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER11_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8830);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER12_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8831);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER13_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8832);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER14_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8833);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER15_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8834);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_RECTANGLE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84F5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BINDING_RECTANGLE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84F6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_TEXTURE_RECTANGLE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84F7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84F8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA_FLOAT_MODE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8820);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLAMP_VERTEX_COLOR_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x891A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLAMP_FRAGMENT_COLOR_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x891B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLAMP_READ_COLOR_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x891C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FIXED_ONLY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x891D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HALF_FLOAT_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x140B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_RED_TYPE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C10);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_GREEN_TYPE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C11);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BLUE_TYPE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C12);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_ALPHA_TYPE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C13);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_LUMINANCE_TYPE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C14);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_INTENSITY_TYPE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C15);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_DEPTH_TYPE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C16);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_NORMALIZED_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C17);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA32F_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8814);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB32F_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8815);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA32F_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8816);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTENSITY32F_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8817);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE32F_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8818);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE_ALPHA32F_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8819);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA16F_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x881A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB16F_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x881B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA16F_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x881C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTENSITY16F_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x881D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE16F_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x881E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE_ALPHA16F_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x881F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_PACK_BUFFER_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88EB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_UNPACK_BUFFER_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88EC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_PACK_BUFFER_BINDING_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88ED);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_UNPACK_BUFFER_BINDING_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88EF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_COMPONENT32F_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CAC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH32F_STENCIL8_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CAD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_32_UNSIGNED_INT_24_8_REV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DAD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INVALID_FRAMEBUFFER_OPERATION_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0506);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8210);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8211);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8212);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8213);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8214);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8215);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8216);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8217);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_DEFAULT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8218);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_UNDEFINED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8219);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_STENCIL_ATTACHMENT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x821A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_RENDERBUFFER_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84E8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_STENCIL_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84F9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_24_8_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84FA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH24_STENCIL8_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88F0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_STENCIL_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88F1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_RED_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C10);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_GREEN_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C11);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BLUE_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C12);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_ALPHA_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C13);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_DEPTH_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C16);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_NORMALIZED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C17);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CA6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_FRAMEBUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CA6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CA7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_READ_FRAMEBUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CA8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_FRAMEBUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CA9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_READ_FRAMEBUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CAA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_SAMPLES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CAB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CD0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CD1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CD2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CD3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CD4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_COMPLETE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CD5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CD6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CD7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CDB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CDC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_UNSUPPORTED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CDD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_COLOR_ATTACHMENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CDF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT0_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CE0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT1_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CE1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT2_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CE2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT3_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CE3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT4_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CE4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT5_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CE5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT6_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CE6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT7_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CE7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT8_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CE8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT9_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CE9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT10_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CEA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT11_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CEB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT12_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CEC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT13_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CED);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT14_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CEE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT15_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CEF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_ATTACHMENT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D00);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_ATTACHMENT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D20);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D40);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D41);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_WIDTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D42);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_HEIGHT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D43);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_INTERNAL_FORMAT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D44);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_INDEX1_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D46);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_INDEX4_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D47);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_INDEX8_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D48);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_INDEX16_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D49);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_RED_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D50);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_GREEN_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D51);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_BLUE_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D52);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_ALPHA_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D53);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_DEPTH_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D54);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_STENCIL_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D55);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D56);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_SAMPLES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D57);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INDEX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8222);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_LUMINANCE_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C14);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_INTENSITY_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C15);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_SRGB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DB9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LINES_ADJACENCY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x000A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LINE_STRIP_ADJACENCY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x000B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRIANGLES_ADJACENCY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x000C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRIANGLE_STRIP_ADJACENCY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x000D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_POINT_SIZE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8642);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C29);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DA7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DA8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DA9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GEOMETRY_SHADER_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DD9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GEOMETRY_VERTICES_OUT_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DDA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GEOMETRY_INPUT_TYPE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DDB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GEOMETRY_OUTPUT_TYPE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DDC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DDD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_VARYING_COMPONENTS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DDE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DDF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DE0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DE1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HALF_FLOAT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x140B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88FE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP_READ_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0001);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP_WRITE_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0002);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP_INVALIDATE_RANGE_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0004);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP_INVALIDATE_BUFFER_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0008);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP_FLUSH_EXPLICIT_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0010);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP_UNSYNCHRONIZED_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0020);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BUFFER_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C2A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TEXTURE_BUFFER_SIZE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C2B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BINDING_BUFFER_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C2C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C2D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BUFFER_FORMAT_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C2E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_RED_RGTC1_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DBB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_SIGNED_RED_RGTC1_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DBC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_RG_RGTC2_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DBD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_SIGNED_RG_RGTC2_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DBE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RG_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8227);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RG_INTEGER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8228);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_R8_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8229);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_R16_get() {
  int jresult ;
  int result;
  
  result = (int)(0x822A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RG8_get() {
  int jresult ;
  int result;
  
  result = (int)(0x822B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RG16_get() {
  int jresult ;
  int result;
  
  result = (int)(0x822C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_R16F_get() {
  int jresult ;
  int result;
  
  result = (int)(0x822D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_R32F_get() {
  int jresult ;
  int result;
  
  result = (int)(0x822E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RG16F_get() {
  int jresult ;
  int result;
  
  result = (int)(0x822F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RG32F_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8230);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_R8I_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8231);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_R8UI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8232);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_R16I_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8233);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_R16UI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8234);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_R32I_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8235);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_R32UI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8236);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RG8I_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8237);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RG8UI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8238);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RG16I_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8239);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RG16UI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x823A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RG32I_get() {
  int jresult ;
  int result;
  
  result = (int)(0x823B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RG32UI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x823C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85B5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_BUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A11);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_BUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A28);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_BUFFER_START_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A29);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_BUFFER_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A2A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_UNIFORM_BLOCKS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A2B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_UNIFORM_BLOCKS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A2C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_FRAGMENT_UNIFORM_BLOCKS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A2D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_COMBINED_UNIFORM_BLOCKS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A2E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_UNIFORM_BUFFER_BINDINGS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A2F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_UNIFORM_BLOCK_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A30);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A31);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A32);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A33);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A34);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A35);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ACTIVE_UNIFORM_BLOCKS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A36);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A37);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A38);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_NAME_LENGTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A39);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_BLOCK_INDEX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A3A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_OFFSET_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A3B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_ARRAY_STRIDE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A3C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_MATRIX_STRIDE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A3D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_IS_ROW_MAJOR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A3E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_BLOCK_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A3F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_BLOCK_DATA_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A40);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_BLOCK_NAME_LENGTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A41);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A42);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A43);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A44);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A45);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A46);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_GL_INVALID_INDEX_get() {
  unsigned int jresult ;
  unsigned int result;
  
  result = (unsigned int)(0xFFFFFFFFu);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COPY_READ_BUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F36);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COPY_WRITE_BUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F37);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_CLAMP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x864F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E4C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FIRST_VERTEX_CONVENTION_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E4D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LAST_VERTEX_CONVENTION_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E4E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROVOKING_VERTEX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E4F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_SEAMLESS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x884F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_SERVER_WAIT_TIMEOUT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9111);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OBJECT_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9112);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SYNC_CONDITION_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9113);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SYNC_STATUS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9114);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SYNC_FLAGS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9115);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SYNC_FENCE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9116);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SYNC_GPU_COMMANDS_COMPLETE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9117);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNALED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9118);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SIGNALED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9119);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALREADY_SIGNALED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x911A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TIMEOUT_EXPIRED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x911B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONDITION_SATISFIED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x911C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_WAIT_FAILED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x911D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SYNC_FLUSH_COMMANDS_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000001);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_GL_TIMEOUT_IGNORED_get() {
  unsigned long long jresult ;
  unsigned long long result;
  
  result = (unsigned long long)(0xFFFFFFFFFFFFFFFFull);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_POSITION_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E50);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_MASK_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E51);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_MASK_VALUE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E52);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_SAMPLE_MASK_WORDS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E59);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_2D_MULTISAMPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9100);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_TEXTURE_2D_MULTISAMPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9101);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_2D_MULTISAMPLE_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9102);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9103);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BINDING_2D_MULTISAMPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9104);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9105);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_SAMPLES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9106);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_FIXED_SAMPLE_LOCATIONS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9107);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_2D_MULTISAMPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9108);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_SAMPLER_2D_MULTISAMPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9109);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x910A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_2D_MULTISAMPLE_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x910B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x910C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x910D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_COLOR_TEXTURE_SAMPLES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x910E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_DEPTH_TEXTURE_SAMPLES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x910F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_INTEGER_SAMPLES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9110);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_SHADING_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C36);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MIN_SAMPLE_SHADING_VALUE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C37);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_ARRAY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9009);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x900A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x900B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_CUBE_MAP_ARRAY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x900C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x900D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x900E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x900F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E5E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E5F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SHADER_INCLUDE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DAE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NAMED_STRING_LENGTH_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DE9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NAMED_STRING_TYPE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DEA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_RGBA_BPTC_UNORM_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E8C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E8D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E8E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E8F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SRC1_COLOR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88F9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ONE_MINUS_SRC1_COLOR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88FA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ONE_MINUS_SRC1_ALPHA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88FB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88FC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ANY_SAMPLES_PASSED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C2F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8919);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB10_A2UI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x906F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_SWIZZLE_R_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E42);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_SWIZZLE_G_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E43);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_SWIZZLE_B_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E44);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_SWIZZLE_A_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E45);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_SWIZZLE_RGBA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E46);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TIME_ELAPSED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88BF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TIMESTAMP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E28);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_2_10_10_10_REV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D9F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_INDIRECT_BUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F3F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_INDIRECT_BUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F43);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GEOMETRY_SHADER_INVOCATIONS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x887F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_SHADER_INVOCATIONS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E5A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E5B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E5C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E5D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_VEC2_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FFC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_VEC3_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FFD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_VEC4_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FFE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_MAT2_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F46);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_MAT3_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F47);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_MAT4_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F48);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_MAT2x3_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F49);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_MAT2x4_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F4A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_MAT3x2_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F4B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_MAT3x4_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F4C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_MAT4x2_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F4D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_MAT4x3_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F4E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ACTIVE_SUBROUTINES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DE5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ACTIVE_SUBROUTINE_UNIFORMS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DE6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E47);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ACTIVE_SUBROUTINE_MAX_LENGTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E48);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E49);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_SUBROUTINES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DE7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DE8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NUM_COMPATIBLE_SUBROUTINES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E4A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPATIBLE_SUBROUTINES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E4B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PATCHES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x000E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PATCH_VERTICES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E72);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PATCH_DEFAULT_INNER_LEVEL_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E73);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PATCH_DEFAULT_OUTER_LEVEL_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E74);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TESS_CONTROL_OUTPUT_VERTICES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E75);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TESS_GEN_MODE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E76);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TESS_GEN_SPACING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E77);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TESS_GEN_VERTEX_ORDER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E78);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TESS_GEN_POINT_MODE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E79);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ISOLINES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E7A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRACTIONAL_ODD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E7B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRACTIONAL_EVEN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E7C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PATCH_VERTICES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E7D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TESS_GEN_LEVEL_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E7E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E7F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E80);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E81);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E82);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E83);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TESS_PATCH_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E84);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E85);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E86);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E89);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E8A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x886C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x886D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E1E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E1F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84F0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84F1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TESS_EVALUATION_SHADER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E87);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TESS_CONTROL_SHADER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E88);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E22);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E23);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E24);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E25);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TRANSFORM_FEEDBACK_BUFFERS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E70);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_STREAMS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E71);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FIXED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x140C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMPLEMENTATION_COLOR_READ_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B9A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMPLEMENTATION_COLOR_READ_FORMAT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B9B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LOW_FLOAT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DF0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MEDIUM_FLOAT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DF1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HIGH_FLOAT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DF2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LOW_INT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DF3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MEDIUM_INT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DF4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HIGH_INT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DF5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SHADER_COMPILER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DFA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NUM_SHADER_BINARY_FORMATS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DF9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_UNIFORM_VECTORS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DFB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VARYING_VECTORS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DFC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_FRAGMENT_UNIFORM_VECTORS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DFD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_BINARY_RETRIEVABLE_HINT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8257);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_BINARY_LENGTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8741);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NUM_PROGRAM_BINARY_FORMATS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87FE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_BINARY_FORMATS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87FF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_SHADER_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000001);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_SHADER_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000002);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GEOMETRY_SHADER_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000004);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TESS_CONTROL_SHADER_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000008);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TESS_EVALUATION_SHADER_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000010);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALL_SHADER_BITS_get() {
  int jresult ;
  int result;
  
  result = (int)(0xFFFFFFFF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_SEPARABLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8258);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ACTIVE_PROGRAM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8259);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_PIPELINE_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x825A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VIEWPORTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x825B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VIEWPORT_SUBPIXEL_BITS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x825C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VIEWPORT_BOUNDS_RANGE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x825D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LAYER_PROVOKING_VERTEX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x825E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VIEWPORT_INDEX_PROVOKING_VERTEX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x825F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNDEFINED_VERTEX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8260);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SYNC_CL_EVENT_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8240);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SYNC_CL_EVENT_COMPLETE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8241);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8242);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8243);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_CALLBACK_FUNCTION_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8244);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_CALLBACK_USER_PARAM_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8245);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_SOURCE_API_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8246);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8247);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_SOURCE_SHADER_COMPILER_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8248);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_SOURCE_THIRD_PARTY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8249);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_SOURCE_APPLICATION_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x824A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_SOURCE_OTHER_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x824B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_TYPE_ERROR_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x824C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x824D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x824E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_TYPE_PORTABILITY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x824F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_TYPE_PERFORMANCE_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8250);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_TYPE_OTHER_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8251);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_DEBUG_MESSAGE_LENGTH_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9143);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_DEBUG_LOGGED_MESSAGES_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9144);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_LOGGED_MESSAGES_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9145);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_SEVERITY_HIGH_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9146);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_SEVERITY_MEDIUM_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9147);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_SEVERITY_LOW_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9148);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000004);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LOSE_CONTEXT_ON_RESET_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8252);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GUILTY_CONTEXT_RESET_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8253);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INNOCENT_CONTEXT_RESET_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8254);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNKNOWN_CONTEXT_RESET_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8255);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RESET_NOTIFICATION_STRATEGY_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8256);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NO_RESET_NOTIFICATION_ARB_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8261);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNPACK_COMPRESSED_BLOCK_WIDTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9127);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNPACK_COMPRESSED_BLOCK_HEIGHT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9128);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNPACK_COMPRESSED_BLOCK_DEPTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9129);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNPACK_COMPRESSED_BLOCK_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x912A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PACK_COMPRESSED_BLOCK_WIDTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x912B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PACK_COMPRESSED_BLOCK_HEIGHT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x912C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PACK_COMPRESSED_BLOCK_DEPTH_get() {
  int jresult ;
  int result;
  
  result = (int)(0x912D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PACK_COMPRESSED_BLOCK_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x912E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NUM_SAMPLE_COUNTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9380);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MIN_MAP_BUFFER_ALIGNMENT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x90BC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATOMIC_COUNTER_BUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92C0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATOMIC_COUNTER_BUFFER_BINDING_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92C1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATOMIC_COUNTER_BUFFER_START_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92C2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATOMIC_COUNTER_BUFFER_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92C3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92C4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92C5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92C6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92C7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92C8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92C9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92CA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92CB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92CC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92CD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92CE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92CF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92D0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92D1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_ATOMIC_COUNTERS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92D2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92D3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92D4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_ATOMIC_COUNTERS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92D5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_FRAGMENT_ATOMIC_COUNTERS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92D6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_COMBINED_ATOMIC_COUNTERS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92D7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92D8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92DC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ACTIVE_ATOMIC_COUNTER_BUFFERS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92D9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92DA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_ATOMIC_COUNTER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x92DB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000001);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ELEMENT_ARRAY_BARRIER_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000002);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_BARRIER_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000004);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_FETCH_BARRIER_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000008);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000020);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMMAND_BARRIER_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000040);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_BUFFER_BARRIER_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000080);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_UPDATE_BARRIER_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000100);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUFFER_UPDATE_BARRIER_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000200);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_BARRIER_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000400);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BARRIER_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000800);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATOMIC_COUNTER_BARRIER_BIT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00001000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALL_BARRIER_BITS_get() {
  int jresult ;
  int result;
  
  result = (int)(0xFFFFFFFF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_IMAGE_UNITS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F38);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F39);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_BINDING_NAME_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F3A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_BINDING_LEVEL_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F3B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_BINDING_LAYERED_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F3C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_BINDING_LAYER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F3D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_BINDING_ACCESS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F3E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_1D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x904C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_2D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x904D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_3D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x904E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_2D_RECT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x904F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_CUBE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9050);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_BUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9051);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_1D_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9052);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_2D_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9053);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_CUBE_MAP_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9054);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_2D_MULTISAMPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9055);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_2D_MULTISAMPLE_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9056);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_IMAGE_1D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9057);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_IMAGE_2D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9058);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_IMAGE_3D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9059);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_IMAGE_2D_RECT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x905A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_IMAGE_CUBE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x905B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_IMAGE_BUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x905C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_IMAGE_1D_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x905D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_IMAGE_2D_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x905E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_IMAGE_CUBE_MAP_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x905F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_IMAGE_2D_MULTISAMPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9060);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9061);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_IMAGE_1D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9062);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_IMAGE_2D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9063);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_IMAGE_3D_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9064);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_IMAGE_2D_RECT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9065);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_IMAGE_CUBE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9066);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_IMAGE_BUFFER_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9067);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_IMAGE_1D_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9068);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_IMAGE_2D_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9069);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x906A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x906B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(0x906C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_IMAGE_SAMPLES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x906D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_BINDING_FORMAT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x906E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_FORMAT_COMPATIBILITY_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x90C7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x90C8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x90C9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_IMAGE_UNIFORMS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x90CA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x90CB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x90CC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_IMAGE_UNIFORMS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x90CD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_FRAGMENT_IMAGE_UNIFORMS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x90CE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_COMBINED_IMAGE_UNIFORMS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x90CF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_IMMUTABLE_FORMAT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x912F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ABGR_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONSTANT_COLOR_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8001);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ONE_MINUS_CONSTANT_COLOR_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8002);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONSTANT_ALPHA_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8003);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ONE_MINUS_CONSTANT_ALPHA_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8004);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BLEND_COLOR_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8005);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POLYGON_OFFSET_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8037);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POLYGON_OFFSET_FACTOR_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8038);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POLYGON_OFFSET_BIAS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8039);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA4_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x803B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA8_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x803C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA12_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x803D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA16_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x803E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE4_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x803F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE8_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8040);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE12_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8041);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE16_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8042);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE4_ALPHA4_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8043);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE6_ALPHA2_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8044);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE8_ALPHA8_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8045);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE12_ALPHA4_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8046);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE12_ALPHA12_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8047);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE16_ALPHA16_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8048);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTENSITY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8049);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTENSITY4_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x804A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTENSITY8_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x804B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTENSITY12_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x804C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTENSITY16_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x804D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB2_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x804E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB4_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x804F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB5_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8050);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB8_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8051);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB10_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8052);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB12_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8053);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB16_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8054);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA2_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8055);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA4_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8056);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB5_A1_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8057);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA8_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8058);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB10_A2_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8059);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA12_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x805A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA16_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x805B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_RED_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x805C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_GREEN_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x805D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BLUE_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x805E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_ALPHA_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x805F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_LUMINANCE_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8060);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_INTENSITY_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8061);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REPLACE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8062);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_TEXTURE_1D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8063);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_TEXTURE_2D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8064);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_TOO_LARGE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8065);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PACK_SKIP_IMAGES_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x806B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PACK_IMAGE_HEIGHT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x806C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNPACK_SKIP_IMAGES_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x806D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNPACK_IMAGE_HEIGHT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x806E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_3D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x806F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_TEXTURE_3D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8070);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_DEPTH_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8071);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_WRAP_R_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8072);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_3D_TEXTURE_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8073);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FILTER4_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8146);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_FILTER4_SIZE_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8147);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HISTOGRAM_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8024);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_HISTOGRAM_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8025);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HISTOGRAM_WIDTH_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8026);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HISTOGRAM_FORMAT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8027);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HISTOGRAM_RED_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8028);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HISTOGRAM_GREEN_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8029);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HISTOGRAM_BLUE_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x802A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HISTOGRAM_ALPHA_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x802B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HISTOGRAM_LUMINANCE_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x802C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HISTOGRAM_SINK_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x802D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MINMAX_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x802E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MINMAX_FORMAT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x802F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MINMAX_SINK_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8030);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TABLE_TOO_LARGE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8031);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONVOLUTION_1D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8010);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONVOLUTION_2D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8011);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SEPARABLE_2D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8012);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONVOLUTION_BORDER_MODE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8013);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONVOLUTION_FILTER_SCALE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8014);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONVOLUTION_FILTER_BIAS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8015);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REDUCE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8016);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONVOLUTION_FORMAT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8017);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONVOLUTION_WIDTH_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8018);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONVOLUTION_HEIGHT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8019);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_CONVOLUTION_WIDTH_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x801A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_CONVOLUTION_HEIGHT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x801B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_CONVOLUTION_RED_SCALE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x801C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_CONVOLUTION_GREEN_SCALE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x801D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_CONVOLUTION_BLUE_SCALE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x801E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_CONVOLUTION_ALPHA_SCALE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x801F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_CONVOLUTION_RED_BIAS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8020);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_CONVOLUTION_GREEN_BIAS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8021);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_CONVOLUTION_BLUE_BIAS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8022);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_CONVOLUTION_ALPHA_BIAS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8023);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_MATRIX_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80B1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_MATRIX_STACK_DEPTH_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80B2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80B3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_COLOR_MATRIX_RED_SCALE_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80B4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80B5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80B6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80B7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_COLOR_MATRIX_RED_BIAS_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80B8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80B9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80BA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80BB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_TABLE_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80D0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_CONVOLUTION_COLOR_TABLE_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80D1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80D2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_COLOR_TABLE_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80D3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80D4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80D5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_TABLE_SCALE_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80D6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_TABLE_BIAS_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80D7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_TABLE_FORMAT_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80D8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_TABLE_WIDTH_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80D9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_TABLE_RED_SIZE_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80DA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_TABLE_GREEN_SIZE_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80DB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_TABLE_BLUE_SIZE_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80DC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_TABLE_ALPHA_SIZE_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80DD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_TABLE_LUMINANCE_SIZE_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80DE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_TABLE_INTENSITY_SIZE_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80DF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_TEXTURE_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8353);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8354);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8355);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_GROUP_COLOR_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8356);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_TEX_GEN_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8139);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_TEX_GEN_MODE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x832B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PACK_SKIP_VOLUMES_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8130);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PACK_IMAGE_DEPTH_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8131);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNPACK_SKIP_VOLUMES_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8132);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNPACK_IMAGE_DEPTH_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8133);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_4D_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8134);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_TEXTURE_4D_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8135);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_4DSIZE_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8136);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_WRAP_Q_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8137);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_4D_TEXTURE_SIZE_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8138);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_4D_BINDING_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x814F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COLOR_TABLE_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80BC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_TEXTURE_COLOR_TABLE_SGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80BD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CMYK_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x800C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CMYKA_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x800D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PACK_CMYK_HINT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x800E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNPACK_CMYK_HINT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x800F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_PRIORITY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8066);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_RESIDENT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8067);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_1D_BINDING_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8068);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_2D_BINDING_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8069);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_3D_BINDING_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x806A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DETAIL_TEXTURE_2D_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8095);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DETAIL_TEXTURE_2D_BINDING_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8096);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LINEAR_DETAIL_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8097);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LINEAR_DETAIL_ALPHA_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8098);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LINEAR_DETAIL_COLOR_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8099);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DETAIL_TEXTURE_LEVEL_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x809A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DETAIL_TEXTURE_MODE_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x809B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x809C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LINEAR_SHARPEN_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80AD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LINEAR_SHARPEN_ALPHA_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80AE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LINEAR_SHARPEN_COLOR_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80AF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80B0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_BYTE_3_3_2_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8032);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_SHORT_4_4_4_4_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8033);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_SHORT_5_5_5_1_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8034);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_8_8_8_8_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8035);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_10_10_10_2_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8036);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_MIN_LOD_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x813A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_MAX_LOD_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x813B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BASE_LEVEL_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x813C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_MAX_LEVEL_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x813D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MULTISAMPLE_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x809D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_ALPHA_TO_MASK_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x809E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_ALPHA_TO_ONE_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x809F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_MASK_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_1PASS_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_2PASS_0_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_2PASS_1_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_4PASS_0_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_4PASS_1_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_4PASS_2_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_4PASS_3_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_BUFFERS_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLES_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_MASK_VALUE_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80AA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_MASK_INVERT_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80AB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_PATTERN_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80AC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RESCALE_NORMAL_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x803A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8074);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NORMAL_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8075);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8076);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INDEX_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8077);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COORD_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8078);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EDGE_FLAG_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8079);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x807A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_TYPE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x807B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_STRIDE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x807C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_COUNT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x807D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NORMAL_ARRAY_TYPE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x807E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NORMAL_ARRAY_STRIDE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x807F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NORMAL_ARRAY_COUNT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8080);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ARRAY_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8081);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ARRAY_TYPE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8082);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ARRAY_STRIDE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8083);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ARRAY_COUNT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8084);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INDEX_ARRAY_TYPE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8085);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INDEX_ARRAY_STRIDE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8086);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INDEX_ARRAY_COUNT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8087);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COORD_ARRAY_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8088);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COORD_ARRAY_TYPE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8089);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COORD_ARRAY_STRIDE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x808A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COORD_ARRAY_COUNT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x808B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EDGE_FLAG_ARRAY_STRIDE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x808C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EDGE_FLAG_ARRAY_COUNT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x808D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_POINTER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x808E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NORMAL_ARRAY_POINTER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x808F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ARRAY_POINTER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8090);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INDEX_ARRAY_POINTER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8091);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COORD_ARRAY_POINTER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8092);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EDGE_FLAG_ARRAY_POINTER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8093);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GENERATE_MIPMAP_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8191);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GENERATE_MIPMAP_HINT_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8192);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LINEAR_CLIPMAP_LINEAR_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8170);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CLIPMAP_CENTER_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8171);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CLIPMAP_FRAME_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8172);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CLIPMAP_OFFSET_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8173);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8174);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8175);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CLIPMAP_DEPTH_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8176);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_CLIPMAP_DEPTH_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8177);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8178);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NEAREST_CLIPMAP_NEAREST_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x844D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NEAREST_CLIPMAP_LINEAR_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x844E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LINEAR_CLIPMAP_NEAREST_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x844F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COMPARE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x819A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COMPARE_OPERATOR_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x819B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_LEQUAL_R_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x819C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_GEQUAL_R_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x819D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLAMP_TO_EDGE_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x812F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLAMP_TO_BORDER_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x812D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FUNC_ADD_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8006);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MIN_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8007);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8008);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BLEND_EQUATION_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8009);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FUNC_SUBTRACT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x800A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FUNC_REVERSE_SUBTRACT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x800B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTERLACE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8094);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x813E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_TILE_CACHE_INCREMENT_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x813F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_TILE_WIDTH_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8140);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_TILE_HEIGHT_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8141);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_TILE_GRID_WIDTH_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8142);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_TILE_GRID_HEIGHT_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8143);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_TILE_GRID_DEPTH_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8144);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_TILE_CACHE_SIZE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8145);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DUAL_ALPHA4_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8110);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DUAL_ALPHA8_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8111);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DUAL_ALPHA12_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8112);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DUAL_ALPHA16_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8113);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DUAL_LUMINANCE4_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8114);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DUAL_LUMINANCE8_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8115);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DUAL_LUMINANCE12_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8116);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DUAL_LUMINANCE16_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8117);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DUAL_INTENSITY4_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8118);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DUAL_INTENSITY8_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8119);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DUAL_INTENSITY12_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x811A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DUAL_INTENSITY16_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x811B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DUAL_LUMINANCE_ALPHA4_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x811C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DUAL_LUMINANCE_ALPHA8_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x811D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUAD_ALPHA4_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x811E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUAD_ALPHA8_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x811F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUAD_LUMINANCE4_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8120);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUAD_LUMINANCE8_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8121);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUAD_INTENSITY4_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8122);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUAD_INTENSITY8_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8123);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DUAL_TEXTURE_SELECT_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8124);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUAD_TEXTURE_SELECT_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8125);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SPRITE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8148);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SPRITE_MODE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8149);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SPRITE_AXIS_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x814A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SPRITE_TRANSLATION_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x814B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SPRITE_AXIAL_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x814C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SPRITE_OBJECT_ALIGNED_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x814D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SPRITE_EYE_ALIGNED_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x814E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_MULTI_BUFFER_HINT_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x812E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POINT_SIZE_MIN_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8126);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POINT_SIZE_MAX_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8127);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POINT_FADE_THRESHOLD_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8128);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DISTANCE_ATTENUATION_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8129);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POINT_SIZE_MIN_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8126);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POINT_SIZE_MAX_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8127);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POINT_FADE_THRESHOLD_SIZE_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8128);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DISTANCE_ATTENUATION_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8129);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INSTRUMENT_BUFFER_POINTER_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8180);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INSTRUMENT_MEASUREMENTS_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8181);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_TEXTURE_FILTER_BIAS_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8179);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_TEXTURE_FILTER_SCALE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x817A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x817B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x817C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEZOOM_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x818B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEZOOM_FACTOR_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x818C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_FRAMEZOOM_FACTOR_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x818D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_DEFORMATION_BIT_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000001);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GEOMETRY_DEFORMATION_BIT_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000002);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GEOMETRY_DEFORMATION_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8194);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_DEFORMATION_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8195);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEFORMATIONS_MASK_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8196);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_DEFORMATION_ORDER_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8197);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REFERENCE_PLANE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x817D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REFERENCE_PLANE_EQUATION_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x817E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_COMPONENT16_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81A5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_COMPONENT24_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81A6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_COMPONENT32_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81A7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_FUNC_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x812A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_FUNC_POINTS_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x812B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_FOG_FUNC_POINTS_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x812C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_OFFSET_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8198);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_OFFSET_VALUE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8199);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_SCALE_X_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8155);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_SCALE_Y_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8156);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_TRANSLATE_X_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8157);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_TRANSLATE_Y_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8158);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_ROTATE_ANGLE_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8159);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_ROTATE_ORIGIN_X_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x815A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_ROTATE_ORIGIN_Y_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x815B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_MAG_FILTER_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x815C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_MIN_FILTER_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x815D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_CUBIC_WEIGHT_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x815E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CUBIC_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x815F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_AVERAGE_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8160);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_TRANSFORM_2D_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8161);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8162);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8163);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IGNORE_BORDER_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8150);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONSTANT_BORDER_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8151);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REPLICATE_BORDER_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8153);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONVOLUTION_BORDER_COLOR_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8154);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_ENV_BIAS_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80BE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_DATA_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A22A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_CONSISTENT_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A22B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATERIAL_SIDE_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A22C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A22D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR3_BIT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00010000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR4_BIT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00020000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EDGEFLAG_BIT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00040000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INDEX_BIT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00080000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAT_AMBIENT_BIT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00100000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00200000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAT_DIFFUSE_BIT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00400000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAT_EMISSION_BIT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00800000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAT_COLOR_INDEXES_BIT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x01000000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAT_SHININESS_BIT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x02000000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAT_SPECULAR_BIT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x04000000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NORMAL_BIT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x08000000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXCOORD1_BIT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x10000000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXCOORD2_BIT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x20000000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXCOORD3_BIT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x40000000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXCOORD4_BIT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80000000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX23_BIT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000004);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX4_BIT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000008);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PREFER_DOUBLEBUFFER_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A1F8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONSERVE_MEMORY_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A1FD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RECLAIM_MEMORY_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A1FE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NATIVE_GRAPHICS_HANDLE_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A202);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A203);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NATIVE_GRAPHICS_END_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A204);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALWAYS_FAST_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A20C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALWAYS_SOFT_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A20D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALLOW_DRAW_OBJ_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A20E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALLOW_DRAW_WIN_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A20F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALLOW_DRAW_FRG_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A210);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALLOW_DRAW_MEM_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A211);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STRICT_DEPTHFUNC_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A216);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STRICT_LIGHTING_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A217);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STRICT_SCISSOR_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A218);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FULL_STIPPLE_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A219);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLIP_NEAR_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A220);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLIP_FAR_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A221);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_WIDE_LINE_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A222);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BACK_NORMALS_HINT_PGI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x1A223);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_INDEX1_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80E2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_INDEX2_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80E3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_INDEX4_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80E4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_INDEX8_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80E5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_INDEX12_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80E6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_INDEX16_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80E7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_INDEX_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80ED);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLIP_VOLUME_CLIPPING_HINT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80F0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LIST_PRIORITY_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8182);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IR_INSTRUMENT1_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x817F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CALLIGRAPHIC_FRAGMENT_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8183);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_LOD_BIAS_S_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x818E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_LOD_BIAS_T_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x818F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_LOD_BIAS_R_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8190);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SHADOW_AMBIENT_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80BF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INDEX_MATERIAL_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81B8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INDEX_MATERIAL_PARAMETER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81B9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INDEX_MATERIAL_FACE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81BA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INDEX_TEST_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81B5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INDEX_TEST_FUNC_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81B6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INDEX_TEST_REF_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81B7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IUI_V2F_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81AD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IUI_V3F_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81AE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IUI_N3F_V2F_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81AF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IUI_N3F_V3F_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81B0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_T2F_IUI_V2F_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81B1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_T2F_IUI_V3F_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81B2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_T2F_IUI_N3F_V2F_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81B3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_T2F_IUI_N3F_V3F_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81B4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARRAY_ELEMENT_LOCK_FIRST_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81A8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARRAY_ELEMENT_LOCK_COUNT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81A9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CULL_VERTEX_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81AA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CULL_VERTEX_EYE_POSITION_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81AB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CULL_VERTEX_OBJECT_POSITION_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81AC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_YCRCB_422_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81BB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_YCRCB_444_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81BC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_LIGHTING_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8400);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_COLOR_MATERIAL_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8401);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8402);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8403);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_FRAGMENT_LIGHTS_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8404);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_ACTIVE_LIGHTS_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8405);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_RASTER_NORMAL_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8406);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LIGHT_ENV_MODE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8407);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8408);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8409);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x840A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x840B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_LIGHT0_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x840C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_LIGHT1_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x840D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_LIGHT2_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x840E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_LIGHT3_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x840F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_LIGHT4_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8410);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_LIGHT5_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8411);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_LIGHT6_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8412);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_LIGHT7_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8413);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RASTER_POSITION_UNCLIPPED_IBM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x19262);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_LIGHTING_MODE_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8167);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_POST_SPECULAR_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8168);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_PRE_SPECULAR_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8169);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_ELEMENTS_VERTICES_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80E8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_ELEMENTS_INDICES_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80E9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PHONG_WIN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80EA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PHONG_HINT_WIN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80EB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_SPECULAR_TEXTURE_WIN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80EC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_MATERIAL_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8349);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_NORMAL_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x834A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_COLOR_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x834C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATTENUATION_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x834D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SHADOW_ATTENUATION_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x834E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_APPLICATION_MODE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x834F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_LIGHT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8350);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_MATERIAL_FACE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8351);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_MATERIAL_PARAMETER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8352);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA_MIN_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8320);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA_MAX_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8321);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_TEX_GEN_Q_CEILING_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8184);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_TEX_GEN_Q_ROUND_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8185);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8186);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8187);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8188);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8189);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x818A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BGR_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80E0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BGRA_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80E1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ASYNC_MARKER_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8329);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ASYNC_TEX_IMAGE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x835C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ASYNC_DRAW_PIXELS_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x835D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ASYNC_READ_PIXELS_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x835E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_ASYNC_TEX_IMAGE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x835F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_ASYNC_DRAW_PIXELS_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8360);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_ASYNC_READ_PIXELS_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8361);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ASYNC_HISTOGRAM_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x832C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_ASYNC_HISTOGRAM_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x832D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PARALLEL_ARRAYS_INTEL_get() {
  int jresult ;
  int result;
  
  result = (int)(0x83F4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL_get() {
  int jresult ;
  int result;
  
  result = (int)(0x83F5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL_get() {
  int jresult ;
  int result;
  
  result = (int)(0x83F6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL_get() {
  int jresult ;
  int result;
  
  result = (int)(0x83F7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL_get() {
  int jresult ;
  int result;
  
  result = (int)(0x83F8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OCCLUSION_TEST_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8165);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OCCLUSION_TEST_RESULT_HP_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8166);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_TRANSFORM_2D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8330);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_MAG_FILTER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8331);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_MIN_FILTER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8332);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_CUBIC_WEIGHT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8333);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CUBIC_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8334);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_AVERAGE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8335);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8336);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8337);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_TRANSFORM_2D_MATRIX_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8338);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SHARED_TEXTURE_PALETTE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81FB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LIGHT_MODEL_COLOR_CONTROL_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81F8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SINGLE_COLOR_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81F9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SEPARATE_SPECULAR_COLOR_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81FA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_SUM_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8458);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_SECONDARY_COLOR_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8459);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SECONDARY_COLOR_ARRAY_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x845A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SECONDARY_COLOR_ARRAY_TYPE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x845B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x845C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SECONDARY_COLOR_ARRAY_POINTER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x845D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SECONDARY_COLOR_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x845E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PERTURB_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85AE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_NORMAL_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85AF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORDINATE_SOURCE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8450);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORDINATE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8451);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_DEPTH_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8452);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_FOG_COORDINATE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8453);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORDINATE_ARRAY_TYPE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8454);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORDINATE_ARRAY_STRIDE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8455);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORDINATE_ARRAY_POINTER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8456);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORDINATE_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8457);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SCREEN_COORDINATES_REND_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8490);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INVERTED_SCREEN_W_REND_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8491);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TANGENT_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8439);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BINORMAL_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x843A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_TANGENT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x843B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_BINORMAL_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x843C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TANGENT_ARRAY_TYPE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x843E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TANGENT_ARRAY_STRIDE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x843F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BINORMAL_ARRAY_TYPE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8440);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BINORMAL_ARRAY_STRIDE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8441);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TANGENT_ARRAY_POINTER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8442);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BINORMAL_ARRAY_POINTER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8443);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP1_TANGENT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8444);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP2_TANGENT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8445);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP1_BINORMAL_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8446);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP2_BINORMAL_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8447);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8570);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINE_RGB_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8571);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINE_ALPHA_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8572);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB_SCALE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8573);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ADD_SIGNED_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8574);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTERPOLATE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8575);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONSTANT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8576);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PRIMARY_COLOR_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8577);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PREVIOUS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8578);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SOURCE0_RGB_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8580);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SOURCE1_RGB_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8581);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SOURCE2_RGB_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8582);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SOURCE0_ALPHA_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8588);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SOURCE1_ALPHA_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8589);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SOURCE2_ALPHA_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x858A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OPERAND0_RGB_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8590);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OPERAND1_RGB_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8591);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OPERAND2_RGB_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8592);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OPERAND0_ALPHA_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8598);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OPERAND1_ALPHA_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8599);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OPERAND2_ALPHA_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x859A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85B0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_HINT_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85B1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_SCALE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81FC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_SCALE_VALUE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81FD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNPACK_CONSTANT_DATA_SUNX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81D5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CONSTANT_DATA_SUNX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81D6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GLOBAL_ALPHA_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81D9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GLOBAL_ALPHA_FACTOR_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81DA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RESTART_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0001);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REPLACE_MIDDLE_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0002);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REPLACE_OLDEST_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0003);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRIANGLE_LIST_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81D7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REPLACEMENT_CODE_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81D8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REPLACEMENT_CODE_ARRAY_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85C0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85C1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85C2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85C3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_R1UI_V3F_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85C4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_R1UI_C4UB_V3F_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85C5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_R1UI_C3F_V3F_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85C6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_R1UI_N3F_V3F_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85C7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_R1UI_C4F_N3F_V3F_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85C8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_R1UI_T2F_V3F_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85C9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_R1UI_T2F_N3F_V3F_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85CA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_R1UI_T2F_C4F_N3F_V3F_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85CB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BLEND_DST_RGB_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80C8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BLEND_SRC_RGB_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80C9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BLEND_DST_ALPHA_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80CA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BLEND_SRC_ALPHA_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80CB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RED_MIN_CLAMP_INGR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8560);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GREEN_MIN_CLAMP_INGR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8561);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BLUE_MIN_CLAMP_INGR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8562);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA_MIN_CLAMP_INGR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8563);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RED_MAX_CLAMP_INGR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8564);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GREEN_MAX_CLAMP_INGR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8565);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BLUE_MAX_CLAMP_INGR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8566);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA_MAX_CLAMP_INGR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8567);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTERLACE_READ_INGR_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8568);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INCR_WRAP_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8507);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DECR_WRAP_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8508);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_422_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80CC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_422_REV_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80CD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_422_AVERAGE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80CE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_422_REV_AVERAGE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80CF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NORMAL_MAP_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8511);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REFLECTION_MAP_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8512);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NORMAL_MAP_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8511);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REFLECTION_MAP_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8512);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8513);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BINDING_CUBE_MAP_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8514);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8515);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8516);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8517);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8518);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8519);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x851A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_TEXTURE_CUBE_MAP_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x851B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x851C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_WRAP_BORDER_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81D4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TEXTURE_LOD_BIAS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84FD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_FILTER_CONTROL_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8500);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_LOD_BIAS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8501);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_MAX_ANISOTROPY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84FE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84FF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW1_STACK_DEPTH_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8502);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW1_MATRIX_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8506);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_WEIGHTING_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8509);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW1_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x850A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_VERTEX_WEIGHT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x850B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_WEIGHT_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x850C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x850D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x850E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x850F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8510);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_SHININESS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8504);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_SPOT_EXPONENT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8505);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_RANGE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x851D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_RANGE_LENGTH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x851E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_RANGE_VALID_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x851F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8520);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_RANGE_POINTER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8521);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REGISTER_COMBINERS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8522);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VARIABLE_A_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8523);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VARIABLE_B_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8524);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VARIABLE_C_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8525);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VARIABLE_D_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8526);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VARIABLE_E_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8527);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VARIABLE_F_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8528);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VARIABLE_G_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8529);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONSTANT_COLOR0_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x852A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONSTANT_COLOR1_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x852B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PRIMARY_COLOR_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x852C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SECONDARY_COLOR_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x852D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SPARE0_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x852E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SPARE1_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x852F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DISCARD_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8530);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_E_TIMES_F_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8531);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SPARE0_PLUS_SECONDARY_COLOR_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8532);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_IDENTITY_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8536);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INVERT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8537);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXPAND_NORMAL_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8538);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXPAND_NEGATE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8539);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HALF_BIAS_NORMAL_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x853A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HALF_BIAS_NEGATE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x853B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SIGNED_IDENTITY_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x853C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SIGNED_NEGATE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x853D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SCALE_BY_TWO_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x853E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SCALE_BY_FOUR_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x853F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SCALE_BY_ONE_HALF_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8540);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BIAS_BY_NEGATIVE_ONE_HALF_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8541);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINER_INPUT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8542);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINER_MAPPING_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8543);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINER_COMPONENT_USAGE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8544);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINER_AB_DOT_PRODUCT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8545);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINER_CD_DOT_PRODUCT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8546);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINER_MUX_SUM_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8547);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINER_SCALE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8548);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINER_BIAS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8549);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINER_AB_OUTPUT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x854A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINER_CD_OUTPUT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x854B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINER_SUM_OUTPUT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x854C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GENERAL_COMBINERS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x854D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NUM_GENERAL_COMBINERS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x854E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_SUM_CLAMP_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x854F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINER0_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8550);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINER1_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8551);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINER2_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8552);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINER3_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8553);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINER4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8554);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINER5_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8555);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINER6_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8556);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINER7_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8557);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_DISTANCE_MODE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x855A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EYE_RADIAL_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x855B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EYE_PLANE_ABSOLUTE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x855C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EMBOSS_LIGHT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x855D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EMBOSS_CONSTANT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x855E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EMBOSS_MAP_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x855F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMBINE4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8503);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SOURCE3_RGB_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8583);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SOURCE3_ALPHA_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x858B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OPERAND3_RGB_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8593);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OPERAND3_ALPHA_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x859B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_RGB_S3TC_DXT1_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x83F0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_RGBA_S3TC_DXT1_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x83F1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_RGBA_S3TC_DXT3_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x83F2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_RGBA_S3TC_DXT5_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x83F3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CULL_VERTEX_IBM_get() {
  int jresult ;
  int result;
  
  result = (int)(103050);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_LIST_IBM_get() {
  int jresult ;
  int result;
  
  result = (int)(103070);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NORMAL_ARRAY_LIST_IBM_get() {
  int jresult ;
  int result;
  
  result = (int)(103071);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ARRAY_LIST_IBM_get() {
  int jresult ;
  int result;
  
  result = (int)(103072);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INDEX_ARRAY_LIST_IBM_get() {
  int jresult ;
  int result;
  
  result = (int)(103073);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COORD_ARRAY_LIST_IBM_get() {
  int jresult ;
  int result;
  
  result = (int)(103074);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EDGE_FLAG_ARRAY_LIST_IBM_get() {
  int jresult ;
  int result;
  
  result = (int)(103075);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORDINATE_ARRAY_LIST_IBM_get() {
  int jresult ;
  int result;
  
  result = (int)(103076);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SECONDARY_COLOR_ARRAY_LIST_IBM_get() {
  int jresult ;
  int result;
  
  result = (int)(103077);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_LIST_STRIDE_IBM_get() {
  int jresult ;
  int result;
  
  result = (int)(103080);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NORMAL_ARRAY_LIST_STRIDE_IBM_get() {
  int jresult ;
  int result;
  
  result = (int)(103081);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ARRAY_LIST_STRIDE_IBM_get() {
  int jresult ;
  int result;
  
  result = (int)(103082);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INDEX_ARRAY_LIST_STRIDE_IBM_get() {
  int jresult ;
  int result;
  
  result = (int)(103083);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM_get() {
  int jresult ;
  int result;
  
  result = (int)(103084);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM_get() {
  int jresult ;
  int result;
  
  result = (int)(103085);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM_get() {
  int jresult ;
  int result;
  
  result = (int)(103086);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM_get() {
  int jresult ;
  int result;
  
  result = (int)(103087);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PACK_SUBSAMPLE_RATE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85A0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNPACK_SUBSAMPLE_RATE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85A1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_SUBSAMPLE_4444_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85A2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_SUBSAMPLE_2424_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85A3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_SUBSAMPLE_4242_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85A4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_YCRCB_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8318);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_YCRCBA_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8319);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_PASS_INSTRUMENT_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8310);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8311);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8312);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_RGB_FXT1_3DFX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86B0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_RGBA_FXT1_3DFX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86B1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MULTISAMPLE_3DFX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86B2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_BUFFERS_3DFX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86B3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLES_3DFX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86B4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MULTISAMPLE_BIT_3DFX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x20000000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MULTISAMPLE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x809D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_ALPHA_TO_MASK_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x809E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_ALPHA_TO_ONE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x809F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_MASK_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_1PASS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_2PASS_0_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_2PASS_1_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_4PASS_0_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_4PASS_1_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_4PASS_2_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_4PASS_3_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_BUFFERS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLES_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_MASK_VALUE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80AA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_MASK_INVERT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80AB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_PATTERN_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80AC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MULTISAMPLE_BIT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x20000000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_PRECLIP_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x83EE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_PRECLIP_HINT_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x83EF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONVOLUTION_HINT_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8316);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PACK_RESAMPLE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x842C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNPACK_RESAMPLE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x842D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RESAMPLE_REPLICATE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x842E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RESAMPLE_ZERO_FILL_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x842F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RESAMPLE_DECIMATE_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8430);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EYE_DISTANCE_TO_POINT_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81F0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OBJECT_DISTANCE_TO_POINT_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81F1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EYE_DISTANCE_TO_LINE_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81F2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OBJECT_DISTANCE_TO_LINE_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81F3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EYE_POINT_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81F4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OBJECT_POINT_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81F5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EYE_LINE_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81F6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OBJECT_LINE_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81F7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COLOR_WRITEMASK_SGIS_get() {
  int jresult ;
  int result;
  
  result = (int)(0x81EF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOT3_RGB_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8740);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOT3_RGBA_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8741);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MIRROR_CLAMP_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8742);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MIRROR_CLAMP_TO_EDGE_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8743);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALL_COMPLETED_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84F2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FENCE_STATUS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84F3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FENCE_CONDITION_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84F4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MIRRORED_REPEAT_IBM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8370);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EVAL_2D_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86C0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EVAL_TRIANGULAR_2D_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86C1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP_TESSELLATION_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86C2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP_ATTRIB_U_ORDER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86C3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP_ATTRIB_V_ORDER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86C4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EVAL_FRACTIONAL_TESSELLATION_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86C5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EVAL_VERTEX_ATTRIB0_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86C6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EVAL_VERTEX_ATTRIB1_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86C7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EVAL_VERTEX_ATTRIB2_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86C8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EVAL_VERTEX_ATTRIB3_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86C9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EVAL_VERTEX_ATTRIB4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86CA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EVAL_VERTEX_ATTRIB5_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86CB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EVAL_VERTEX_ATTRIB6_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86CC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EVAL_VERTEX_ATTRIB7_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86CD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EVAL_VERTEX_ATTRIB8_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86CE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EVAL_VERTEX_ATTRIB9_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86CF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EVAL_VERTEX_ATTRIB10_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86D0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EVAL_VERTEX_ATTRIB11_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86D1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EVAL_VERTEX_ATTRIB12_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86D2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EVAL_VERTEX_ATTRIB13_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86D3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EVAL_VERTEX_ATTRIB14_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86D4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EVAL_VERTEX_ATTRIB15_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86D5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_MAP_TESSELLATION_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86D6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_RATIONAL_EVAL_ORDER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86D7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_STENCIL_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84F9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_24_8_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84FA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PER_STAGE_CONSTANTS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8535);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_RECTANGLE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84F5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BINDING_RECTANGLE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84F6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_TEXTURE_RECTANGLE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84F7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_RECTANGLE_TEXTURE_SIZE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84F8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OFFSET_TEXTURE_RECTANGLE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x864C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x864D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x864E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86D9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_S8_S8_8_8_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86DA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_8_8_S8_S8_REV_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86DB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DSDT_MAG_INTENSITY_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86DC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SHADER_CONSISTENT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86DD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_SHADER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86DE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SHADER_OPERATION_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86DF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CULL_MODES_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86E0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OFFSET_TEXTURE_MATRIX_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86E1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OFFSET_TEXTURE_SCALE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86E2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OFFSET_TEXTURE_BIAS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86E3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OFFSET_TEXTURE_2D_MATRIX_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86E1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OFFSET_TEXTURE_2D_SCALE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86E2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OFFSET_TEXTURE_2D_BIAS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86E3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PREVIOUS_TEXTURE_INPUT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86E4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONST_EYE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86E5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PASS_THROUGH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86E6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CULL_FRAGMENT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86E7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OFFSET_TEXTURE_2D_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86E8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPENDENT_AR_TEXTURE_2D_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86E9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPENDENT_GB_TEXTURE_2D_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86EA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOT_PRODUCT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86EC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOT_PRODUCT_DEPTH_REPLACE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86ED);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOT_PRODUCT_TEXTURE_2D_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86EE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86F0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86F1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86F2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86F3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HILO_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86F4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DSDT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86F5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DSDT_MAG_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86F6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DSDT_MAG_VIB_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86F7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HILO16_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86F8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SIGNED_HILO_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86F9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SIGNED_HILO16_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86FA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SIGNED_RGBA_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86FB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SIGNED_RGBA8_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86FC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SIGNED_RGB_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86FE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SIGNED_RGB8_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86FF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SIGNED_LUMINANCE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8701);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SIGNED_LUMINANCE8_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8702);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SIGNED_LUMINANCE_ALPHA_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8703);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SIGNED_LUMINANCE8_ALPHA8_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8704);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SIGNED_ALPHA_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8705);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SIGNED_ALPHA8_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8706);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SIGNED_INTENSITY_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8707);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SIGNED_INTENSITY8_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8708);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DSDT8_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8709);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DSDT8_MAG8_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x870A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DSDT8_MAG8_INTENSITY8_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x870B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SIGNED_RGB_UNSIGNED_ALPHA_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x870C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x870D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HI_SCALE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x870E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LO_SCALE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x870F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DS_SCALE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8710);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DT_SCALE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8711);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAGNITUDE_SCALE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8712);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VIBRANCE_SCALE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8713);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HI_BIAS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8714);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LO_BIAS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8715);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DS_BIAS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8716);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DT_BIAS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8717);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAGNITUDE_BIAS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8718);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VIBRANCE_BIAS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8719);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BORDER_VALUES_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x871A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_HI_SIZE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x871B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_LO_SIZE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x871C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_DS_SIZE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x871D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_DT_SIZE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x871E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_MAG_SIZE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x871F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOT_PRODUCT_TEXTURE_3D_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86EF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8533);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_PROGRAM_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8620);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_STATE_PROGRAM_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8621);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATTRIB_ARRAY_SIZE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8623);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATTRIB_ARRAY_STRIDE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8624);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATTRIB_ARRAY_TYPE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8625);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_ATTRIB_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8626);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_LENGTH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8627);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_STRING_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8628);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODELVIEW_PROJECTION_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8629);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IDENTITY_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x862A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INVERSE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x862B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSPOSE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x862C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INVERSE_TRANSPOSE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x862D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x862E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TRACK_MATRICES_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x862F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX0_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8630);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX1_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8631);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX2_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8632);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX3_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8633);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8634);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX5_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8635);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX6_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8636);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX7_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8637);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_MATRIX_STACK_DEPTH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8640);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_MATRIX_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8641);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_PROGRAM_POINT_SIZE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8642);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_PROGRAM_TWO_SIDE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8643);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_PARAMETER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8644);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATTRIB_ARRAY_POINTER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8645);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_TARGET_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8646);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_RESIDENT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8647);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRACK_MATRIX_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8648);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRACK_MATRIX_TRANSFORM_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8649);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_PROGRAM_BINDING_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x864A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_ERROR_POSITION_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x864B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY0_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8650);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY1_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8651);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY2_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8652);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY3_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8653);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8654);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY5_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8655);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY6_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8656);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY7_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8657);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY8_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8658);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY9_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8659);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY10_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x865A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY11_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x865B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY12_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x865C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY13_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x865D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY14_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x865E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY15_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x865F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP1_VERTEX_ATTRIB0_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8660);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP1_VERTEX_ATTRIB1_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8661);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP1_VERTEX_ATTRIB2_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8662);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP1_VERTEX_ATTRIB3_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8663);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP1_VERTEX_ATTRIB4_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8664);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP1_VERTEX_ATTRIB5_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8665);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP1_VERTEX_ATTRIB6_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8666);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP1_VERTEX_ATTRIB7_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8667);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP1_VERTEX_ATTRIB8_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8668);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP1_VERTEX_ATTRIB9_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8669);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP1_VERTEX_ATTRIB10_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x866A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP1_VERTEX_ATTRIB11_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x866B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP1_VERTEX_ATTRIB12_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x866C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP1_VERTEX_ATTRIB13_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x866D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP1_VERTEX_ATTRIB14_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x866E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP1_VERTEX_ATTRIB15_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x866F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP2_VERTEX_ATTRIB0_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8670);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP2_VERTEX_ATTRIB1_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8671);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP2_VERTEX_ATTRIB2_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8672);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP2_VERTEX_ATTRIB3_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8673);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP2_VERTEX_ATTRIB4_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8674);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP2_VERTEX_ATTRIB5_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8675);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP2_VERTEX_ATTRIB6_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8676);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP2_VERTEX_ATTRIB7_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8677);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP2_VERTEX_ATTRIB8_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8678);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP2_VERTEX_ATTRIB9_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8679);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP2_VERTEX_ATTRIB10_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x867A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP2_VERTEX_ATTRIB11_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x867B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP2_VERTEX_ATTRIB12_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x867C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP2_VERTEX_ATTRIB13_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x867D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP2_VERTEX_ATTRIB14_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x867E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAP2_VERTEX_ATTRIB15_4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x867F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_MAX_CLAMP_S_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8369);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_MAX_CLAMP_T_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x836A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_MAX_CLAMP_R_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x836B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SCALEBIAS_HINT_SGIX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8322);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTERLACE_OML_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8980);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTERLACE_READ_OML_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8981);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FORMAT_SUBSAMPLE_24_24_OML_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8982);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FORMAT_SUBSAMPLE_244_244_OML_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8983);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PACK_RESAMPLE_OML_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8984);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNPACK_RESAMPLE_OML_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8985);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RESAMPLE_REPLICATE_OML_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8986);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RESAMPLE_ZERO_FILL_OML_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8987);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RESAMPLE_AVERAGE_OML_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8988);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RESAMPLE_DECIMATE_OML_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8989);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_STENCIL_TO_RGBA_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x886E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_STENCIL_TO_BGRA_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x886F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUMP_ROT_MATRIX_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8775);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUMP_ROT_MATRIX_SIZE_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8776);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUMP_NUM_TEX_UNITS_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8777);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUMP_TEX_UNITS_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8778);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DUDV_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8779);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DU8DV8_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x877A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUMP_ENVMAP_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x877B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUMP_TARGET_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x877C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_SHADER_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8920);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_0_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8921);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_1_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8922);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_2_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8923);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_3_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8924);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_4_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8925);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_5_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8926);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_6_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8927);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_7_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8928);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_8_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8929);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_9_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x892A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_10_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x892B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_11_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x892C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_12_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x892D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_13_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x892E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_14_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x892F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_15_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8930);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_16_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8931);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_17_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8932);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_18_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8933);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_19_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8934);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_20_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8935);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_21_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8936);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_22_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8937);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_23_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8938);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_24_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8939);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_25_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x893A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_26_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x893B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_27_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x893C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_28_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x893D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_29_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x893E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_30_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x893F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REG_31_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8940);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_0_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8941);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_1_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8942);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_2_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8943);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_3_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8944);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_4_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8945);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_5_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8946);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_6_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8947);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_7_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8948);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_8_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8949);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_9_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x894A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_10_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x894B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_11_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x894C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_12_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x894D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_13_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x894E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_14_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x894F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_15_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8950);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_16_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8951);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_17_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8952);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_18_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8953);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_19_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8954);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_20_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8955);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_21_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8956);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_22_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8957);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_23_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8958);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_24_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8959);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_25_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x895A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_26_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x895B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_27_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x895C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_28_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x895D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_29_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x895E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_30_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x895F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CON_31_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8960);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MOV_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8961);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ADD_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8963);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MUL_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8964);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SUB_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8965);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOT3_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8966);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOT4_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8967);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAD_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8968);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LERP_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8969);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CND_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x896A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CND0_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x896B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOT2_ADD_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x896C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SECONDARY_INTERPOLATOR_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x896D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NUM_FRAGMENT_REGISTERS_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x896E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NUM_FRAGMENT_CONSTANTS_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x896F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NUM_PASSES_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8970);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NUM_INSTRUCTIONS_PER_PASS_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8971);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NUM_INSTRUCTIONS_TOTAL_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8972);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8973);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NUM_LOOPBACK_COMPONENTS_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8974);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ALPHA_PAIRING_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8975);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SWIZZLE_STR_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8976);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SWIZZLE_STQ_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8977);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SWIZZLE_STR_DR_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8978);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SWIZZLE_STQ_DQ_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8979);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SWIZZLE_STRQ_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x897A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SWIZZLE_STRQ_DQ_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x897B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RED_BIT_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000001);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GREEN_BIT_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000002);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BLUE_BIT_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000004);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_2X_BIT_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000001);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_4X_BIT_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000002);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_8X_BIT_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000004);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HALF_BIT_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000008);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUARTER_BIT_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000010);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EIGHTH_BIT_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000020);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SATURATE_BIT_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000040);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMP_BIT_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000002);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NEGATE_BIT_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000004);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BIAS_BIT_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000008);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PN_TRIANGLES_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87F0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87F1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PN_TRIANGLES_POINT_MODE_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87F2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PN_TRIANGLES_NORMAL_MODE_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87F3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87F4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87F5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87F6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87F7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87F8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STATIC_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8760);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DYNAMIC_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8761);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PRESERVE_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8762);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DISCARD_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8763);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OBJECT_BUFFER_SIZE_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8764);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OBJECT_BUFFER_USAGE_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8765);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARRAY_OBJECT_BUFFER_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8766);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARRAY_OBJECT_OFFSET_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8767);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_SHADER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8780);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_SHADER_BINDING_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8781);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_INDEX_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8782);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_NEGATE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8783);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_DOT3_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8784);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_DOT4_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8785);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_MUL_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8786);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_ADD_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8787);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_MADD_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8788);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_FRAC_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8789);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_MAX_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x878A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_MIN_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x878B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_SET_GE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x878C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_SET_LT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x878D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_CLAMP_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x878E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_FLOOR_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x878F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_ROUND_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8790);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_EXP_BASE_2_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8791);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_LOG_BASE_2_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8792);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_POWER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8793);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_RECIP_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8794);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_RECIP_SQRT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8795);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_SUB_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8796);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_CROSS_PRODUCT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8797);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_MULTIPLY_MATRIX_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8798);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OP_MOV_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8799);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_VERTEX_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x879A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_COLOR0_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x879B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_COLOR1_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x879C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD0_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x879D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD1_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x879E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD2_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x879F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD3_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87A0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD4_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87A1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD5_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87A2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD6_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87A3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD7_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87A4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD8_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87A5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD9_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87A6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD10_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87A7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD11_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87A8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD12_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87A9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD13_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87AA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD14_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87AB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD15_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87AC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD16_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87AD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD17_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87AE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD18_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87AF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD19_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87B0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD20_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87B1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD21_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87B2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD22_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87B3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD23_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87B4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD24_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87B5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD25_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87B6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD26_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87B7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD27_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87B8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD28_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87B9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD29_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87BA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD30_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87BB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_TEXTURE_COORD31_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87BC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OUTPUT_FOG_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87BD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SCALAR_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87BE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VECTOR_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87BF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MATRIX_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87C0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VARIANT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87C1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INVARIANT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87C2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LOCAL_CONSTANT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87C3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LOCAL_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87C4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87C5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_SHADER_VARIANTS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87C6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_SHADER_INVARIANTS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87C7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87C8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_SHADER_LOCALS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87C9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87CA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87CB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87CC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87CD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87CE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_SHADER_INSTRUCTIONS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87CF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_SHADER_VARIANTS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87D0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_SHADER_INVARIANTS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87D1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87D2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_SHADER_LOCALS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87D3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_SHADER_OPTIMIZED_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87D4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_X_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87D5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_Y_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87D6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_Z_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87D7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_W_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87D8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NEGATIVE_X_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87D9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NEGATIVE_Y_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87DA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NEGATIVE_Z_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87DB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NEGATIVE_W_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87DC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ZERO_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87DD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ONE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87DE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NEGATIVE_ONE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87DF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NORMALIZED_RANGE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87E0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FULL_RANGE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87E1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_VERTEX_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87E2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MVP_MATRIX_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87E3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VARIANT_VALUE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87E4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VARIANT_DATATYPE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87E5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VARIANT_ARRAY_STRIDE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87E6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VARIANT_ARRAY_TYPE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87E7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VARIANT_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87E8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VARIANT_ARRAY_POINTER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87E9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INVARIANT_VALUE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87EA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INVARIANT_DATATYPE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87EB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LOCAL_CONSTANT_VALUE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87EC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LOCAL_CONSTANT_DATATYPE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87ED);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_STREAMS_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x876B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_STREAM0_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x876C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_STREAM1_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x876D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_STREAM2_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x876E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_STREAM3_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x876F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_STREAM4_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8770);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_STREAM5_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8771);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_STREAM6_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8772);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_STREAM7_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8773);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_SOURCE_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8774);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ELEMENT_ARRAY_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8768);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ELEMENT_ARRAY_TYPE_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8769);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ELEMENT_ARRAY_POINTER_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x876A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUAD_MESH_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8614);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRIANGLE_MESH_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8615);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SLICE_ACCUM_SUN_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85CC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MULTISAMPLE_FILTER_HINT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8534);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_CLAMP_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x864F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_COUNTER_BITS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8864);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_OCCLUSION_QUERY_ID_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8865);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_COUNT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8866);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_COUNT_AVAILABLE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8867);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POINT_SPRITE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8861);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COORD_REPLACE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8862);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_POINT_SPRITE_R_MODE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8863);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8850);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8851);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8852);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8853);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OFFSET_HILO_TEXTURE_2D_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8854);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8855);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8856);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8857);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPENDENT_HILO_TEXTURE_2D_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8858);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPENDENT_RGB_TEXTURE_3D_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8859);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x885A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOT_PRODUCT_PASS_THROUGH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x885B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOT_PRODUCT_TEXTURE_1D_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x885C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x885D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HILO8_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x885E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SIGNED_HILO8_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x885F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FORCE_BLUE_TO_ONE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8860);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_TEST_TWO_SIDE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8910);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ACTIVE_STENCIL_FACE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8911);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXT_FRAGMENT_SHADER_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8200);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNPACK_CLIENT_STORAGE_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85B2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ELEMENT_ARRAY_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A0C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ELEMENT_ARRAY_TYPE_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A0D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ELEMENT_ARRAY_POINTER_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A0E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_PIXELS_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A0A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FENCE_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A0B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_BINDING_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85B5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_RANGE_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x851D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x851E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_STORAGE_HINT_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x851F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_RANGE_POINTER_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8521);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STORAGE_CLIENT_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85B4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STORAGE_CACHED_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85BE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STORAGE_SHARED_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85BF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_YCBCR_422_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85B9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_SHORT_8_8_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85BA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_SHORT_8_8_REV_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85BB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB_S3TC_get() {
  int jresult ;
  int result;
  
  result = (int)(0x83A0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB4_S3TC_get() {
  int jresult ;
  int result;
  
  result = (int)(0x83A1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA_S3TC_get() {
  int jresult ;
  int result;
  
  result = (int)(0x83A2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA4_S3TC_get() {
  int jresult ;
  int result;
  
  result = (int)(0x83A3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_DRAW_BUFFERS_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8824);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER0_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8825);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER1_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8826);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER2_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8827);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER3_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8828);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER4_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8829);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER5_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x882A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER6_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x882B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER7_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x882C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER8_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x882D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER9_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x882E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER10_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x882F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER11_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8830);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER12_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8831);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER13_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8832);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER14_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8833);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_BUFFER15_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8834);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TYPE_RGBA_FLOAT_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8820);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8835);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODULATE_ADD_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8744);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODULATE_SIGNED_ADD_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8745);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MODULATE_SUBTRACT_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8746);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA_FLOAT32_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8814);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB_FLOAT32_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8815);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA_FLOAT32_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8816);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTENSITY_FLOAT32_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8817);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE_FLOAT32_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8818);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE_ALPHA_FLOAT32_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8819);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA_FLOAT16_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x881A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB_FLOAT16_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x881B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA_FLOAT16_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x881C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTENSITY_FLOAT16_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x881D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE_FLOAT16_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x881E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE_ALPHA_FLOAT16_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x881F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_R_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8880);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_RG_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8881);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_RGB_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8882);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_RGBA_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8883);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_R16_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8884);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_R32_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8885);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_RG16_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8886);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_RG32_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8887);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_RGB16_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8888);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_RGB32_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8889);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_RGBA16_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x888A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_RGBA32_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x888B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_FLOAT_COMPONENTS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x888C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_CLEAR_COLOR_VALUE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x888D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_RGBA_MODE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x888E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8868);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_PROGRAM_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8870);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TEXTURE_COORDS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8871);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TEXTURE_IMAGE_UNITS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8872);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_PROGRAM_BINDING_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8873);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_ERROR_STRING_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8874);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HALF_FLOAT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x140B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_WRITE_PIXEL_DATA_RANGE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8878);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_READ_PIXEL_DATA_RANGE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8879);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x887A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_READ_PIXEL_DATA_RANGE_LENGTH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x887B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x887C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_READ_PIXEL_DATA_RANGE_POINTER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x887D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PRIMITIVE_RESTART_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8558);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PRIMITIVE_RESTART_INDEX_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8559);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_UNSIGNED_REMAP_MODE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x888F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_BACK_FUNC_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8800);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_BACK_FAIL_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8801);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8802);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8803);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMPLEMENTATION_COLOR_READ_TYPE_OES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B9A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B9B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_BOUNDS_TEST_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8890);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_BOUNDS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8891);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MIRROR_CLAMP_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8742);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MIRROR_CLAMP_TO_EDGE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8743);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MIRROR_CLAMP_TO_BORDER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8912);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BLEND_EQUATION_RGB_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8009);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BLEND_EQUATION_ALPHA_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x883D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PACK_INVERT_MESA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8758);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_SHORT_8_8_MESA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85BA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_SHORT_8_8_REV_MESA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85BB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_YCBCR_MESA_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8757);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_PACK_BUFFER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88EB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_UNPACK_BUFFER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88EC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_PACK_BUFFER_BINDING_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88ED);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_UNPACK_BUFFER_BINDING_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88EF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88F4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_CALL_DEPTH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88F5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_IF_DEPTH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88F6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_LOOP_DEPTH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88F7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_LOOP_COUNT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88F8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INVALID_FRAMEBUFFER_OPERATION_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x0506);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_RENDERBUFFER_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84E8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_BINDING_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CA6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_BINDING_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CA7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CD0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CD1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CD2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CD3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CD4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_COMPLETE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CD5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CD6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CD7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CD9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CDA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CDB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CDC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_UNSUPPORTED_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CDD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_COLOR_ATTACHMENTS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CDF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT0_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CE0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT1_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CE1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT2_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CE2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT3_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CE3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT4_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CE4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT5_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CE5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT6_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CE6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT7_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CE7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT8_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CE8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT9_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CE9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT10_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CEA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT11_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CEB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT12_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CEC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT13_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CED);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT14_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CEE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ATTACHMENT15_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CEF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_ATTACHMENT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D00);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_ATTACHMENT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D20);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D40);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D41);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_WIDTH_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D42);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_HEIGHT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D43);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_INTERNAL_FORMAT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D44);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_INDEX1_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D46);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_INDEX4_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D47);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_INDEX8_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D48);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_INDEX16_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D49);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_RED_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D50);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_GREEN_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D51);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_BLUE_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D52);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_ALPHA_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D53);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_DEPTH_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D54);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_STENCIL_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D55);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_STENCIL_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84F9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_24_8_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x84FA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH24_STENCIL8_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88F0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_STENCIL_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88F1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_TAG_BITS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88F2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STENCIL_CLEAR_TAG_VALUE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88F3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SRGB_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C40);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SRGB8_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C41);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SRGB_ALPHA_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C42);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SRGB8_ALPHA8_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C43);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SLUMINANCE_ALPHA_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C44);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SLUMINANCE8_ALPHA8_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C45);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SLUMINANCE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C46);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SLUMINANCE8_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C47);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_SRGB_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C48);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_SRGB_ALPHA_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C49);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_SLUMINANCE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C4A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_SLUMINANCE_ALPHA_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C4B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_SRGB_S3TC_DXT1_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C4C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C4D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C4E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C4F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_READ_FRAMEBUFFER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CA8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_FRAMEBUFFER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CA9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_FRAMEBUFFER_BINDING_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CA6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_READ_FRAMEBUFFER_BINDING_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CAA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_SAMPLES_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CAB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D56);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_SAMPLES_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D57);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_1D_STACK_MESAX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8759);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_2D_STACK_MESAX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x875A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_TEXTURE_1D_STACK_MESAX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x875B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_TEXTURE_2D_STACK_MESAX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x875C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_1D_STACK_BINDING_MESAX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x875D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_2D_STACK_BINDING_MESAX_get() {
  int jresult ;
  int result;
  
  result = (int)(0x875E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TIME_ELAPSED_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88BF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUFFER_SERIALIZED_MODIFY_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A12);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUFFER_FLUSHING_UNMAP_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A13);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MIN_PROGRAM_TEXEL_OFFSET_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8904);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_TEXEL_OFFSET_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8905);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_ATTRIB_COMPONENTS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8906);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_RESULT_COMPONENTS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8907);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8908);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_RESULT_COMPONENTS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8909);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DA5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_GENERIC_RESULTS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DA6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LINES_ADJACENCY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x000A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LINE_STRIP_ADJACENCY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x000B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRIANGLES_ADJACENCY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x000C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRIANGLE_STRIP_ADJACENCY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x000D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GEOMETRY_PROGRAM_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C26);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_OUTPUT_VERTICES_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C27);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C28);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GEOMETRY_VERTICES_OUT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DDA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GEOMETRY_INPUT_TYPE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DDB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GEOMETRY_OUTPUT_TYPE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DDC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C29);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DA7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DA8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DA9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CD4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_POINT_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8642);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GEOMETRY_SHADER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DD9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DDD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_VARYING_COMPONENTS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DDE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VARYING_COMPONENTS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B4B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DDF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DE0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DE1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88FD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_1D_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DC0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_2D_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DC1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_BUFFER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DC2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_1D_ARRAY_SHADOW_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DC3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_2D_ARRAY_SHADOW_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DC4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_CUBE_SHADOW_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DC5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_VEC2_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DC6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_VEC3_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DC7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_VEC4_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DC8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_SAMPLER_1D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DC9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_SAMPLER_2D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DCA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_SAMPLER_3D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DCB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_SAMPLER_CUBE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DCC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_SAMPLER_2D_RECT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DCD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_SAMPLER_1D_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DCE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_SAMPLER_2D_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DCF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_SAMPLER_BUFFER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DD0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_SAMPLER_1D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DD1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_SAMPLER_2D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DD2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_SAMPLER_3D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DD3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_SAMPLER_CUBE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DD4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DD5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DD6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DD7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DD8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_R11F_G11F_B10F_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C3A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_10F_11F_11F_REV_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C3B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA_SIGNED_COMPONENTS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C3C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_1D_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C18);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_TEXTURE_1D_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C19);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_2D_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C1A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROXY_TEXTURE_2D_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C1B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BINDING_1D_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C1C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BINDING_2D_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C1D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_ARRAY_TEXTURE_LAYERS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88FF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x884E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BUFFER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C2A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TEXTURE_BUFFER_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C2B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BINDING_BUFFER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C2C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C2D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BUFFER_FORMAT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C2E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_LUMINANCE_LATC1_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C70);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C71);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C72);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C73);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_RED_RGTC1_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DBB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_SIGNED_RED_RGTC1_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DBC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_RED_GREEN_RGTC2_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DBD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DBE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB9_E5_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C3D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_5_9_9_9_REV_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C3E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_SHARED_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C3F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_COMPONENT32F_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DAB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH32F_STENCIL8_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DAC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DAD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_BUFFER_FLOAT_MODE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DAF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_COVERAGE_SAMPLES_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8CAB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_COLOR_SAMPLES_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E10);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E11);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MULTISAMPLE_COVERAGE_MODES_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E12);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_SRGB_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DB9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_SRGB_CAPABLE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DBA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DA0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DA1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DA2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DA3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DA4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BACK_PRIMARY_COLOR_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C77);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BACK_SECONDARY_COLOR_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C78);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COORD_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C79);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CLIP_DISTANCE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C7A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ID_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C7B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PRIMITIVE_ID_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C7C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GENERIC_ATTRIB_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C7D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_ATTRIBS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C7E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C7F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C80);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ACTIVE_VARYINGS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C81);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ACTIVE_VARYING_MAX_LENGTH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C82);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_VARYINGS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C83);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BUFFER_START_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C84);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C85);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_RECORD_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C86);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PRIMITIVES_GENERATED_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C87);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C88);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RASTERIZER_DISCARD_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C89);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_ATTRIBS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C8A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C8B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTERLEAVED_ATTRIBS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C8C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SEPARATE_ATTRIBS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C8D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BUFFER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C8E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C8F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LAYER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DAA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NEXT_BUFFER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(-2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SKIP_COMPONENTS4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(-3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SKIP_COMPONENTS3_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(-4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SKIP_COMPONENTS2_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(-5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SKIP_COMPONENTS1_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(-6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DE2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DE3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DE4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_BINDABLE_UNIFORM_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DED);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_BUFFER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DEE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_BUFFER_BINDING_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8DEF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA32UI_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D70);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB32UI_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D71);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA32UI_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D72);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTENSITY32UI_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D73);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE32UI_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D74);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE_ALPHA32UI_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D75);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA16UI_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D76);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB16UI_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D77);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA16UI_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D78);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTENSITY16UI_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D79);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE16UI_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D7A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE_ALPHA16UI_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D7B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA8UI_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D7C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB8UI_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D7D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA8UI_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D7E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTENSITY8UI_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D7F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE8UI_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D80);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE_ALPHA8UI_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D81);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA32I_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D82);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB32I_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D83);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA32I_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D84);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTENSITY32I_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D85);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE32I_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D86);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE_ALPHA32I_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D87);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA16I_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D88);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB16I_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D89);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA16I_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D8A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTENSITY16I_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D8B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE16I_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D8C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE_ALPHA16I_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D8D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA8I_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D8E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB8I_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D8F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA8I_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D90);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTENSITY8I_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D91);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE8I_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D92);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE_ALPHA8I_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D93);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RED_INTEGER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D94);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GREEN_INTEGER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D95);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BLUE_INTEGER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D96);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA_INTEGER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D97);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB_INTEGER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D98);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA_INTEGER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D99);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BGR_INTEGER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D9A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BGRA_INTEGER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D9B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE_INTEGER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D9C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE_ALPHA_INTEGER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D9D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA_INTEGER_MODE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8D9E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUERY_WAIT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E13);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUERY_NO_WAIT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E14);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUERY_BY_REGION_WAIT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E15);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUERY_BY_REGION_NO_WAIT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E16);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAME_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E26);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FIELDS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E27);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CURRENT_TIME_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E28);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NUM_FILL_STREAMS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E29);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PRESENT_TIME_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E2A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PRESENT_DURATION_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E2B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BUFFER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C8E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C84);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C85);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C8F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTERLEAVED_ATTRIBS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C8C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SEPARATE_ATTRIBS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C8D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PRIMITIVES_GENERATED_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C87);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C88);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RASTERIZER_DISCARD_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C89);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C8A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C8B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C80);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_VARYINGS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C83);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C7F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C76);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_MATRIX_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E2D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSPOSE_PROGRAM_MATRIX_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E2E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROGRAM_MATRIX_STACK_DEPTH_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E2F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_SWIZZLE_R_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E42);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_SWIZZLE_G_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E43);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_SWIZZLE_B_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E44);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_SWIZZLE_A_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E45);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_SWIZZLE_RGBA_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E46);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_POSITION_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E50);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_MASK_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E51);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLE_MASK_VALUE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E52);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_BINDING_RENDERBUFFER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E53);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E54);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_RENDERBUFFER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E55);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_RENDERBUFFER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E56);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_SAMPLER_RENDERBUFFER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E57);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E58);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_SAMPLE_MASK_WORDS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E59);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E22);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E23);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E24);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BINDING_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E25);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VBO_FREE_MEMORY_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87FB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_FREE_MEMORY_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87FC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RENDERBUFFER_FREE_MEMORY_ATI_get() {
  int jresult ;
  int result;
  
  result = (int)(0x87FD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COUNTER_TYPE_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8BC0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COUNTER_RANGE_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8BC1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT64_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8BC2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PERCENTAGE_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8BC3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PERFMON_RESULT_AVAILABLE_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8BC4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PERFMON_RESULT_SIZE_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8BC5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PERFMON_RESULT_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8BC6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_BUFFER_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9001);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_SAMPLER_BUFFER_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9002);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9003);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TESSELLATION_MODE_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9004);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TESSELLATION_FACTOR_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9005);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DISCRETE_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9006);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_CONTINUOUS_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9007);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E4C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FIRST_VERTEX_CONVENTION_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E4D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LAST_VERTEX_CONVENTION_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E4E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PROVOKING_VERTEX_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E4F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9010);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9011);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE_ALPHA_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9012);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTENSITY_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9013);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA8_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9014);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE8_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9015);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE8_ALPHA8_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9016);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTENSITY8_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9017);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA16_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9018);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE16_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9019);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE16_ALPHA16_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x901A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTENSITY16_SNORM_get() {
  int jresult ;
  int result;
  
  result = (int)(0x901B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_RANGE_LENGTH_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85B7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_RANGE_POINTER_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85B8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_STORAGE_HINT_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85BC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_STORAGE_PRIVATE_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85BD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HALF_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x140B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA_FLOAT32_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8814);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB_FLOAT32_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8815);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA_FLOAT32_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8816);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTENSITY_FLOAT32_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8817);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE_FLOAT32_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8818);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE_ALPHA_FLOAT32_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8819);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGBA_FLOAT16_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x881A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB_FLOAT16_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x881B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALPHA_FLOAT16_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x881C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTENSITY_FLOAT16_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x881D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE_FLOAT16_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x881E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LUMINANCE_ALPHA_FLOAT16_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x881F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_FLOAT_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A0F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_MAP1_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A00);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_MAP2_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A01);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A02);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A03);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A04);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A05);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A06);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A07);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A08);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A09);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_AUX_DEPTH_STENCIL_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A14);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUFFER_OBJECT_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x85B3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RELEASED_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A19);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VOLATILE_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A1A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RETAINED_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A1B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNDEFINED_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A1C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PURGEABLE_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A1D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PACK_ROW_BYTES_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A15);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNPACK_ROW_BYTES_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A16);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_RGB_422_APPLE_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A1F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VIDEO_BUFFER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9020);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VIDEO_BUFFER_BINDING_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9021);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FIELD_UPPER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9022);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FIELD_LOWER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9023);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NUM_VIDEO_CAPTURE_STREAMS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9024);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9025);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9026);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_LAST_VIDEO_CAPTURE_STATUS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9027);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VIDEO_BUFFER_PITCH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9028);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VIDEO_COLOR_CONVERSION_MATRIX_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9029);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VIDEO_COLOR_CONVERSION_MAX_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x902A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VIDEO_COLOR_CONVERSION_MIN_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x902B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VIDEO_COLOR_CONVERSION_OFFSET_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x902C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x902D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PARTIAL_SUCCESS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x902E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SUCCESS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x902F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FAILURE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9030);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_YCBYCR8_422_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9031);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_YCBAYCR8A_4224_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9032);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9033);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9034);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9035);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9036);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_Z4Y12Z4CB12Z4CR12_444_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9037);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VIDEO_CAPTURE_FRAME_WIDTH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9038);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9039);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x903A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x903B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x903C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ACTIVE_PROGRAM_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8B8D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUFFER_GPU_ADDRESS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F1D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GPU_ADDRESS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F34);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_SHADER_BUFFER_ADDRESS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F35);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F1E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ELEMENT_ARRAY_UNIFIED_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F1F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F20);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_ADDRESS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F21);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NORMAL_ARRAY_ADDRESS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F22);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ARRAY_ADDRESS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F23);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INDEX_ARRAY_ADDRESS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F24);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COORD_ARRAY_ADDRESS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F25);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EDGE_FLAG_ARRAY_ADDRESS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F26);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F27);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORD_ARRAY_ADDRESS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F28);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ELEMENT_ARRAY_ADDRESS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F29);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F2A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_LENGTH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F2B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NORMAL_ARRAY_LENGTH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F2C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_ARRAY_LENGTH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F2D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INDEX_ARRAY_LENGTH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F2E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COORD_ARRAY_LENGTH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F2F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EDGE_FLAG_ARRAY_LENGTH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F30);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SECONDARY_COLOR_ARRAY_LENGTH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F31);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FOG_COORD_ARRAY_LENGTH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F32);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ELEMENT_ARRAY_LENGTH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F33);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_INDIRECT_UNIFIED_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F40);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_INDIRECT_ADDRESS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F41);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DRAW_INDIRECT_LENGTH_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F42);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_IMAGE_UNITS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F38);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F39);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_BINDING_NAME_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F3A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_BINDING_LEVEL_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F3B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_BINDING_LAYERED_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F3C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_BINDING_LAYER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F3D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_BINDING_ACCESS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F3E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_1D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x904C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_2D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x904D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_3D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x904E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_2D_RECT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x904F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_CUBE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9050);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_BUFFER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9051);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_1D_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9052);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_2D_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9053);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_CUBE_MAP_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9054);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_2D_MULTISAMPLE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9055);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9056);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_IMAGE_1D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9057);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_IMAGE_2D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9058);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_IMAGE_3D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9059);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_IMAGE_2D_RECT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x905A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_IMAGE_CUBE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x905B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_IMAGE_BUFFER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x905C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_IMAGE_1D_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x905D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_IMAGE_2D_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x905E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x905F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_IMAGE_2D_MULTISAMPLE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9060);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9061);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_IMAGE_1D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9062);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_IMAGE_2D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9063);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_IMAGE_3D_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9064);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9065);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_IMAGE_CUBE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9066);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_IMAGE_BUFFER_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9067);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9068);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9069);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x906A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x906B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x906C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_IMAGE_SAMPLES_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x906D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IMAGE_BINDING_FORMAT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x906E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000001);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ELEMENT_ARRAY_BARRIER_BIT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000002);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNIFORM_BARRIER_BIT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000004);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_FETCH_BARRIER_BIT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000008);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000020);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COMMAND_BARRIER_BIT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000040);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PIXEL_BUFFER_BARRIER_BIT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000080);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_UPDATE_BARRIER_BIT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000100);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_BUFFER_UPDATE_BARRIER_BIT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000200);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAMEBUFFER_BARRIER_BIT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000400);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000800);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATOMIC_COUNTER_BARRIER_BIT_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00001000);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ALL_BARRIER_BITS_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0xFFFFFFFF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_VEC2_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FFC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_VEC3_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FFD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_VEC4_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FFE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_MAT2_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F46);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_MAT3_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F47);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_MAT4_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F48);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_MAT2x3_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F49);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_MAT2x4_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F4A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_MAT3x2_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F4B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_MAT3x4_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F4C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_MAT4x2_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F4D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DOUBLE_MAT4x3_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F4E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E5A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E5B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E5C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E5D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E5E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E5F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F44);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_SUBROUTINE_NUM_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8F45);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT64_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x140E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT64_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x140F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT8_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FE0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT8_VEC2_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FE1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT8_VEC3_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FE2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT8_VEC4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FE3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT16_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FE4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT16_VEC2_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FE5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT16_VEC3_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FE6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT16_VEC4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FE7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT64_VEC2_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FE9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT64_VEC3_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FEA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INT64_VEC4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FEB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT8_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FEC);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT8_VEC2_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FED);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT8_VEC3_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FEE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT8_VEC4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FEF);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT16_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FF0);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT16_VEC2_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FF1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT16_VEC3_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FF2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT16_VEC4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FF3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT64_VEC2_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FF5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT64_VEC3_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FF6);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_UNSIGNED_INT64_VEC4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FF7);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT16_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FF8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT16_VEC2_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FF9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT16_VEC3_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FFA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FLOAT16_VEC4_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8FFB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x00000010);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_PROGRAM_PATCH_ATTRIBS_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86D8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TESS_CONTROL_PROGRAM_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x891E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TESS_EVALUATION_PROGRAM_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x891F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C74);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8C75);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COVERAGE_SAMPLES_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x80A9);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_COLOR_SAMPLES_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8E20);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DATA_BUFFER_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9151);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PERFORMANCE_MONITOR_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9152);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_QUERY_OBJECT_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9153);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERTEX_ARRAY_OBJECT_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9154);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SAMPLER_OBJECT_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9155);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MAX_DEBUG_LOGGED_MESSAGES_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9144);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_LOGGED_MESSAGES_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9145);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_SEVERITY_HIGH_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9146);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_SEVERITY_MEDIUM_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9147);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_SEVERITY_LOW_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9148);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_CATEGORY_API_ERROR_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9149);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x914A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_CATEGORY_DEPRECATION_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x914B);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x914C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_CATEGORY_PERFORMANCE_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x914D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x914E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_CATEGORY_APPLICATION_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x914F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEBUG_CATEGORY_OTHER_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9150);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SURFACE_STATE_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86EB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SURFACE_REGISTERED_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x86FD);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SURFACE_MAPPED_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8700);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_WRITE_DISCARD_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x88BE);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_CLAMP_NEAR_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x901E);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DEPTH_CLAMP_FAR_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x901F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_SRGB_DECODE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A48);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_DECODE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A49);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SKIP_DECODE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x8A4A);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COVERAGE_SAMPLES_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9045);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_TEXTURE_COLOR_SAMPLES_NV_get() {
  int jresult ;
  int result;
  
  result = (int)(0x9046);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FACTOR_MIN_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x901C);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_FACTOR_MAX_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x901D);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SUBSAMPLE_DISTANCE_AMD_get() {
  int jresult ;
  int result;
  
  result = (int)(0x883F);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SYNC_X11_FENCE_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x90E1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SCALED_RESOLVE_FASTEST_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x90BA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SCALED_RESOLVE_NICEST_EXT_get() {
  int jresult ;
  int result;
  
  result = (int)(0x90BB);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERSION_1_2_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERSION_1_2_DEPRECATED_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERSION_1_3_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERSION_1_3_DEPRECATED_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERSION_1_4_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERSION_1_4_DEPRECATED_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERSION_1_5_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERSION_2_0_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERSION_2_1_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERSION_3_0_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERSION_3_1_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERSION_3_2_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERSION_3_3_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERSION_4_0_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERSION_4_1_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_VERSION_4_2_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_multitexture_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_transpose_matrix_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_multisample_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_env_add_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_cube_map_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_compression_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_border_clamp_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_point_parameters_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_vertex_blend_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_matrix_palette_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_env_combine_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_env_crossbar_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_env_dot3_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_mirrored_repeat_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_depth_texture_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_shadow_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_shadow_ambient_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_window_pos_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_vertex_program_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_fragment_program_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_vertex_buffer_object_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_occlusion_query_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_shader_objects_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_vertex_shader_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_fragment_shader_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_shading_language_100_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_non_power_of_two_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_point_sprite_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_fragment_program_shadow_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_draw_buffers_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_rectangle_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_color_buffer_float_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_half_float_pixel_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_float_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_pixel_buffer_object_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_depth_buffer_float_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_draw_instanced_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_framebuffer_object_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_framebuffer_sRGB_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_geometry_shader4_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_half_float_vertex_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_instanced_arrays_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_map_buffer_range_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_buffer_object_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_compression_rgtc_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_rg_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_vertex_array_object_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_uniform_buffer_object_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_compatibility_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_copy_buffer_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_shader_texture_lod_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_depth_clamp_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_draw_elements_base_vertex_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_fragment_coord_conventions_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_provoking_vertex_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_seamless_cube_map_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_sync_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_multisample_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_vertex_array_bgra_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_draw_buffers_blend_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_sample_shading_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_cube_map_array_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_gather_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_query_lod_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_shading_language_include_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_compression_bptc_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_blend_func_extended_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_explicit_attrib_location_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_occlusion_query2_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_sampler_objects_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_shader_bit_encoding_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_rgb10_a2ui_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_swizzle_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_timer_query_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_vertex_type_2_10_10_10_rev_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_draw_indirect_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_gpu_shader5_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_gpu_shader_fp64_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_shader_subroutine_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_tessellation_shader_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_buffer_object_rgb32_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_transform_feedback2_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_transform_feedback3_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_ES2_compatibility_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_get_program_binary_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_separate_shader_objects_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_vertex_attrib_64bit_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_viewport_array_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_cl_event_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_debug_output_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_robustness_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_shader_stencil_export_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_base_instance_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_shading_language_420pack_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_transform_feedback_instanced_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_compressed_texture_pixel_storage_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_conservative_depth_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_internalformat_query_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_map_buffer_alignment_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_shader_atomic_counters_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_shader_image_load_store_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_shading_language_packing_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ARB_texture_storage_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_abgr_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_blend_color_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_polygon_offset_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_texture_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_texture3D_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIS_texture_filter4_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_subtexture_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_copy_texture_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_histogram_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_convolution_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGI_color_matrix_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGI_color_table_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_pixel_texture_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIS_pixel_texture_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIS_texture4D_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGI_texture_color_table_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_cmyka_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_texture_object_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIS_detail_texture_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIS_sharpen_texture_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_packed_pixels_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIS_texture_lod_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIS_multisample_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_rescale_normal_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_vertex_array_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_misc_attribute_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIS_generate_mipmap_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_clipmap_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_shadow_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIS_texture_edge_clamp_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIS_texture_border_clamp_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_blend_minmax_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_blend_subtract_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_blend_logic_op_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_interlace_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_pixel_tiles_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_texture_select_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_sprite_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_texture_multi_buffer_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_point_parameters_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIS_point_parameters_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_instruments_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_texture_scale_bias_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_framezoom_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_tag_sample_buffer_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_polynomial_ffd_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_reference_plane_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_flush_raster_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_depth_texture_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIS_fog_function_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_fog_offset_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HP_image_transform_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HP_convolution_border_modes_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_texture_add_env_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_color_subtable_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PGI_vertex_hints_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_PGI_misc_hints_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_paletted_texture_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_clip_volume_hint_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_list_priority_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_ir_instrument1_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_calligraphic_fragment_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_texture_lod_bias_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_shadow_ambient_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_index_texture_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_index_material_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_index_func_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_index_array_formats_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_compiled_vertex_array_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_cull_vertex_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_ycrcb_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_fragment_lighting_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IBM_rasterpos_clip_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HP_texture_lighting_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_draw_range_elements_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_WIN_phong_shading_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_WIN_specular_fog_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_light_texture_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_blend_alpha_minmax_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_bgra_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_async_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_async_pixel_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_async_histogram_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INTEL_parallel_arrays_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_HP_occlusion_test_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_pixel_transform_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_pixel_transform_color_table_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_shared_texture_palette_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_separate_specular_color_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_secondary_color_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_texture_perturb_normal_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_multi_draw_arrays_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_fog_coord_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_REND_screen_coordinates_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_coordinate_frame_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_texture_env_combine_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_APPLE_specular_vector_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_APPLE_transform_hint_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_fog_scale_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SUNX_constant_data_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SUN_global_alpha_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SUN_triangle_list_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SUN_vertex_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_blend_func_separate_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INGR_blend_func_separate_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INGR_color_clamp_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_INGR_interlace_read_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_stencil_wrap_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_422_pixels_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_texgen_reflection_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SUN_convolution_border_modes_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_texture_env_add_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_texture_lod_bias_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_texture_filter_anisotropic_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_vertex_weighting_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_light_max_exponent_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_vertex_array_range_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_register_combiners_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_fog_distance_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_texgen_emboss_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_blend_square_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_texture_env_combine4_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MESA_resize_buffers_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MESA_window_pos_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IBM_cull_vertex_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IBM_multimode_draw_arrays_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_IBM_vertex_array_lists_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_subsample_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_ycrcba_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_ycrcb_subsample_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_depth_pass_instrument_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_3DFX_texture_compression_FXT1_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_3DFX_multisample_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_3DFX_tbuffer_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_multisample_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_vertex_preclip_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_convolution_accuracy_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_resample_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIS_point_line_texgen_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIS_texture_color_mask_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_igloo_interface_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_texture_env_dot3_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATI_texture_mirror_once_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_fence_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_evaluators_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_packed_depth_stencil_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_register_combiners2_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_texture_compression_vtc_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_texture_rectangle_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_texture_shader_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_texture_shader2_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_vertex_array_range2_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_vertex_program_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_texture_coordinate_clamp_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SGIX_scalebias_hint_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OML_interlace_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OML_subsample_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OML_resample_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_copy_depth_to_color_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATI_envmap_bumpmap_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATI_fragment_shader_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATI_pn_triangles_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATI_vertex_array_object_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_vertex_shader_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATI_vertex_streams_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATI_element_array_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SUN_mesh_array_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_SUN_slice_accum_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_multisample_filter_hint_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_depth_clamp_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_occlusion_query_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_point_sprite_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_texture_shader3_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_vertex_program1_1_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_shadow_funcs_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_stencil_two_side_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATI_text_fragment_shader_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_APPLE_client_storage_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_APPLE_element_array_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_APPLE_fence_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_APPLE_vertex_array_object_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_APPLE_vertex_array_range_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_APPLE_ycbcr_422_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_S3_s3tc_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATI_draw_buffers_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATI_pixel_format_float_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATI_texture_env_combine3_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATI_texture_float_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_float_buffer_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_fragment_program_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_half_float_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_pixel_data_range_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_primitive_restart_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_texture_expand_normal_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_vertex_program2_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATI_map_object_buffer_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATI_separate_stencil_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATI_vertex_attrib_array_object_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_OES_read_format_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_depth_bounds_test_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_texture_mirror_clamp_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_blend_equation_separate_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MESA_pack_invert_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MESA_ycbcr_texture_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_pixel_buffer_object_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_fragment_program_option_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_fragment_program2_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_vertex_program2_option_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_vertex_program3_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_framebuffer_object_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GREMEDY_string_marker_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_packed_depth_stencil_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_stencil_clear_tag_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_texture_sRGB_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_framebuffer_blit_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_framebuffer_multisample_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_MESAX_texture_stack_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_timer_query_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_gpu_program_parameters_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_APPLE_flush_buffer_range_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_gpu_program4_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_geometry_program4_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_geometry_shader4_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_vertex_program4_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_gpu_shader4_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_draw_instanced_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_packed_float_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_texture_array_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_texture_buffer_object_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_texture_compression_latc_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_texture_compression_rgtc_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_texture_shared_exponent_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_depth_buffer_float_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_fragment_program4_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_framebuffer_multisample_coverage_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_framebuffer_sRGB_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_geometry_shader4_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_parameter_buffer_object_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_draw_buffers2_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_transform_feedback_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_bindable_uniform_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_texture_integer_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_GREMEDY_frame_terminator_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_conditional_render_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_present_video_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_transform_feedback_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_direct_state_access_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_vertex_array_bgra_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_texture_swizzle_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_explicit_multisample_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_transform_feedback2_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_ATI_meminfo_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_AMD_performance_monitor_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_AMD_texture_texture4_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_AMD_vertex_shader_tesselator_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_provoking_vertex_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_texture_snorm_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_AMD_draw_buffers_blend_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_APPLE_texture_range_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_APPLE_float_pixels_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_APPLE_vertex_program_evaluators_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_APPLE_aux_depth_stencil_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_APPLE_object_purgeable_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_APPLE_row_bytes_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_APPLE_rgb_422_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_video_capture_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_copy_image_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_separate_shader_objects_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_parameter_buffer_object2_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_shader_buffer_load_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_vertex_buffer_unified_memory_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_texture_barrier_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_AMD_shader_stencil_export_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_AMD_seamless_cubemap_per_texture_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_AMD_conservative_depth_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_shader_image_load_store_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_vertex_attrib_64bit_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_gpu_program5_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_gpu_shader5_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_shader_buffer_store_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_tessellation_program5_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_vertex_attrib_integer_64bit_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_multisample_coverage_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_AMD_name_gen_delete_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_AMD_debug_output_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_vdpau_interop_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_AMD_transform_feedback3_lines_triangles_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_AMD_depth_clamp_separate_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_texture_sRGB_decode_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_NV_texture_multisample_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_AMD_blend_minmax_factor_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_AMD_sample_positions_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_x11_sync_object_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_AMD_multi_draw_indirect_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GL_EXT_framebuffer_multisample_blit_scaled_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_GLUTWindow__SWIG_0(int jarg1, int jarg2, char * jarg3, int jarg4) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  int arg4 ;
  GLUTWindow *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  arg4 = (int)jarg4; 
  {
    try {
      result = (GLUTWindow *)new GLUTWindow(arg1,arg2,(std::string const &)*arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_GLUTWindow__SWIG_1(int jarg1, int jarg2, char * jarg3) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  GLUTWindow *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  std::string arg3_str(jarg3);
  arg3 = &arg3_str; 
  {
    try {
      result = (GLUTWindow *)new GLUTWindow(arg1,arg2,(std::string const &)*arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_GLUTWindow(void * jarg1) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_show__SWIG_0(void * jarg1, void * jarg2, int jarg3, int jarg4) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  RGBImage *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  arg2 = (RGBImage *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "RGBImage const & type is null", 0);
    return ;
  } 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      ((GLUTWindow const *)arg1)->show((RGBImage const &)*arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_show__SWIG_1(void * jarg1, void * jarg2, int jarg3, int jarg4) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  ShortImage *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  arg2 = (ShortImage *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "ShortImage const & type is null", 0);
    return ;
  } 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      ((GLUTWindow const *)arg1)->show((ShortImage const &)*arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_show__SWIG_2(void * jarg1, void * jarg2, int jarg3, int jarg4) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  IntensityImage *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  arg2 = (IntensityImage *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "IntensityImage const & type is null", 0);
    return ;
  } 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      ((GLUTWindow const *)arg1)->show((IntensityImage const &)*arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_print(void * jarg1, char * jarg2, int jarg3, int jarg4) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  std::string *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      ((GLUTWindow const *)arg1)->print((std::string const &)*arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_drawRectangleBackground(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  {
    try {
      ((GLUTWindow const *)arg1)->drawRectangleBackground(arg2,arg3,arg4,arg5,arg6);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_drawPolygon__SWIG_0(void * jarg1, void * jarg2, unsigned int jarg3, int jarg4) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  SwigValueWrapper< std::vector< _Vector< int > * > > arg2 ;
  bool arg3 ;
  int arg4 ;
  std::vector< Point * > *argp2 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  argp2 = (std::vector< Point * > *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null std::vector< Point * >", 0);
    return ;
  }
  arg2 = *argp2; 
  arg3 = jarg3 ? true : false; 
  arg4 = (int)jarg4; 
  {
    try {
      ((GLUTWindow const *)arg1)->drawPolygon(arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_drawPolygon__SWIG_1(void * jarg1, void * jarg2, unsigned int jarg3) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  SwigValueWrapper< std::vector< _Vector< int > * > > arg2 ;
  bool arg3 ;
  std::vector< Point * > *argp2 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  argp2 = (std::vector< Point * > *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null std::vector< Point * >", 0);
    return ;
  }
  arg2 = *argp2; 
  arg3 = jarg3 ? true : false; 
  {
    try {
      ((GLUTWindow const *)arg1)->drawPolygon(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_drawPolygon__SWIG_2(void * jarg1, void * jarg2) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  SwigValueWrapper< std::vector< _Vector< int > * > > arg2 ;
  std::vector< Point * > *argp2 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  argp2 = (std::vector< Point * > *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null std::vector< Point * >", 0);
    return ;
  }
  arg2 = *argp2; 
  {
    try {
      ((GLUTWindow const *)arg1)->drawPolygon(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_title(void * jarg1, char * jarg2) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  std::string *arg2 = 0 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  {
    try {
      ((GLUTWindow const *)arg1)->title((std::string const &)*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_clear__SWIG_0(void * jarg1, float jarg2, float jarg3, float jarg4, float jarg5) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  {
    try {
      (arg1)->clear(arg2,arg3,arg4,arg5);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_clear__SWIG_1(void * jarg1, float jarg2, float jarg3, float jarg4) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  arg4 = (float)jarg4; 
  {
    try {
      (arg1)->clear(arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_clear__SWIG_2(void * jarg1, float jarg2, float jarg3) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  float arg2 ;
  float arg3 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (float)jarg3; 
  {
    try {
      (arg1)->clear(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_clear__SWIG_3(void * jarg1, float jarg2) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  float arg2 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  arg2 = (float)jarg2; 
  {
    try {
      (arg1)->clear(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_clear__SWIG_4(void * jarg1) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  {
    try {
      (arg1)->clear();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_mode2D(void * jarg1) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  {
    try {
      (arg1)->mode2D();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_swap(void * jarg1) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  {
    try {
      (arg1)->swap();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_run(void * jarg1) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  {
    try {
      (arg1)->run();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_GLUTWindow_getWidth(void * jarg1) {
  int jresult ;
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  int result;
  
  arg1 = (GLUTWindow *)jarg1; 
  {
    try {
      result = (int)(arg1)->getWidth();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_GLUTWindow_getHeight(void * jarg1) {
  int jresult ;
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  int result;
  
  arg1 = (GLUTWindow *)jarg1; 
  {
    try {
      result = (int)(arg1)->getHeight();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_idle(void * jarg1) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  {
    try {
      (arg1)->idle();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_display(void * jarg1) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  {
    try {
      (arg1)->display();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_reshape(void * jarg1, int jarg2, int jarg3) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      (arg1)->reshape(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_keyboard(void * jarg1, int jarg2, int jarg3, int jarg4) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      (arg1)->keyboard(arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_mouse(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  {
    try {
      (arg1)->mouse(arg2,arg3,arg4,arg5,arg6);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_passive(void * jarg1, int jarg2, int jarg3, int jarg4) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      (arg1)->passive(arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_motion(void * jarg1, int jarg2, int jarg3, int jarg4) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      (arg1)->motion(arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_GLUTWindow_entry(void * jarg1, int jarg2, int jarg3) {
  GLUTWindow *arg1 = (GLUTWindow *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (GLUTWindow *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      (arg1)->entry(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_RGBATexture__SWIG_0(void * jarg1, void * jarg2, void * jarg3, void * jarg4) {
  void * jresult ;
  GLint arg1 ;
  GLint arg2 ;
  GLenum arg3 ;
  GLenum arg4 ;
  GLint *argp1 ;
  GLint *argp2 ;
  GLenum *argp3 ;
  GLenum *argp4 ;
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *result = 0 ;
  
  argp1 = (GLint *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null GLint", 0);
    return 0;
  }
  arg1 = *argp1; 
  argp2 = (GLint *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null GLint", 0);
    return 0;
  }
  arg2 = *argp2; 
  argp3 = (GLenum *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null GLenum", 0);
    return 0;
  }
  arg3 = *argp3; 
  argp4 = (GLenum *)jarg4; 
  if (!argp4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null GLenum", 0);
    return 0;
  }
  arg4 = *argp4; 
  {
    try {
      result = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)new Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE >(arg1,arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_RGBATexture__SWIG_1(void * jarg1, void * jarg2, void * jarg3) {
  void * jresult ;
  GLint arg1 ;
  GLint arg2 ;
  GLenum arg3 ;
  GLint *argp1 ;
  GLint *argp2 ;
  GLenum *argp3 ;
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *result = 0 ;
  
  argp1 = (GLint *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null GLint", 0);
    return 0;
  }
  arg1 = *argp1; 
  argp2 = (GLint *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null GLint", 0);
    return 0;
  }
  arg2 = *argp2; 
  argp3 = (GLenum *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null GLenum", 0);
    return 0;
  }
  arg3 = *argp3; 
  {
    try {
      result = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)new Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE >(arg1,arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_RGBATexture__SWIG_2(void * jarg1, void * jarg2) {
  void * jresult ;
  GLint arg1 ;
  GLint arg2 ;
  GLint *argp1 ;
  GLint *argp2 ;
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *result = 0 ;
  
  argp1 = (GLint *)jarg1; 
  if (!argp1) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null GLint", 0);
    return 0;
  }
  arg1 = *argp1; 
  argp2 = (GLint *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null GLint", 0);
    return 0;
  }
  arg2 = *argp2; 
  {
    try {
      result = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)new Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE >(arg1,arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_RGBATexture__SWIG_3(char * jarg1, void * jarg2, void * jarg3) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  GLenum arg2 ;
  GLenum arg3 ;
  GLenum *argp2 ;
  GLenum *argp3 ;
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *result = 0 ;
  
  arg1 = (char *)jarg1; 
  argp2 = (GLenum *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null GLenum", 0);
    return 0;
  }
  arg2 = *argp2; 
  argp3 = (GLenum *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null GLenum", 0);
    return 0;
  }
  arg3 = *argp3; 
  {
    try {
      result = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)new Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE >((char const *)arg1,arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_RGBATexture__SWIG_4(char * jarg1, void * jarg2) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  GLenum arg2 ;
  GLenum *argp2 ;
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *result = 0 ;
  
  arg1 = (char *)jarg1; 
  argp2 = (GLenum *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null GLenum", 0);
    return 0;
  }
  arg2 = *argp2; 
  {
    try {
      result = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)new Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE >((char const *)arg1,arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_RGBATexture__SWIG_5(char * jarg1) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *result = 0 ;
  
  arg1 = (char *)jarg1; 
  {
    try {
      result = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)new Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE >((char const *)arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_RGBATexture(void * jarg1) {
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *) 0 ;
  
  arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_RGBATexture_render__SWIG_0(void * jarg1, void * jarg2, void * jarg3, void * jarg4) {
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *) 0 ;
  GLint arg2 ;
  GLenum arg3 ;
  GLfloat arg4 ;
  GLint *argp2 ;
  GLenum *argp3 ;
  GLfloat *argp4 ;
  
  arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)jarg1; 
  argp2 = (GLint *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null GLint", 0);
    return ;
  }
  arg2 = *argp2; 
  argp3 = (GLenum *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null GLenum", 0);
    return ;
  }
  arg3 = *argp3; 
  argp4 = (GLfloat *)jarg4; 
  if (!argp4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null GLfloat", 0);
    return ;
  }
  arg4 = *argp4; 
  {
    try {
      (arg1)->render(arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_RGBATexture_render__SWIG_1(void * jarg1, void * jarg2, void * jarg3) {
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *) 0 ;
  GLint arg2 ;
  GLenum arg3 ;
  GLint *argp2 ;
  GLenum *argp3 ;
  
  arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)jarg1; 
  argp2 = (GLint *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null GLint", 0);
    return ;
  }
  arg2 = *argp2; 
  argp3 = (GLenum *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null GLenum", 0);
    return ;
  }
  arg3 = *argp3; 
  {
    try {
      (arg1)->render(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_RGBATexture_render__SWIG_2(void * jarg1, void * jarg2) {
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *) 0 ;
  GLint arg2 ;
  GLint *argp2 ;
  
  arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)jarg1; 
  argp2 = (GLint *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null GLint", 0);
    return ;
  }
  arg2 = *argp2; 
  {
    try {
      (arg1)->render(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_RGBATexture_render__SWIG_3(void * jarg1) {
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *) 0 ;
  
  arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)jarg1; 
  {
    try {
      (arg1)->render();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_RGBATexture_bind__SWIG_0(void * jarg1, void * jarg2) {
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *) 0 ;
  GLenum arg2 ;
  GLenum *argp2 ;
  
  arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)jarg1; 
  argp2 = (GLenum *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null GLenum", 0);
    return ;
  }
  arg2 = *argp2; 
  {
    try {
      (arg1)->bind(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_RGBATexture_bind__SWIG_1(void * jarg1) {
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *) 0 ;
  
  arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)jarg1; 
  {
    try {
      (arg1)->bind();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_RGBATexture_release(void * jarg1) {
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *) 0 ;
  
  arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)jarg1; 
  {
    try {
      (arg1)->release();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_RGBATexture_get(void * jarg1) {
  void * jresult ;
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *) 0 ;
  GLuint result;
  
  arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)jarg1; 
  {
    try {
      result = (arg1)->get();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new GLuint((const GLuint &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_RGBATexture_width__SWIG_0(void * jarg1, int jarg2) {
  void * jresult ;
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *) 0 ;
  int arg2 ;
  GLint result;
  
  arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      result = (arg1)->width(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new GLint((const GLint &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_RGBATexture_width__SWIG_1(void * jarg1) {
  void * jresult ;
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *) 0 ;
  GLint result;
  
  arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)jarg1; 
  {
    try {
      result = (arg1)->width();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new GLint((const GLint &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_RGBATexture_height__SWIG_0(void * jarg1, int jarg2) {
  void * jresult ;
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *) 0 ;
  int arg2 ;
  GLint result;
  
  arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      result = (arg1)->height(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new GLint((const GLint &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_RGBATexture_height__SWIG_1(void * jarg1) {
  void * jresult ;
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *) 0 ;
  GLint result;
  
  arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)jarg1; 
  {
    try {
      result = (arg1)->height();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new GLint((const GLint &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_RGBATexture_load__SWIG_0(void * jarg1, void * jarg2, void * jarg3, void * jarg4) {
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *) 0 ;
  GLvoid *arg2 = (GLvoid *) 0 ;
  GLenum arg3 ;
  GLenum arg4 ;
  GLenum *argp3 ;
  GLenum *argp4 ;
  
  arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)jarg1; 
  arg2 = (GLvoid *)jarg2; 
  argp3 = (GLenum *)jarg3; 
  if (!argp3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null GLenum", 0);
    return ;
  }
  arg3 = *argp3; 
  argp4 = (GLenum *)jarg4; 
  if (!argp4) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null GLenum", 0);
    return ;
  }
  arg4 = *argp4; 
  {
    try {
      (arg1)->load((GLvoid const *)arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_RGBATexture_load__SWIG_1(void * jarg1, char * jarg2) {
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    try {
      (arg1)->load((char const *)arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_RGBATexture_load__SWIG_2(void * jarg1, void * jarg2) {
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *) 0 ;
  IntensityImage *arg2 = (IntensityImage *) 0 ;
  
  arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)jarg1; 
  arg2 = (IntensityImage *)jarg2; 
  {
    try {
      (arg1)->load((IntensityImage const *)arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_RGBATexture_load__SWIG_3(void * jarg1, void * jarg2) {
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *) 0 ;
  ShortImage *arg2 = (ShortImage *) 0 ;
  
  arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)jarg1; 
  arg2 = (ShortImage *)jarg2; 
  {
    try {
      (arg1)->load((ShortImage const *)arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_RGBATexture_load__SWIG_4(void * jarg1, void * jarg2) {
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *) 0 ;
  RGBImage *arg2 = (RGBImage *) 0 ;
  
  arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)jarg1; 
  arg2 = (RGBImage *)jarg2; 
  {
    try {
      (arg1)->load((RGBImage const *)arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_RGBATexture_read(void * jarg1, void * jarg2) {
  Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *) 0 ;
  GLvoid *arg2 = (GLvoid *) 0 ;
  
  arg1 = (Texture< DEFAULT_TEXTURE_TARGET,GL_RGBA8,GL_RGBA,GL_UNSIGNED_BYTE > *)jarg1; 
  arg2 = (GLvoid *)jarg2; 
  {
    try {
      (arg1)->read(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_g_proj_set(void * jarg1) {
  GLdouble *arg1 ;
  
  arg1 = (GLdouble *)jarg1; 
  {
    size_t ii;
    GLdouble *b = (GLdouble *) g_proj;
    for (ii = 0; ii < (size_t)16; ii++) b[ii] = *((GLdouble *) arg1 + ii);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_g_proj_get() {
  void * jresult ;
  GLdouble *result = 0 ;
  
  result = (GLdouble *)(GLdouble *)g_proj;
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_g_view_set(void * jarg1) {
  GLint *arg1 ;
  
  arg1 = (GLint *)jarg1; 
  {
    size_t ii;
    GLint *b = (GLint *) g_view;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((GLint *) arg1 + ii);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_g_view_get() {
  void * jresult ;
  GLint *result = 0 ;
  
  result = (GLint *)(GLint *)g_view;
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_g_widgets_set(void * jarg1) {
  std::set< Widget * > *arg1 = (std::set< Widget * > *) 0 ;
  
  arg1 = (std::set< Widget * > *)jarg1; 
  g_widgets = *arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_g_widgets_get() {
  void * jresult ;
  std::set< Widget * > *result = 0 ;
  
  result = (std::set< Widget * > *)&g_widgets;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_g_matcher_set(void * jarg1) {
  Matcher *arg1 = (Matcher *) 0 ;
  
  arg1 = (Matcher *)jarg1; 
  g_matcher = arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_g_matcher_get() {
  void * jresult ;
  Matcher *result = 0 ;
  
  result = (Matcher *)g_matcher;
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Widget__SWIG_0(int jarg1, int jarg2, int jarg3, int jarg4, double jarg5, void * jarg6, unsigned int jarg7) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  double arg5 ;
  RGBATexture *arg6 = (RGBATexture *) 0 ;
  unsigned int arg7 ;
  Widget *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (RGBATexture *)jarg6; 
  arg7 = (unsigned int)jarg7; 
  {
    try {
      result = (Widget *)new SwigDirector_Widget(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Widget__SWIG_1(int jarg1, int jarg2, int jarg3, int jarg4, double jarg5, void * jarg6) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  double arg5 ;
  RGBATexture *arg6 = (RGBATexture *) 0 ;
  Widget *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (RGBATexture *)jarg6; 
  {
    try {
      result = (Widget *)new SwigDirector_Widget(arg1,arg2,arg3,arg4,arg5,arg6);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Widget__SWIG_2(int jarg1, int jarg2, int jarg3, int jarg4, double jarg5) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  double arg5 ;
  Widget *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      result = (Widget *)new SwigDirector_Widget(arg1,arg2,arg3,arg4,arg5);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Widget__SWIG_3(int jarg1, int jarg2, int jarg3, int jarg4) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  Widget *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      result = (Widget *)new SwigDirector_Widget(arg1,arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Widget__SWIG_4(int jarg1, int jarg2, int jarg3) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  Widget *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = (Widget *)new SwigDirector_Widget(arg1,arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Widget__SWIG_5(int jarg1, int jarg2) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  Widget *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      result = (Widget *)new SwigDirector_Widget(arg1,arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Widget(void * jarg1) {
  Widget *arg1 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_glOutline2d__SWIG_0(void * jarg1, double jarg2, double jarg3, int jarg4) {
  void * jresult ;
  Widget *arg1 = (Widget *) 0 ;
  double arg2 ;
  double arg3 ;
  int arg4 ;
  Vector result;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      result = (arg1)->glOutline2d(arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new Vector((const Vector &)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_glOutline2d__SWIG_1(void * jarg1, double jarg2, double jarg3) {
  void * jresult ;
  Widget *arg1 = (Widget *) 0 ;
  double arg2 ;
  double arg3 ;
  Vector result;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      result = (arg1)->glOutline2d(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = new Vector((const Vector &)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_outline(void * jarg1) {
  Widget *arg1 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  {
    try {
      (arg1)->outline();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_outlineSwigExplicitWidget(void * jarg1) {
  Widget *arg1 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  {
    try {
      (arg1)->Widget::outline();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_update__SWIG_0(void * jarg1, void * jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (Widget *)jarg2; 
  {
    try {
      (arg1)->update(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_updateSwigExplicitWidget__SWIG_0(void * jarg1, void * jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (Widget *)jarg2; 
  {
    try {
      (arg1)->Widget::update(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_update__SWIG_1(void * jarg1) {
  Widget *arg1 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  {
    try {
      (arg1)->update();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_updateSwigExplicitWidget__SWIG_1(void * jarg1) {
  Widget *arg1 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  {
    try {
      (arg1)->Widget::update();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_doUpdate__SWIG_0(void * jarg1, void * jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (Widget *)jarg2; 
  {
    try {
      (arg1)->doUpdate(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_doUpdateSwigExplicitWidget__SWIG_0(void * jarg1, void * jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (Widget *)jarg2; 
  {
    try {
      (arg1)->Widget::doUpdate(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_doUpdate__SWIG_1(void * jarg1) {
  Widget *arg1 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  {
    try {
      (arg1)->doUpdate();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_doUpdateSwigExplicitWidget__SWIG_1(void * jarg1) {
  Widget *arg1 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  {
    try {
      (arg1)->Widget::doUpdate();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_raise__SWIG_0(void * jarg1, void * jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (Widget *)jarg2; 
  {
    try {
      (arg1)->raise(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_raiseSwigExplicitWidget__SWIG_0(void * jarg1, void * jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (Widget *)jarg2; 
  {
    try {
      (arg1)->Widget::raise(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_raise__SWIG_1(void * jarg1) {
  Widget *arg1 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  {
    try {
      (arg1)->raise();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_raiseSwigExplicitWidget__SWIG_1(void * jarg1) {
  Widget *arg1 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  {
    try {
      (arg1)->Widget::raise();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_lower__SWIG_0(void * jarg1, void * jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (Widget *)jarg2; 
  {
    try {
      (arg1)->lower(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_lowerSwigExplicitWidget__SWIG_0(void * jarg1, void * jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (Widget *)jarg2; 
  {
    try {
      (arg1)->Widget::lower(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_lower__SWIG_1(void * jarg1) {
  Widget *arg1 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  {
    try {
      (arg1)->lower();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_lowerSwigExplicitWidget__SWIG_1(void * jarg1) {
  Widget *arg1 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  {
    try {
      (arg1)->Widget::lower();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_transform__SWIG_0(void * jarg1, void * jarg2, int jarg3, int jarg4) {
  Widget *arg1 = (Widget *) 0 ;
  Vector *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (Vector *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Vector & type is null", 0);
    return ;
  } 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      (arg1)->transform(*arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_transform__SWIG_1(void * jarg1, void * jarg2, int jarg3) {
  Widget *arg1 = (Widget *) 0 ;
  Vector *arg2 = 0 ;
  int arg3 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (Vector *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Vector & type is null", 0);
    return ;
  } 
  arg3 = (int)jarg3; 
  {
    try {
      (arg1)->transform(*arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_transform__SWIG_2(void * jarg1, void * jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  Vector *arg2 = 0 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (Vector *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Vector & type is null", 0);
    return ;
  } 
  {
    try {
      (arg1)->transform(*arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_texture(void * jarg1, void * jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  RGBATexture *arg2 = (RGBATexture *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (RGBATexture *)jarg2; 
  {
    try {
      (arg1)->texture(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_color(void * jarg1, double jarg2, double jarg3, double jarg4, double jarg5) {
  Widget *arg1 = (Widget *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      (arg1)->color(arg2,arg3,arg4,arg5);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_setangle(void * jarg1, double jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  double arg2 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      (arg1)->setangle(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_draw(void * jarg1) {
  Widget *arg1 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  {
    try {
      (arg1)->draw();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_drawSwigExplicitWidget(void * jarg1) {
  Widget *arg1 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  {
    try {
      (arg1)->Widget::draw();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_action(void * jarg1, void * jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  Gesture *arg2 = (Gesture *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (Gesture *)jarg2; 
  {
    try {
      (arg1)->action(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_paint_tex__SWIG_0(void * jarg1, void * jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  RGBATexture *arg2 = (RGBATexture *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (RGBATexture *)jarg2; 
  {
    try {
      (arg1)->paint_tex(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_paint_tex__SWIG_1(void * jarg1) {
  Widget *arg1 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  {
    try {
      (arg1)->paint_tex();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_enter__SWIG_0(void * jarg1, double jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  double arg2 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      (arg1)->enter(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_enterSwigExplicitWidget__SWIG_0(void * jarg1, double jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  double arg2 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      (arg1)->Widget::enter(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_enter__SWIG_1(void * jarg1) {
  Widget *arg1 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  {
    try {
      (arg1)->enter();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_enterSwigExplicitWidget__SWIG_1(void * jarg1) {
  Widget *arg1 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  {
    try {
      (arg1)->Widget::enter();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_paint__SWIG_0(void * jarg1, unsigned int jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  bool arg2 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = jarg2 ? true : false; 
  {
    try {
      (arg1)->paint(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_paintSwigExplicitWidget__SWIG_0(void * jarg1, unsigned int jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  bool arg2 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = jarg2 ? true : false; 
  {
    try {
      (arg1)->Widget::paint(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_paint__SWIG_1(void * jarg1) {
  Widget *arg1 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  {
    try {
      (arg1)->paint();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_paintSwigExplicitWidget__SWIG_1(void * jarg1) {
  Widget *arg1 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  {
    try {
      (arg1)->Widget::paint();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_leave(void * jarg1) {
  Widget *arg1 = (Widget *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  {
    try {
      (arg1)->leave();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_region_set(void * jarg1, void * jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  Region *arg2 = (Region *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (Region *)jarg2; 
  if (arg1) (arg1)->region = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_region_get(void * jarg1) {
  void * jresult ;
  Widget *arg1 = (Widget *) 0 ;
  Region *result = 0 ;
  
  arg1 = (Widget *)jarg1; 
  result = (Region *)& ((arg1)->region);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_shadow_set(void * jarg1, unsigned int jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  bool arg2 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->shadow = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_shadow_get(void * jarg1) {
  unsigned int jresult ;
  Widget *arg1 = (Widget *) 0 ;
  bool result;
  
  arg1 = (Widget *)jarg1; 
  result = (bool) ((arg1)->shadow);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_hide_set(void * jarg1, unsigned int jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  bool arg2 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->hide = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_Widget_hide_get(void * jarg1) {
  unsigned int jresult ;
  Widget *arg1 = (Widget *) 0 ;
  bool result;
  
  arg1 = (Widget *)jarg1; 
  result = (bool) ((arg1)->hide);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_w_set(void * jarg1, double jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  double arg2 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->w = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Widget_w_get(void * jarg1) {
  double jresult ;
  Widget *arg1 = (Widget *) 0 ;
  double result;
  
  arg1 = (Widget *)jarg1; 
  result = (double) ((arg1)->w);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_h_set(void * jarg1, double jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  double arg2 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->h = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Widget_h_get(void * jarg1) {
  double jresult ;
  Widget *arg1 = (Widget *) 0 ;
  double result;
  
  arg1 = (Widget *)jarg1; 
  result = (double) ((arg1)->h);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_x_set(void * jarg1, double jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  double arg2 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Widget_x_get(void * jarg1) {
  double jresult ;
  Widget *arg1 = (Widget *) 0 ;
  double result;
  
  arg1 = (Widget *)jarg1; 
  result = (double) ((arg1)->x);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_y_set(void * jarg1, double jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  double arg2 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Widget_y_get(void * jarg1) {
  double jresult ;
  Widget *arg1 = (Widget *) 0 ;
  double result;
  
  arg1 = (Widget *)jarg1; 
  result = (double) ((arg1)->y);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_sx_set(void * jarg1, double jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  double arg2 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->sx = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Widget_sx_get(void * jarg1) {
  double jresult ;
  Widget *arg1 = (Widget *) 0 ;
  double result;
  
  arg1 = (Widget *)jarg1; 
  result = (double) ((arg1)->sx);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_sy_set(void * jarg1, double jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  double arg2 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->sy = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Widget_sy_get(void * jarg1) {
  double jresult ;
  Widget *arg1 = (Widget *) 0 ;
  double result;
  
  arg1 = (Widget *)jarg1; 
  result = (double) ((arg1)->sy);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_angle_set(void * jarg1, double jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  double arg2 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->angle = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Widget_angle_get(void * jarg1) {
  double jresult ;
  Widget *arg1 = (Widget *) 0 ;
  double result;
  
  arg1 = (Widget *)jarg1; 
  result = (double) ((arg1)->angle);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_asx_set(void * jarg1, double jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  double arg2 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->asx = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Widget_asx_get(void * jarg1) {
  double jresult ;
  Widget *arg1 = (Widget *) 0 ;
  double result;
  
  arg1 = (Widget *)jarg1; 
  result = (double) ((arg1)->asx);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_asy_set(void * jarg1, double jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  double arg2 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->asy = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Widget_asy_get(void * jarg1) {
  double jresult ;
  Widget *arg1 = (Widget *) 0 ;
  double result;
  
  arg1 = (Widget *)jarg1; 
  result = (double) ((arg1)->asy);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_absangle_set(void * jarg1, double jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  double arg2 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->absangle = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Widget_absangle_get(void * jarg1) {
  double jresult ;
  Widget *arg1 = (Widget *) 0 ;
  double result;
  
  arg1 = (Widget *)jarg1; 
  result = (double) ((arg1)->absangle);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_abspos_set(void * jarg1, void * jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  Vector *arg2 = (Vector *) 0 ;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (Vector *)jarg2; 
  if (arg1) (arg1)->abspos = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_abspos_get(void * jarg1) {
  void * jresult ;
  Widget *arg1 = (Widget *) 0 ;
  Vector *result = 0 ;
  
  arg1 = (Widget *)jarg1; 
  result = (Vector *)& ((arg1)->abspos);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_unregister(void * jarg1) {
  Widget *arg1 = (Widget *) 0 ;
  SwigDirector_Widget *darg = 0;
  
  arg1 = (Widget *)jarg1; 
  darg = dynamic_cast<SwigDirector_Widget *>(arg1);
  {
    try {
      (darg)->unregister();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_mytex_set(void * jarg1, void * jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  RGBATexture *arg2 = (RGBATexture *) 0 ;
  SwigDirector_Widget *darg = 0;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (RGBATexture *)jarg2; 
  darg = dynamic_cast<SwigDirector_Widget *>(arg1);
  if (arg1) darg->mytex = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_mytex_get(void * jarg1) {
  void * jresult ;
  Widget *arg1 = (Widget *) 0 ;
  SwigDirector_Widget *darg = 0;
  RGBATexture *result = 0 ;
  
  arg1 = (Widget *)jarg1; 
  darg = dynamic_cast<SwigDirector_Widget *>(arg1);
  result = (RGBATexture *) (darg->mytex);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_mycolor_set(void * jarg1, void * jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  GLdouble *arg2 ;
  SwigDirector_Widget *darg = 0;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (GLdouble *)jarg2; 
  darg = dynamic_cast<SwigDirector_Widget *>(arg1);
  {
    size_t ii;
    GLdouble *b = (GLdouble *) darg->mycolor;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((GLdouble *) arg2 + ii);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_mycolor_get(void * jarg1) {
  void * jresult ;
  Widget *arg1 = (Widget *) 0 ;
  SwigDirector_Widget *darg = 0;
  GLdouble *result = 0 ;
  
  arg1 = (Widget *)jarg1; 
  darg = dynamic_cast<SwigDirector_Widget *>(arg1);
  result = (GLdouble *)(GLdouble *) (darg->mycolor);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_parent_set(void * jarg1, void * jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  Container *arg2 = (Container *) 0 ;
  SwigDirector_Widget *darg = 0;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (Container *)jarg2; 
  darg = dynamic_cast<SwigDirector_Widget *>(arg1);
  if (arg1) darg->parent = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_parent_get(void * jarg1) {
  void * jresult ;
  Widget *arg1 = (Widget *) 0 ;
  SwigDirector_Widget *darg = 0;
  Container *result = 0 ;
  
  arg1 = (Widget *)jarg1; 
  darg = dynamic_cast<SwigDirector_Widget *>(arg1);
  result = (Container *) (darg->parent);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_m_model_set(void * jarg1, void * jarg2) {
  Widget *arg1 = (Widget *) 0 ;
  GLdouble *arg2 ;
  SwigDirector_Widget *darg = 0;
  
  arg1 = (Widget *)jarg1; 
  arg2 = (GLdouble *)jarg2; 
  darg = dynamic_cast<SwigDirector_Widget *>(arg1);
  {
    size_t ii;
    GLdouble *b = (GLdouble *) darg->m_model;
    for (ii = 0; ii < (size_t)16; ii++) b[ii] = *((GLdouble *) arg2 + ii);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Widget_m_model_get(void * jarg1) {
  void * jresult ;
  Widget *arg1 = (Widget *) 0 ;
  SwigDirector_Widget *darg = 0;
  GLdouble *result = 0 ;
  
  arg1 = (Widget *)jarg1; 
  darg = dynamic_cast<SwigDirector_Widget *>(arg1);
  result = (GLdouble *)(GLdouble *) (darg->m_model);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Widget_director_connect(void *objarg, SwigDirector_Widget::SWIG_Callback0_t callback0, SwigDirector_Widget::SWIG_Callback1_t callback1, SwigDirector_Widget::SWIG_Callback2_t callback2, SwigDirector_Widget::SWIG_Callback3_t callback3, SwigDirector_Widget::SWIG_Callback4_t callback4, SwigDirector_Widget::SWIG_Callback5_t callback5, SwigDirector_Widget::SWIG_Callback6_t callback6, SwigDirector_Widget::SWIG_Callback7_t callback7, SwigDirector_Widget::SWIG_Callback8_t callback8, SwigDirector_Widget::SWIG_Callback9_t callback9, SwigDirector_Widget::SWIG_Callback10_t callback10, SwigDirector_Widget::SWIG_Callback11_t callback11, SwigDirector_Widget::SWIG_Callback12_t callback12, SwigDirector_Widget::SWIG_Callback13_t callback13, SwigDirector_Widget::SWIG_Callback14_t callback14) {
  Widget *obj = (Widget *)objarg;
  SwigDirector_Widget *director = dynamic_cast<SwigDirector_Widget *>(obj);
  if (director) {
    director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7, callback8, callback9, callback10, callback11, callback12, callback13, callback14);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Label__SWIG_0(char * jarg1, int jarg2, int jarg3, int jarg4, int jarg5, double jarg6, int jarg7, int jarg8, void * jarg9) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  double arg6 ;
  int arg7 ;
  int arg8 ;
  RGBATexture *arg9 = (RGBATexture *) 0 ;
  Label *result = 0 ;
  
  arg1 = (char *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (int)jarg8; 
  arg9 = (RGBATexture *)jarg9; 
  {
    try {
      result = (Label *)new SwigDirector_Label((char const *)arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Label__SWIG_1(char * jarg1, int jarg2, int jarg3, int jarg4, int jarg5, double jarg6, int jarg7, int jarg8) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  double arg6 ;
  int arg7 ;
  int arg8 ;
  Label *result = 0 ;
  
  arg1 = (char *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (int)jarg8; 
  {
    try {
      result = (Label *)new SwigDirector_Label((char const *)arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Label__SWIG_2(char * jarg1, int jarg2, int jarg3, int jarg4, int jarg5, double jarg6, int jarg7) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  double arg6 ;
  int arg7 ;
  Label *result = 0 ;
  
  arg1 = (char *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (int)jarg7; 
  {
    try {
      result = (Label *)new SwigDirector_Label((char const *)arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Label__SWIG_3(char * jarg1, int jarg2, int jarg3, int jarg4, int jarg5, double jarg6) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  double arg6 ;
  Label *result = 0 ;
  
  arg1 = (char *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      result = (Label *)new SwigDirector_Label((char const *)arg1,arg2,arg3,arg4,arg5,arg6);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Label__SWIG_4(char * jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  Label *result = 0 ;
  
  arg1 = (char *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  {
    try {
      result = (Label *)new SwigDirector_Label((char const *)arg1,arg2,arg3,arg4,arg5);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Label__SWIG_5(char * jarg1, int jarg2, int jarg3, int jarg4) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  Label *result = 0 ;
  
  arg1 = (char *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      result = (Label *)new SwigDirector_Label((char const *)arg1,arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Label__SWIG_6(char * jarg1, int jarg2, int jarg3) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int arg3 ;
  Label *result = 0 ;
  
  arg1 = (char *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = (Label *)new SwigDirector_Label((char const *)arg1,arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Label(void * jarg1) {
  Label *arg1 = (Label *) 0 ;
  
  arg1 = (Label *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Label_draw(void * jarg1) {
  Label *arg1 = (Label *) 0 ;
  
  arg1 = (Label *)jarg1; 
  {
    try {
      (arg1)->draw();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Label_drawSwigExplicitLabel(void * jarg1) {
  Label *arg1 = (Label *) 0 ;
  
  arg1 = (Label *)jarg1; 
  {
    try {
      (arg1)->Label::draw();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Label_action(void * jarg1, void * jarg2) {
  Label *arg1 = (Label *) 0 ;
  Gesture *arg2 = (Gesture *) 0 ;
  
  arg1 = (Label *)jarg1; 
  arg2 = (Gesture *)jarg2; 
  {
    try {
      (arg1)->action(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Label_actionSwigExplicitLabel(void * jarg1, void * jarg2) {
  Label *arg1 = (Label *) 0 ;
  Gesture *arg2 = (Gesture *) 0 ;
  
  arg1 = (Label *)jarg1; 
  arg2 = (Gesture *)jarg2; 
  {
    try {
      (arg1)->Label::action(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Label_set(void * jarg1, char * jarg2) {
  Label *arg1 = (Label *) 0 ;
  std::string arg2 ;
  
  arg1 = (Label *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  (&arg2)->assign(jarg2); 
  {
    try {
      (arg1)->set(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Label_text_set(void * jarg1, char * jarg2) {
  Label *arg1 = (Label *) 0 ;
  std::string *arg2 = 0 ;
  SwigDirector_Label *darg = 0;
  
  arg1 = (Label *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  std::string arg2_str(jarg2);
  arg2 = &arg2_str; 
  darg = dynamic_cast<SwigDirector_Label *>(arg1);
  if (arg1) darg->text = *arg2;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_Label_text_get(void * jarg1) {
  char * jresult ;
  Label *arg1 = (Label *) 0 ;
  SwigDirector_Label *darg = 0;
  std::string *result = 0 ;
  
  arg1 = (Label *)jarg1; 
  darg = dynamic_cast<SwigDirector_Label *>(arg1);
  result = (std::string *) & (darg->text);
  jresult = SWIG_csharp_string_callback(result->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Label_center_set(void * jarg1, int jarg2) {
  Label *arg1 = (Label *) 0 ;
  int arg2 ;
  SwigDirector_Label *darg = 0;
  
  arg1 = (Label *)jarg1; 
  arg2 = (int)jarg2; 
  darg = dynamic_cast<SwigDirector_Label *>(arg1);
  if (arg1) darg->center = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Label_center_get(void * jarg1) {
  int jresult ;
  Label *arg1 = (Label *) 0 ;
  SwigDirector_Label *darg = 0;
  int result;
  
  arg1 = (Label *)jarg1; 
  darg = dynamic_cast<SwigDirector_Label *>(arg1);
  result = (int) (darg->center);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Label_snip_set(void * jarg1, int jarg2) {
  Label *arg1 = (Label *) 0 ;
  int arg2 ;
  SwigDirector_Label *darg = 0;
  
  arg1 = (Label *)jarg1; 
  arg2 = (int)jarg2; 
  darg = dynamic_cast<SwigDirector_Label *>(arg1);
  if (arg1) darg->snip = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Label_snip_get(void * jarg1) {
  int jresult ;
  Label *arg1 = (Label *) 0 ;
  SwigDirector_Label *darg = 0;
  int result;
  
  arg1 = (Label *)jarg1; 
  darg = dynamic_cast<SwigDirector_Label *>(arg1);
  result = (int) (darg->snip);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Label_director_connect(void *objarg, SwigDirector_Label::SWIG_Callback0_t callback0, SwigDirector_Label::SWIG_Callback1_t callback1, SwigDirector_Label::SWIG_Callback2_t callback2, SwigDirector_Label::SWIG_Callback3_t callback3, SwigDirector_Label::SWIG_Callback4_t callback4, SwigDirector_Label::SWIG_Callback5_t callback5, SwigDirector_Label::SWIG_Callback6_t callback6, SwigDirector_Label::SWIG_Callback7_t callback7, SwigDirector_Label::SWIG_Callback8_t callback8, SwigDirector_Label::SWIG_Callback9_t callback9, SwigDirector_Label::SWIG_Callback10_t callback10, SwigDirector_Label::SWIG_Callback11_t callback11, SwigDirector_Label::SWIG_Callback12_t callback12, SwigDirector_Label::SWIG_Callback13_t callback13, SwigDirector_Label::SWIG_Callback14_t callback14) {
  Label *obj = (Label *)objarg;
  SwigDirector_Label *director = dynamic_cast<SwigDirector_Label *>(obj);
  if (director) {
    director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7, callback8, callback9, callback10, callback11, callback12, callback13, callback14);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Button__SWIG_0(int jarg1, int jarg2, int jarg3, int jarg4, double jarg5, void * jarg6) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  double arg5 ;
  RGBATexture *arg6 = (RGBATexture *) 0 ;
  Button *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (RGBATexture *)jarg6; 
  {
    try {
      result = (Button *)new SwigDirector_Button(arg1,arg2,arg3,arg4,arg5,arg6);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Button__SWIG_1(int jarg1, int jarg2, int jarg3, int jarg4, double jarg5) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  double arg5 ;
  Button *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      result = (Button *)new SwigDirector_Button(arg1,arg2,arg3,arg4,arg5);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Button__SWIG_2(int jarg1, int jarg2, int jarg3, int jarg4) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  Button *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      result = (Button *)new SwigDirector_Button(arg1,arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Button__SWIG_3(int jarg1, int jarg2, int jarg3) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  Button *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = (Button *)new SwigDirector_Button(arg1,arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Button__SWIG_4(int jarg1, int jarg2) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  Button *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      result = (Button *)new SwigDirector_Button(arg1,arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Button(void * jarg1) {
  Button *arg1 = (Button *) 0 ;
  
  arg1 = (Button *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Button_draw(void * jarg1) {
  Button *arg1 = (Button *) 0 ;
  
  arg1 = (Button *)jarg1; 
  {
    try {
      (arg1)->draw();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Button_drawSwigExplicitButton(void * jarg1) {
  Button *arg1 = (Button *) 0 ;
  
  arg1 = (Button *)jarg1; 
  {
    try {
      (arg1)->Button::draw();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Button_action(void * jarg1, void * jarg2) {
  Button *arg1 = (Button *) 0 ;
  Gesture *arg2 = (Gesture *) 0 ;
  
  arg1 = (Button *)jarg1; 
  arg2 = (Gesture *)jarg2; 
  {
    try {
      (arg1)->action(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Button_actionSwigExplicitButton(void * jarg1, void * jarg2) {
  Button *arg1 = (Button *) 0 ;
  Gesture *arg2 = (Gesture *) 0 ;
  
  arg1 = (Button *)jarg1; 
  arg2 = (Gesture *)jarg2; 
  {
    try {
      (arg1)->Button::action(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Button_tap(void * jarg1, void * jarg2, int jarg3) {
  Button *arg1 = (Button *) 0 ;
  Vector arg2 ;
  int arg3 ;
  Vector *argp2 ;
  
  arg1 = (Button *)jarg1; 
  argp2 = (Vector *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null Vector", 0);
    return ;
  }
  arg2 = *argp2; 
  arg3 = (int)jarg3; 
  {
    try {
      (arg1)->tap(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Button_tapSwigExplicitButton(void * jarg1, void * jarg2, int jarg3) {
  Button *arg1 = (Button *) 0 ;
  Vector arg2 ;
  int arg3 ;
  Vector *argp2 ;
  
  arg1 = (Button *)jarg1; 
  argp2 = (Vector *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null Vector", 0);
    return ;
  }
  arg2 = *argp2; 
  arg3 = (int)jarg3; 
  {
    try {
      (arg1)->Button::tap(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Button_release(void * jarg1) {
  Button *arg1 = (Button *) 0 ;
  
  arg1 = (Button *)jarg1; 
  {
    try {
      (arg1)->release();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Button_releaseSwigExplicitButton(void * jarg1) {
  Button *arg1 = (Button *) 0 ;
  
  arg1 = (Button *)jarg1; 
  {
    try {
      (arg1)->Button::release();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Button_active_set(void * jarg1, int jarg2) {
  Button *arg1 = (Button *) 0 ;
  int arg2 ;
  SwigDirector_Button *darg = 0;
  
  arg1 = (Button *)jarg1; 
  arg2 = (int)jarg2; 
  darg = dynamic_cast<SwigDirector_Button *>(arg1);
  if (arg1) darg->active = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Button_active_get(void * jarg1) {
  int jresult ;
  Button *arg1 = (Button *) 0 ;
  SwigDirector_Button *darg = 0;
  int result;
  
  arg1 = (Button *)jarg1; 
  darg = dynamic_cast<SwigDirector_Button *>(arg1);
  result = (int) (darg->active);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Button_director_connect(void *objarg, SwigDirector_Button::SWIG_Callback0_t callback0, SwigDirector_Button::SWIG_Callback1_t callback1, SwigDirector_Button::SWIG_Callback2_t callback2, SwigDirector_Button::SWIG_Callback3_t callback3, SwigDirector_Button::SWIG_Callback4_t callback4, SwigDirector_Button::SWIG_Callback5_t callback5, SwigDirector_Button::SWIG_Callback6_t callback6, SwigDirector_Button::SWIG_Callback7_t callback7, SwigDirector_Button::SWIG_Callback8_t callback8, SwigDirector_Button::SWIG_Callback9_t callback9, SwigDirector_Button::SWIG_Callback10_t callback10, SwigDirector_Button::SWIG_Callback11_t callback11, SwigDirector_Button::SWIG_Callback12_t callback12, SwigDirector_Button::SWIG_Callback13_t callback13, SwigDirector_Button::SWIG_Callback14_t callback14, SwigDirector_Button::SWIG_Callback15_t callback15, SwigDirector_Button::SWIG_Callback16_t callback16) {
  Button *obj = (Button *)objarg;
  SwigDirector_Button *director = dynamic_cast<SwigDirector_Button *>(obj);
  if (director) {
    director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7, callback8, callback9, callback10, callback11, callback12, callback13, callback14, callback15, callback16);
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_TISCH_TILE_MOVE_get() {
  int jresult ;
  int result;
  
  result = (int)(1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TISCH_TILE_SCALE_get() {
  int jresult ;
  int result;
  
  result = (int)(2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TISCH_TILE_ROTATE_get() {
  int jresult ;
  int result;
  
  result = (int)(4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TISCH_TILE_SLIDE_get() {
  int jresult ;
  int result;
  
  result = (int)(8);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TISCH_TILE_BOUNCE_get() {
  int jresult ;
  int result;
  
  result = (int)(16);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TISCH_TILE_BBOX_get() {
  int jresult ;
  int result;
  
  result = (int)(32);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TISCH_TILE_CIRCLE_get() {
  int jresult ;
  int result;
  
  result = (int)(64);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Tile__SWIG_0(int jarg1, int jarg2, int jarg3, int jarg4, double jarg5, void * jarg6, int jarg7) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  double arg5 ;
  RGBATexture *arg6 = (RGBATexture *) 0 ;
  int arg7 ;
  Tile *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (RGBATexture *)jarg6; 
  arg7 = (int)jarg7; 
  {
    try {
      result = (Tile *)new SwigDirector_Tile(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Tile__SWIG_1(int jarg1, int jarg2, int jarg3, int jarg4, double jarg5, void * jarg6) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  double arg5 ;
  RGBATexture *arg6 = (RGBATexture *) 0 ;
  Tile *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (RGBATexture *)jarg6; 
  {
    try {
      result = (Tile *)new SwigDirector_Tile(arg1,arg2,arg3,arg4,arg5,arg6);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Tile__SWIG_2(int jarg1, int jarg2, int jarg3, int jarg4, double jarg5) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  double arg5 ;
  Tile *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      result = (Tile *)new SwigDirector_Tile(arg1,arg2,arg3,arg4,arg5);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Tile__SWIG_3(int jarg1, int jarg2, int jarg3, int jarg4) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  Tile *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      result = (Tile *)new SwigDirector_Tile(arg1,arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Tile__SWIG_4(int jarg1, int jarg2, int jarg3) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  Tile *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = (Tile *)new SwigDirector_Tile(arg1,arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Tile__SWIG_5(int jarg1, int jarg2) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  Tile *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      result = (Tile *)new SwigDirector_Tile(arg1,arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Tile(void * jarg1) {
  Tile *arg1 = (Tile *) 0 ;
  
  arg1 = (Tile *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Tile_action(void * jarg1, void * jarg2) {
  Tile *arg1 = (Tile *) 0 ;
  Gesture *arg2 = (Gesture *) 0 ;
  
  arg1 = (Tile *)jarg1; 
  arg2 = (Gesture *)jarg2; 
  {
    try {
      (arg1)->action(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Tile_actionSwigExplicitTile(void * jarg1, void * jarg2) {
  Tile *arg1 = (Tile *) 0 ;
  Gesture *arg2 = (Gesture *) 0 ;
  
  arg1 = (Tile *)jarg1; 
  arg2 = (Gesture *)jarg2; 
  {
    try {
      (arg1)->Tile::action(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Tile_tap(void * jarg1, void * jarg2, int jarg3) {
  Tile *arg1 = (Tile *) 0 ;
  Vector arg2 ;
  int arg3 ;
  Vector *argp2 ;
  
  arg1 = (Tile *)jarg1; 
  argp2 = (Vector *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null Vector", 0);
    return ;
  }
  arg2 = *argp2; 
  arg3 = (int)jarg3; 
  {
    try {
      (arg1)->tap(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Tile_tapSwigExplicitTile(void * jarg1, void * jarg2, int jarg3) {
  Tile *arg1 = (Tile *) 0 ;
  Vector arg2 ;
  int arg3 ;
  Vector *argp2 ;
  
  arg1 = (Tile *)jarg1; 
  argp2 = (Vector *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null Vector", 0);
    return ;
  }
  arg2 = *argp2; 
  arg3 = (int)jarg3; 
  {
    try {
      (arg1)->Tile::tap(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Tile_paint__SWIG_0(void * jarg1, unsigned int jarg2) {
  Tile *arg1 = (Tile *) 0 ;
  bool arg2 ;
  
  arg1 = (Tile *)jarg1; 
  arg2 = jarg2 ? true : false; 
  {
    try {
      (arg1)->paint(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Tile_paintSwigExplicitTile__SWIG_0(void * jarg1, unsigned int jarg2) {
  Tile *arg1 = (Tile *) 0 ;
  bool arg2 ;
  
  arg1 = (Tile *)jarg1; 
  arg2 = jarg2 ? true : false; 
  {
    try {
      (arg1)->Tile::paint(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Tile_paint__SWIG_1(void * jarg1) {
  Tile *arg1 = (Tile *) 0 ;
  
  arg1 = (Tile *)jarg1; 
  {
    try {
      (arg1)->paint();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Tile_paintSwigExplicitTile__SWIG_1(void * jarg1) {
  Tile *arg1 = (Tile *) 0 ;
  
  arg1 = (Tile *)jarg1; 
  {
    try {
      (arg1)->Tile::paint();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Tile_apply(void * jarg1, void * jarg2) {
  Tile *arg1 = (Tile *) 0 ;
  Vector arg2 ;
  Vector *argp2 ;
  
  arg1 = (Tile *)jarg1; 
  argp2 = (Vector *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null Vector", 0);
    return ;
  }
  arg2 = *argp2; 
  {
    try {
      (arg1)->apply(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Tile_applySwigExplicitTile(void * jarg1, void * jarg2) {
  Tile *arg1 = (Tile *) 0 ;
  Vector arg2 ;
  Vector *argp2 ;
  
  arg1 = (Tile *)jarg1; 
  argp2 = (Vector *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null Vector", 0);
    return ;
  }
  arg2 = *argp2; 
  {
    try {
      (arg1)->Tile::apply(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Tile_mode_set(void * jarg1, int jarg2) {
  Tile *arg1 = (Tile *) 0 ;
  int arg2 ;
  SwigDirector_Tile *darg = 0;
  
  arg1 = (Tile *)jarg1; 
  arg2 = (int)jarg2; 
  darg = dynamic_cast<SwigDirector_Tile *>(arg1);
  if (arg1) darg->mode = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Tile_mode_get(void * jarg1) {
  int jresult ;
  Tile *arg1 = (Tile *) 0 ;
  SwigDirector_Tile *darg = 0;
  int result;
  
  arg1 = (Tile *)jarg1; 
  darg = dynamic_cast<SwigDirector_Tile *>(arg1);
  result = (int) (darg->mode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Tile_slide_set(void * jarg1, int jarg2) {
  Tile *arg1 = (Tile *) 0 ;
  int arg2 ;
  SwigDirector_Tile *darg = 0;
  
  arg1 = (Tile *)jarg1; 
  arg2 = (int)jarg2; 
  darg = dynamic_cast<SwigDirector_Tile *>(arg1);
  if (arg1) darg->slide = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Tile_slide_get(void * jarg1) {
  int jresult ;
  Tile *arg1 = (Tile *) 0 ;
  SwigDirector_Tile *darg = 0;
  int result;
  
  arg1 = (Tile *)jarg1; 
  darg = dynamic_cast<SwigDirector_Tile *>(arg1);
  result = (int) (darg->slide);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Tile_vel_set(void * jarg1, void * jarg2) {
  Tile *arg1 = (Tile *) 0 ;
  Vector *arg2 = (Vector *) 0 ;
  SwigDirector_Tile *darg = 0;
  
  arg1 = (Tile *)jarg1; 
  arg2 = (Vector *)jarg2; 
  darg = dynamic_cast<SwigDirector_Tile *>(arg1);
  if (arg1) darg->vel = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Tile_vel_get(void * jarg1) {
  void * jresult ;
  Tile *arg1 = (Tile *) 0 ;
  SwigDirector_Tile *darg = 0;
  Vector *result = 0 ;
  
  arg1 = (Tile *)jarg1; 
  darg = dynamic_cast<SwigDirector_Tile *>(arg1);
  result = (Vector *)& (darg->vel);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Tile_director_connect(void *objarg, SwigDirector_Tile::SWIG_Callback0_t callback0, SwigDirector_Tile::SWIG_Callback1_t callback1, SwigDirector_Tile::SWIG_Callback2_t callback2, SwigDirector_Tile::SWIG_Callback3_t callback3, SwigDirector_Tile::SWIG_Callback4_t callback4, SwigDirector_Tile::SWIG_Callback5_t callback5, SwigDirector_Tile::SWIG_Callback6_t callback6, SwigDirector_Tile::SWIG_Callback7_t callback7, SwigDirector_Tile::SWIG_Callback8_t callback8, SwigDirector_Tile::SWIG_Callback9_t callback9, SwigDirector_Tile::SWIG_Callback10_t callback10, SwigDirector_Tile::SWIG_Callback11_t callback11, SwigDirector_Tile::SWIG_Callback12_t callback12, SwigDirector_Tile::SWIG_Callback13_t callback13, SwigDirector_Tile::SWIG_Callback14_t callback14, SwigDirector_Tile::SWIG_Callback15_t callback15, SwigDirector_Tile::SWIG_Callback16_t callback16, SwigDirector_Tile::SWIG_Callback17_t callback17) {
  Tile *obj = (Tile *)objarg;
  SwigDirector_Tile *director = dynamic_cast<SwigDirector_Tile *>(obj);
  if (director) {
    director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7, callback8, callback9, callback10, callback11, callback12, callback13, callback14, callback15, callback16, callback17);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Container__SWIG_0(int jarg1, int jarg2, int jarg3, int jarg4, double jarg5, void * jarg6, int jarg7) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  double arg5 ;
  RGBATexture *arg6 = (RGBATexture *) 0 ;
  int arg7 ;
  Container *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (RGBATexture *)jarg6; 
  arg7 = (int)jarg7; 
  {
    try {
      result = (Container *)new SwigDirector_Container(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Container__SWIG_1(int jarg1, int jarg2, int jarg3, int jarg4, double jarg5, void * jarg6) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  double arg5 ;
  RGBATexture *arg6 = (RGBATexture *) 0 ;
  Container *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (RGBATexture *)jarg6; 
  {
    try {
      result = (Container *)new SwigDirector_Container(arg1,arg2,arg3,arg4,arg5,arg6);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Container__SWIG_2(int jarg1, int jarg2, int jarg3, int jarg4, double jarg5) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  double arg5 ;
  Container *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      result = (Container *)new SwigDirector_Container(arg1,arg2,arg3,arg4,arg5);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Container__SWIG_3(int jarg1, int jarg2, int jarg3, int jarg4) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  Container *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      result = (Container *)new SwigDirector_Container(arg1,arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Container(void * jarg1) {
  Container *arg1 = (Container *) 0 ;
  
  arg1 = (Container *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_add__SWIG_0(void * jarg1, void * jarg2, int jarg3) {
  Container *arg1 = (Container *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  int arg3 ;
  
  arg1 = (Container *)jarg1; 
  arg2 = (Widget *)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      (arg1)->add(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_add__SWIG_1(void * jarg1, void * jarg2) {
  Container *arg1 = (Container *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  
  arg1 = (Container *)jarg1; 
  arg2 = (Widget *)jarg2; 
  {
    try {
      (arg1)->add(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_raise__SWIG_0(void * jarg1, void * jarg2) {
  Container *arg1 = (Container *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  
  arg1 = (Container *)jarg1; 
  arg2 = (Widget *)jarg2; 
  {
    try {
      (arg1)->raise(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_raiseSwigExplicitContainer__SWIG_0(void * jarg1, void * jarg2) {
  Container *arg1 = (Container *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  
  arg1 = (Container *)jarg1; 
  arg2 = (Widget *)jarg2; 
  {
    try {
      (arg1)->Container::raise(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_raise__SWIG_1(void * jarg1) {
  Container *arg1 = (Container *) 0 ;
  
  arg1 = (Container *)jarg1; 
  {
    try {
      (arg1)->raise();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_raiseSwigExplicitContainer__SWIG_1(void * jarg1) {
  Container *arg1 = (Container *) 0 ;
  
  arg1 = (Container *)jarg1; 
  {
    try {
      (arg1)->Container::raise();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_lower__SWIG_0(void * jarg1, void * jarg2) {
  Container *arg1 = (Container *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  
  arg1 = (Container *)jarg1; 
  arg2 = (Widget *)jarg2; 
  {
    try {
      (arg1)->lower(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_lowerSwigExplicitContainer__SWIG_0(void * jarg1, void * jarg2) {
  Container *arg1 = (Container *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  
  arg1 = (Container *)jarg1; 
  arg2 = (Widget *)jarg2; 
  {
    try {
      (arg1)->Container::lower(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_lower__SWIG_1(void * jarg1) {
  Container *arg1 = (Container *) 0 ;
  
  arg1 = (Container *)jarg1; 
  {
    try {
      (arg1)->lower();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_lowerSwigExplicitContainer__SWIG_1(void * jarg1) {
  Container *arg1 = (Container *) 0 ;
  
  arg1 = (Container *)jarg1; 
  {
    try {
      (arg1)->Container::lower();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_remove__SWIG_0(void * jarg1, void * jarg2, int jarg3) {
  Container *arg1 = (Container *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  int arg3 ;
  
  arg1 = (Container *)jarg1; 
  arg2 = (Widget *)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      (arg1)->remove(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_remove__SWIG_1(void * jarg1, void * jarg2) {
  Container *arg1 = (Container *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  
  arg1 = (Container *)jarg1; 
  arg2 = (Widget *)jarg2; 
  {
    try {
      (arg1)->remove(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_draw(void * jarg1) {
  Container *arg1 = (Container *) 0 ;
  
  arg1 = (Container *)jarg1; 
  {
    try {
      (arg1)->draw();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_drawSwigExplicitContainer(void * jarg1) {
  Container *arg1 = (Container *) 0 ;
  
  arg1 = (Container *)jarg1; 
  {
    try {
      (arg1)->Container::draw();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_paint__SWIG_0(void * jarg1, unsigned int jarg2) {
  Container *arg1 = (Container *) 0 ;
  bool arg2 ;
  
  arg1 = (Container *)jarg1; 
  arg2 = jarg2 ? true : false; 
  {
    try {
      (arg1)->paint(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_paintSwigExplicitContainer__SWIG_0(void * jarg1, unsigned int jarg2) {
  Container *arg1 = (Container *) 0 ;
  bool arg2 ;
  
  arg1 = (Container *)jarg1; 
  arg2 = jarg2 ? true : false; 
  {
    try {
      (arg1)->Container::paint(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_paint__SWIG_1(void * jarg1) {
  Container *arg1 = (Container *) 0 ;
  
  arg1 = (Container *)jarg1; 
  {
    try {
      (arg1)->paint();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_paintSwigExplicitContainer__SWIG_1(void * jarg1) {
  Container *arg1 = (Container *) 0 ;
  
  arg1 = (Container *)jarg1; 
  {
    try {
      (arg1)->Container::paint();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_doUpdate__SWIG_0(void * jarg1, void * jarg2) {
  Container *arg1 = (Container *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  
  arg1 = (Container *)jarg1; 
  arg2 = (Widget *)jarg2; 
  {
    try {
      (arg1)->doUpdate(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_doUpdateSwigExplicitContainer__SWIG_0(void * jarg1, void * jarg2) {
  Container *arg1 = (Container *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  
  arg1 = (Container *)jarg1; 
  arg2 = (Widget *)jarg2; 
  {
    try {
      (arg1)->Container::doUpdate(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_doUpdate__SWIG_1(void * jarg1) {
  Container *arg1 = (Container *) 0 ;
  
  arg1 = (Container *)jarg1; 
  {
    try {
      (arg1)->doUpdate();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_doUpdateSwigExplicitContainer__SWIG_1(void * jarg1) {
  Container *arg1 = (Container *) 0 ;
  
  arg1 = (Container *)jarg1; 
  {
    try {
      (arg1)->Container::doUpdate();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_tap(void * jarg1, void * jarg2, int jarg3) {
  Container *arg1 = (Container *) 0 ;
  Vector arg2 ;
  int arg3 ;
  Vector *argp2 ;
  
  arg1 = (Container *)jarg1; 
  argp2 = (Vector *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null Vector", 0);
    return ;
  }
  arg2 = *argp2; 
  arg3 = (int)jarg3; 
  {
    try {
      (arg1)->tap(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_tapSwigExplicitContainer(void * jarg1, void * jarg2, int jarg3) {
  Container *arg1 = (Container *) 0 ;
  Vector arg2 ;
  int arg3 ;
  Vector *argp2 ;
  
  arg1 = (Container *)jarg1; 
  argp2 = (Vector *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null Vector", 0);
    return ;
  }
  arg2 = *argp2; 
  arg3 = (int)jarg3; 
  {
    try {
      (arg1)->Container::tap(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_Container_totalHeight(void * jarg1) {
  int jresult ;
  Container *arg1 = (Container *) 0 ;
  SwigDirector_Container *darg = 0;
  int result;
  
  arg1 = (Container *)jarg1; 
  darg = dynamic_cast<SwigDirector_Container *>(arg1);
  {
    try {
      result = (int)(darg)->totalHeight();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_widgets_set(void * jarg1, void * jarg2) {
  Container *arg1 = (Container *) 0 ;
  std::deque< Widget * > *arg2 = (std::deque< Widget * > *) 0 ;
  SwigDirector_Container *darg = 0;
  
  arg1 = (Container *)jarg1; 
  arg2 = (std::deque< Widget * > *)jarg2; 
  darg = dynamic_cast<SwigDirector_Container *>(arg1);
  if (arg1) darg->widgets = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Container_widgets_get(void * jarg1) {
  void * jresult ;
  Container *arg1 = (Container *) 0 ;
  SwigDirector_Container *darg = 0;
  std::deque< Widget * > *result = 0 ;
  
  arg1 = (Container *)jarg1; 
  darg = dynamic_cast<SwigDirector_Container *>(arg1);
  result = (std::deque< Widget * > *)& (darg->widgets);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_locked_set(void * jarg1, int jarg2) {
  Container *arg1 = (Container *) 0 ;
  int arg2 ;
  SwigDirector_Container *darg = 0;
  
  arg1 = (Container *)jarg1; 
  arg2 = (int)jarg2; 
  darg = dynamic_cast<SwigDirector_Container *>(arg1);
  if (arg1) darg->locked = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_Container_locked_get(void * jarg1) {
  int jresult ;
  Container *arg1 = (Container *) 0 ;
  SwigDirector_Container *darg = 0;
  int result;
  
  arg1 = (Container *)jarg1; 
  darg = dynamic_cast<SwigDirector_Container *>(arg1);
  result = (int) (darg->locked);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Container_director_connect(void *objarg, SwigDirector_Container::SWIG_Callback0_t callback0, SwigDirector_Container::SWIG_Callback1_t callback1, SwigDirector_Container::SWIG_Callback2_t callback2, SwigDirector_Container::SWIG_Callback3_t callback3, SwigDirector_Container::SWIG_Callback4_t callback4, SwigDirector_Container::SWIG_Callback5_t callback5, SwigDirector_Container::SWIG_Callback6_t callback6, SwigDirector_Container::SWIG_Callback7_t callback7, SwigDirector_Container::SWIG_Callback8_t callback8, SwigDirector_Container::SWIG_Callback9_t callback9, SwigDirector_Container::SWIG_Callback10_t callback10, SwigDirector_Container::SWIG_Callback11_t callback11, SwigDirector_Container::SWIG_Callback12_t callback12, SwigDirector_Container::SWIG_Callback13_t callback13, SwigDirector_Container::SWIG_Callback14_t callback14, SwigDirector_Container::SWIG_Callback15_t callback15, SwigDirector_Container::SWIG_Callback16_t callback16, SwigDirector_Container::SWIG_Callback17_t callback17) {
  Container *obj = (Container *)objarg;
  SwigDirector_Container *director = dynamic_cast<SwigDirector_Container *>(obj);
  if (director) {
    director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7, callback8, callback9, callback10, callback11, callback12, callback13, callback14, callback15, callback16, callback17);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Checkbox__SWIG_0(int jarg1, int jarg2, int jarg3, int jarg4, double jarg5, void * jarg6) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  double arg5 ;
  RGBATexture *arg6 = (RGBATexture *) 0 ;
  Checkbox *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (RGBATexture *)jarg6; 
  {
    try {
      result = (Checkbox *)new Checkbox(arg1,arg2,arg3,arg4,arg5,arg6);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Checkbox__SWIG_1(int jarg1, int jarg2, int jarg3, int jarg4, double jarg5) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  double arg5 ;
  Checkbox *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      result = (Checkbox *)new Checkbox(arg1,arg2,arg3,arg4,arg5);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Checkbox__SWIG_2(int jarg1, int jarg2, int jarg3, int jarg4) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  Checkbox *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      result = (Checkbox *)new Checkbox(arg1,arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Checkbox__SWIG_3(int jarg1, int jarg2, int jarg3) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  Checkbox *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = (Checkbox *)new Checkbox(arg1,arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Checkbox__SWIG_4(int jarg1, int jarg2) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  Checkbox *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      result = (Checkbox *)new Checkbox(arg1,arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Checkbox(void * jarg1) {
  Checkbox *arg1 = (Checkbox *) 0 ;
  
  arg1 = (Checkbox *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Checkbox_draw(void * jarg1) {
  Checkbox *arg1 = (Checkbox *) 0 ;
  
  arg1 = (Checkbox *)jarg1; 
  {
    try {
      (arg1)->draw();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Checkbox_tap(void * jarg1, void * jarg2, int jarg3) {
  Checkbox *arg1 = (Checkbox *) 0 ;
  Vector arg2 ;
  int arg3 ;
  Vector *argp2 ;
  
  arg1 = (Checkbox *)jarg1; 
  argp2 = (Vector *)jarg2; 
  if (!argp2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "Attempt to dereference null Vector", 0);
    return ;
  }
  arg2 = *argp2; 
  arg3 = (int)jarg3; 
  {
    try {
      (arg1)->tap(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_Checkbox_get(void * jarg1) {
  int jresult ;
  Checkbox *arg1 = (Checkbox *) 0 ;
  int result;
  
  arg1 = (Checkbox *)jarg1; 
  {
    try {
      result = (int)(arg1)->get();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Checkbox_set(void * jarg1, int jarg2) {
  Checkbox *arg1 = (Checkbox *) 0 ;
  int arg2 ;
  
  arg1 = (Checkbox *)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      (arg1)->set(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Textbox__SWIG_0(int jarg1, int jarg2, int jarg3, int jarg4, int jarg5, double jarg6, void * jarg7) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  double arg6 ;
  RGBATexture *arg7 = (RGBATexture *) 0 ;
  Textbox *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  arg7 = (RGBATexture *)jarg7; 
  {
    try {
      result = (Textbox *)new Textbox(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Textbox__SWIG_1(int jarg1, int jarg2, int jarg3, int jarg4, int jarg5, double jarg6) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  double arg6 ;
  Textbox *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (double)jarg6; 
  {
    try {
      result = (Textbox *)new Textbox(arg1,arg2,arg3,arg4,arg5,arg6);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Textbox__SWIG_2(int jarg1, int jarg2, int jarg3, int jarg4, int jarg5) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  Textbox *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  {
    try {
      result = (Textbox *)new Textbox(arg1,arg2,arg3,arg4,arg5);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Textbox__SWIG_3(int jarg1, int jarg2, int jarg3, int jarg4) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  Textbox *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      result = (Textbox *)new Textbox(arg1,arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Textbox__SWIG_4(int jarg1, int jarg2, int jarg3) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  Textbox *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = (Textbox *)new Textbox(arg1,arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Textbox(void * jarg1) {
  Textbox *arg1 = (Textbox *) 0 ;
  
  arg1 = (Textbox *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Textbox_draw(void * jarg1) {
  Textbox *arg1 = (Textbox *) 0 ;
  
  arg1 = (Textbox *)jarg1; 
  {
    try {
      (arg1)->draw();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Textbox_action(void * jarg1, void * jarg2) {
  Textbox *arg1 = (Textbox *) 0 ;
  Gesture *arg2 = (Gesture *) 0 ;
  
  arg1 = (Textbox *)jarg1; 
  arg2 = (Gesture *)jarg2; 
  {
    try {
      (arg1)->action(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_Textbox_get(void * jarg1) {
  char * jresult ;
  Textbox *arg1 = (Textbox *) 0 ;
  std::string result;
  
  arg1 = (Textbox *)jarg1; 
  {
    try {
      result = (arg1)->get();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = SWIG_csharp_string_callback((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Textbox_set(void * jarg1, char * jarg2) {
  Textbox *arg1 = (Textbox *) 0 ;
  std::string arg2 ;
  
  arg1 = (Textbox *)jarg1; 
  if (!jarg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return ;
  }
  (&arg2)->assign(jarg2); 
  {
    try {
      (arg1)->set(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Slider__SWIG_0(int jarg1, int jarg2, int jarg3, int jarg4, double jarg5, void * jarg6) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  double arg5 ;
  RGBATexture *arg6 = (RGBATexture *) 0 ;
  Slider *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (RGBATexture *)jarg6; 
  {
    try {
      result = (Slider *)new SwigDirector_Slider(arg1,arg2,arg3,arg4,arg5,arg6);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Slider__SWIG_1(int jarg1, int jarg2, int jarg3, int jarg4, double jarg5) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  double arg5 ;
  Slider *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (double)jarg5; 
  {
    try {
      result = (Slider *)new SwigDirector_Slider(arg1,arg2,arg3,arg4,arg5);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Slider__SWIG_2(int jarg1, int jarg2, int jarg3, int jarg4) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  Slider *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      result = (Slider *)new SwigDirector_Slider(arg1,arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Slider__SWIG_3(int jarg1, int jarg2, int jarg3) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  Slider *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = (Slider *)new SwigDirector_Slider(arg1,arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Slider__SWIG_4(int jarg1, int jarg2) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  Slider *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      result = (Slider *)new SwigDirector_Slider(arg1,arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Slider(void * jarg1) {
  Slider *arg1 = (Slider *) 0 ;
  
  arg1 = (Slider *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Slider_action(void * jarg1, void * jarg2) {
  Slider *arg1 = (Slider *) 0 ;
  Gesture *arg2 = (Gesture *) 0 ;
  
  arg1 = (Slider *)jarg1; 
  arg2 = (Gesture *)jarg2; 
  {
    try {
      (arg1)->action(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Slider_actionSwigExplicitSlider(void * jarg1, void * jarg2) {
  Slider *arg1 = (Slider *) 0 ;
  Gesture *arg2 = (Gesture *) 0 ;
  
  arg1 = (Slider *)jarg1; 
  arg2 = (Gesture *)jarg2; 
  {
    try {
      (arg1)->Slider::action(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Slider_draw(void * jarg1) {
  Slider *arg1 = (Slider *) 0 ;
  
  arg1 = (Slider *)jarg1; 
  {
    try {
      (arg1)->draw();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Slider_drawSwigExplicitSlider(void * jarg1) {
  Slider *arg1 = (Slider *) 0 ;
  
  arg1 = (Slider *)jarg1; 
  {
    try {
      (arg1)->Slider::draw();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT double SWIGSTDCALL CSharp_Slider_getpos(void * jarg1) {
  double jresult ;
  Slider *arg1 = (Slider *) 0 ;
  double result;
  
  arg1 = (Slider *)jarg1; 
  {
    try {
      result = (double)(arg1)->getpos();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Slider_pos_set(void * jarg1, double jarg2) {
  Slider *arg1 = (Slider *) 0 ;
  double arg2 ;
  SwigDirector_Slider *darg = 0;
  
  arg1 = (Slider *)jarg1; 
  arg2 = (double)jarg2; 
  darg = dynamic_cast<SwigDirector_Slider *>(arg1);
  if (arg1) darg->pos = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Slider_pos_get(void * jarg1) {
  double jresult ;
  Slider *arg1 = (Slider *) 0 ;
  SwigDirector_Slider *darg = 0;
  double result;
  
  arg1 = (Slider *)jarg1; 
  darg = dynamic_cast<SwigDirector_Slider *>(arg1);
  result = (double) (darg->pos);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Slider_director_connect(void *objarg, SwigDirector_Slider::SWIG_Callback0_t callback0, SwigDirector_Slider::SWIG_Callback1_t callback1, SwigDirector_Slider::SWIG_Callback2_t callback2, SwigDirector_Slider::SWIG_Callback3_t callback3, SwigDirector_Slider::SWIG_Callback4_t callback4, SwigDirector_Slider::SWIG_Callback5_t callback5, SwigDirector_Slider::SWIG_Callback6_t callback6, SwigDirector_Slider::SWIG_Callback7_t callback7, SwigDirector_Slider::SWIG_Callback8_t callback8, SwigDirector_Slider::SWIG_Callback9_t callback9, SwigDirector_Slider::SWIG_Callback10_t callback10, SwigDirector_Slider::SWIG_Callback11_t callback11, SwigDirector_Slider::SWIG_Callback12_t callback12, SwigDirector_Slider::SWIG_Callback13_t callback13, SwigDirector_Slider::SWIG_Callback14_t callback14) {
  Slider *obj = (Slider *)objarg;
  SwigDirector_Slider *director = dynamic_cast<SwigDirector_Slider *>(obj);
  if (director) {
    director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7, callback8, callback9, callback10, callback11, callback12, callback13, callback14);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Dial__SWIG_0(int jarg1, int jarg2, int jarg3, double jarg4, void * jarg5) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  double arg4 ;
  RGBATexture *arg5 = (RGBATexture *) 0 ;
  Dial *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (RGBATexture *)jarg5; 
  {
    try {
      result = (Dial *)new SwigDirector_Dial(arg1,arg2,arg3,arg4,arg5);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Dial__SWIG_1(int jarg1, int jarg2, int jarg3, double jarg4) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  double arg4 ;
  Dial *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      result = (Dial *)new SwigDirector_Dial(arg1,arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Dial__SWIG_2(int jarg1, int jarg2, int jarg3) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  Dial *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = (Dial *)new SwigDirector_Dial(arg1,arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Dial__SWIG_3(int jarg1, int jarg2) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  Dial *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      result = (Dial *)new SwigDirector_Dial(arg1,arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Dial__SWIG_4(int jarg1) {
  void * jresult ;
  int arg1 ;
  Dial *result = 0 ;
  
  arg1 = (int)jarg1; 
  {
    try {
      result = (Dial *)new SwigDirector_Dial(arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Dial(void * jarg1) {
  Dial *arg1 = (Dial *) 0 ;
  
  arg1 = (Dial *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Dial_draw(void * jarg1) {
  Dial *arg1 = (Dial *) 0 ;
  
  arg1 = (Dial *)jarg1; 
  {
    try {
      (arg1)->draw();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Dial_drawSwigExplicitDial(void * jarg1) {
  Dial *arg1 = (Dial *) 0 ;
  
  arg1 = (Dial *)jarg1; 
  {
    try {
      (arg1)->Dial::draw();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Dial_action(void * jarg1, void * jarg2) {
  Dial *arg1 = (Dial *) 0 ;
  Gesture *arg2 = (Gesture *) 0 ;
  
  arg1 = (Dial *)jarg1; 
  arg2 = (Gesture *)jarg2; 
  {
    try {
      (arg1)->action(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Dial_actionSwigExplicitDial(void * jarg1, void * jarg2) {
  Dial *arg1 = (Dial *) 0 ;
  Gesture *arg2 = (Gesture *) 0 ;
  
  arg1 = (Dial *)jarg1; 
  arg2 = (Gesture *)jarg2; 
  {
    try {
      (arg1)->Dial::action(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Dial_outline(void * jarg1) {
  Dial *arg1 = (Dial *) 0 ;
  
  arg1 = (Dial *)jarg1; 
  {
    try {
      (arg1)->outline();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Dial_outlineSwigExplicitDial(void * jarg1) {
  Dial *arg1 = (Dial *) 0 ;
  
  arg1 = (Dial *)jarg1; 
  {
    try {
      (arg1)->Dial::outline();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT double SWIGSTDCALL CSharp_Dial_get(void * jarg1) {
  double jresult ;
  Dial *arg1 = (Dial *) 0 ;
  double result;
  
  arg1 = (Dial *)jarg1; 
  {
    try {
      result = (double)(arg1)->get();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Dial_set(void * jarg1, double jarg2, double jarg3, double jarg4) {
  Dial *arg1 = (Dial *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  
  arg1 = (Dial *)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  {
    try {
      (arg1)->set(arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Dial_k_angle_set(void * jarg1, double jarg2) {
  Dial *arg1 = (Dial *) 0 ;
  double arg2 ;
  SwigDirector_Dial *darg = 0;
  
  arg1 = (Dial *)jarg1; 
  arg2 = (double)jarg2; 
  darg = dynamic_cast<SwigDirector_Dial *>(arg1);
  if (arg1) darg->k_angle = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Dial_k_angle_get(void * jarg1) {
  double jresult ;
  Dial *arg1 = (Dial *) 0 ;
  SwigDirector_Dial *darg = 0;
  double result;
  
  arg1 = (Dial *)jarg1; 
  darg = dynamic_cast<SwigDirector_Dial *>(arg1);
  result = (double) (darg->k_angle);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Dial_k_lower_set(void * jarg1, double jarg2) {
  Dial *arg1 = (Dial *) 0 ;
  double arg2 ;
  SwigDirector_Dial *darg = 0;
  
  arg1 = (Dial *)jarg1; 
  arg2 = (double)jarg2; 
  darg = dynamic_cast<SwigDirector_Dial *>(arg1);
  if (arg1) darg->k_lower = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Dial_k_lower_get(void * jarg1) {
  double jresult ;
  Dial *arg1 = (Dial *) 0 ;
  SwigDirector_Dial *darg = 0;
  double result;
  
  arg1 = (Dial *)jarg1; 
  darg = dynamic_cast<SwigDirector_Dial *>(arg1);
  result = (double) (darg->k_lower);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Dial_k_upper_set(void * jarg1, double jarg2) {
  Dial *arg1 = (Dial *) 0 ;
  double arg2 ;
  SwigDirector_Dial *darg = 0;
  
  arg1 = (Dial *)jarg1; 
  arg2 = (double)jarg2; 
  darg = dynamic_cast<SwigDirector_Dial *>(arg1);
  if (arg1) darg->k_upper = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_Dial_k_upper_get(void * jarg1) {
  double jresult ;
  Dial *arg1 = (Dial *) 0 ;
  SwigDirector_Dial *darg = 0;
  double result;
  
  arg1 = (Dial *)jarg1; 
  darg = dynamic_cast<SwigDirector_Dial *>(arg1);
  result = (double) (darg->k_upper);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Dial_oldpos_set(void * jarg1, void * jarg2) {
  Dial *arg1 = (Dial *) 0 ;
  Vector *arg2 = (Vector *) 0 ;
  SwigDirector_Dial *darg = 0;
  
  arg1 = (Dial *)jarg1; 
  arg2 = (Vector *)jarg2; 
  darg = dynamic_cast<SwigDirector_Dial *>(arg1);
  if (arg1) darg->oldpos = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_Dial_oldpos_get(void * jarg1) {
  void * jresult ;
  Dial *arg1 = (Dial *) 0 ;
  SwigDirector_Dial *darg = 0;
  Vector *result = 0 ;
  
  arg1 = (Dial *)jarg1; 
  darg = dynamic_cast<SwigDirector_Dial *>(arg1);
  result = (Vector *)& (darg->oldpos);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_Dial_director_connect(void *objarg, SwigDirector_Dial::SWIG_Callback0_t callback0, SwigDirector_Dial::SWIG_Callback1_t callback1, SwigDirector_Dial::SWIG_Callback2_t callback2, SwigDirector_Dial::SWIG_Callback3_t callback3, SwigDirector_Dial::SWIG_Callback4_t callback4, SwigDirector_Dial::SWIG_Callback5_t callback5, SwigDirector_Dial::SWIG_Callback6_t callback6, SwigDirector_Dial::SWIG_Callback7_t callback7, SwigDirector_Dial::SWIG_Callback8_t callback8, SwigDirector_Dial::SWIG_Callback9_t callback9, SwigDirector_Dial::SWIG_Callback10_t callback10, SwigDirector_Dial::SWIG_Callback11_t callback11, SwigDirector_Dial::SWIG_Callback12_t callback12, SwigDirector_Dial::SWIG_Callback13_t callback13, SwigDirector_Dial::SWIG_Callback14_t callback14) {
  Dial *obj = (Dial *)objarg;
  SwigDirector_Dial *director = dynamic_cast<SwigDirector_Dial *>(obj);
  if (director) {
    director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7, callback8, callback9, callback10, callback11, callback12, callback13, callback14);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MasterContainer__SWIG_0(int jarg1, int jarg2, int jarg3) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  MasterContainer *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = (MasterContainer *)new SwigDirector_MasterContainer(arg1,arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_MasterContainer__SWIG_1(int jarg1, int jarg2) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  MasterContainer *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      result = (MasterContainer *)new SwigDirector_MasterContainer(arg1,arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_MasterContainer(void * jarg1) {
  MasterContainer *arg1 = (MasterContainer *) 0 ;
  
  arg1 = (MasterContainer *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_MasterContainer_doUpdate__SWIG_0(void * jarg1, void * jarg2) {
  MasterContainer *arg1 = (MasterContainer *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  
  arg1 = (MasterContainer *)jarg1; 
  arg2 = (Widget *)jarg2; 
  {
    try {
      (arg1)->doUpdate(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_MasterContainer_doUpdateSwigExplicitMasterContainer__SWIG_0(void * jarg1, void * jarg2) {
  MasterContainer *arg1 = (MasterContainer *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  
  arg1 = (MasterContainer *)jarg1; 
  arg2 = (Widget *)jarg2; 
  {
    try {
      (arg1)->MasterContainer::doUpdate(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_MasterContainer_doUpdate__SWIG_1(void * jarg1) {
  MasterContainer *arg1 = (MasterContainer *) 0 ;
  
  arg1 = (MasterContainer *)jarg1; 
  {
    try {
      (arg1)->doUpdate();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_MasterContainer_doUpdateSwigExplicitMasterContainer__SWIG_1(void * jarg1) {
  MasterContainer *arg1 = (MasterContainer *) 0 ;
  
  arg1 = (MasterContainer *)jarg1; 
  {
    try {
      (arg1)->MasterContainer::doUpdate();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_MasterContainer_adjust(void * jarg1, int jarg2, int jarg3) {
  MasterContainer *arg1 = (MasterContainer *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (MasterContainer *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      (arg1)->adjust(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_MasterContainer_usePeak(void * jarg1) {
  MasterContainer *arg1 = (MasterContainer *) 0 ;
  
  arg1 = (MasterContainer *)jarg1; 
  {
    try {
      (arg1)->usePeak();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_MasterContainer_process_gestures(void * jarg1) {
  unsigned int jresult ;
  MasterContainer *arg1 = (MasterContainer *) 0 ;
  bool result;
  
  arg1 = (MasterContainer *)jarg1; 
  {
    try {
      result = (bool)(arg1)->process_gestures();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MasterContainer_matcher_set(void * jarg1, void * jarg2) {
  MasterContainer *arg1 = (MasterContainer *) 0 ;
  InternalMatcher *arg2 = (InternalMatcher *) 0 ;
  SwigDirector_MasterContainer *darg = 0;
  
  arg1 = (MasterContainer *)jarg1; 
  arg2 = (InternalMatcher *)jarg2; 
  darg = dynamic_cast<SwigDirector_MasterContainer *>(arg1);
  if (arg1) darg->matcher = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MasterContainer_matcher_get(void * jarg1) {
  void * jresult ;
  MasterContainer *arg1 = (MasterContainer *) 0 ;
  SwigDirector_MasterContainer *darg = 0;
  InternalMatcher *result = 0 ;
  
  arg1 = (MasterContainer *)jarg1; 
  darg = dynamic_cast<SwigDirector_MasterContainer *>(arg1);
  result = (InternalMatcher *) (darg->matcher);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MasterContainer_input_set(void * jarg1, void * jarg2) {
  MasterContainer *arg1 = (MasterContainer *) 0 ;
  MatcherTUIOInput *arg2 = (MatcherTUIOInput *) 0 ;
  SwigDirector_MasterContainer *darg = 0;
  
  arg1 = (MasterContainer *)jarg1; 
  arg2 = (MatcherTUIOInput *)jarg2; 
  darg = dynamic_cast<SwigDirector_MasterContainer *>(arg1);
  if (arg1) darg->input = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MasterContainer_input_get(void * jarg1) {
  void * jresult ;
  MasterContainer *arg1 = (MasterContainer *) 0 ;
  SwigDirector_MasterContainer *darg = 0;
  MatcherTUIOInput *result = 0 ;
  
  arg1 = (MasterContainer *)jarg1; 
  darg = dynamic_cast<SwigDirector_MasterContainer *>(arg1);
  result = (MatcherTUIOInput *)& (darg->input);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MasterContainer_inthread_set(void * jarg1, void * jarg2) {
  MasterContainer *arg1 = (MasterContainer *) 0 ;
  InputThread *arg2 = (InputThread *) 0 ;
  SwigDirector_MasterContainer *darg = 0;
  
  arg1 = (MasterContainer *)jarg1; 
  arg2 = (InputThread *)jarg2; 
  darg = dynamic_cast<SwigDirector_MasterContainer *>(arg1);
  if (arg1) darg->inthread = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_MasterContainer_inthread_get(void * jarg1) {
  void * jresult ;
  MasterContainer *arg1 = (MasterContainer *) 0 ;
  SwigDirector_MasterContainer *darg = 0;
  InputThread *result = 0 ;
  
  arg1 = (MasterContainer *)jarg1; 
  darg = dynamic_cast<SwigDirector_MasterContainer *>(arg1);
  result = (InputThread *) (darg->inthread);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_MasterContainer_director_connect(void *objarg, SwigDirector_MasterContainer::SWIG_Callback0_t callback0, SwigDirector_MasterContainer::SWIG_Callback1_t callback1, SwigDirector_MasterContainer::SWIG_Callback2_t callback2, SwigDirector_MasterContainer::SWIG_Callback3_t callback3, SwigDirector_MasterContainer::SWIG_Callback4_t callback4, SwigDirector_MasterContainer::SWIG_Callback5_t callback5, SwigDirector_MasterContainer::SWIG_Callback6_t callback6, SwigDirector_MasterContainer::SWIG_Callback7_t callback7, SwigDirector_MasterContainer::SWIG_Callback8_t callback8, SwigDirector_MasterContainer::SWIG_Callback9_t callback9, SwigDirector_MasterContainer::SWIG_Callback10_t callback10, SwigDirector_MasterContainer::SWIG_Callback11_t callback11, SwigDirector_MasterContainer::SWIG_Callback12_t callback12, SwigDirector_MasterContainer::SWIG_Callback13_t callback13, SwigDirector_MasterContainer::SWIG_Callback14_t callback14, SwigDirector_MasterContainer::SWIG_Callback15_t callback15, SwigDirector_MasterContainer::SWIG_Callback16_t callback16, SwigDirector_MasterContainer::SWIG_Callback17_t callback17) {
  MasterContainer *obj = (MasterContainer *)objarg;
  SwigDirector_MasterContainer *director = dynamic_cast<SwigDirector_MasterContainer *>(obj);
  if (director) {
    director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7, callback8, callback9, callback10, callback11, callback12, callback13, callback14, callback15, callback16, callback17);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Window__SWIG_0(int jarg1, int jarg2, char * jarg3, int jarg4) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  std::string arg3 ;
  int arg4 ;
  Window *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg3)->assign(jarg3); 
  arg4 = (int)jarg4; 
  {
    try {
      result = (Window *)new SwigDirector_Window(arg1,arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Window__SWIG_1(int jarg1, int jarg2, char * jarg3) {
  void * jresult ;
  int arg1 ;
  int arg2 ;
  std::string arg3 ;
  Window *result = 0 ;
  
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  if (!jarg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "null string", 0);
    return 0;
  }
  (&arg3)->assign(jarg3); 
  {
    try {
      result = (Window *)new SwigDirector_Window(arg1,arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Window(void * jarg1) {
  Window *arg1 = (Window *) 0 ;
  
  arg1 = (Window *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_idle(void * jarg1) {
  Window *arg1 = (Window *) 0 ;
  
  arg1 = (Window *)jarg1; 
  {
    try {
      (arg1)->idle();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_idleSwigExplicitWindow(void * jarg1) {
  Window *arg1 = (Window *) 0 ;
  
  arg1 = (Window *)jarg1; 
  {
    try {
      (arg1)->Window::idle();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_display(void * jarg1) {
  Window *arg1 = (Window *) 0 ;
  
  arg1 = (Window *)jarg1; 
  {
    try {
      (arg1)->display();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_displaySwigExplicitWindow(void * jarg1) {
  Window *arg1 = (Window *) 0 ;
  
  arg1 = (Window *)jarg1; 
  {
    try {
      (arg1)->Window::display();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_reshape(void * jarg1, int jarg2, int jarg3) {
  Window *arg1 = (Window *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (Window *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      (arg1)->reshape(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_reshapeSwigExplicitWindow(void * jarg1, int jarg2, int jarg3) {
  Window *arg1 = (Window *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (Window *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      (arg1)->Window::reshape(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_keyboard(void * jarg1, int jarg2, int jarg3, int jarg4) {
  Window *arg1 = (Window *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (Window *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      (arg1)->keyboard(arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_keyboardSwigExplicitWindow(void * jarg1, int jarg2, int jarg3, int jarg4) {
  Window *arg1 = (Window *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (Window *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      (arg1)->Window::keyboard(arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_mouse(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6) {
  Window *arg1 = (Window *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  arg1 = (Window *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  {
    try {
      (arg1)->mouse(arg2,arg3,arg4,arg5,arg6);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_mouseSwigExplicitWindow(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6) {
  Window *arg1 = (Window *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  arg1 = (Window *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  {
    try {
      (arg1)->Window::mouse(arg2,arg3,arg4,arg5,arg6);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_motion(void * jarg1, int jarg2, int jarg3, int jarg4) {
  Window *arg1 = (Window *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (Window *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      (arg1)->motion(arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_motionSwigExplicitWindow(void * jarg1, int jarg2, int jarg3, int jarg4) {
  Window *arg1 = (Window *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (Window *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      (arg1)->Window::motion(arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_passive(void * jarg1, int jarg2, int jarg3, int jarg4) {
  Window *arg1 = (Window *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (Window *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      (arg1)->passive(arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_passiveSwigExplicitWindow(void * jarg1, int jarg2, int jarg3, int jarg4) {
  Window *arg1 = (Window *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (Window *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      (arg1)->Window::passive(arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_entry(void * jarg1, int jarg2, int jarg3) {
  Window *arg1 = (Window *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (Window *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      (arg1)->entry(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_entrySwigExplicitWindow(void * jarg1, int jarg2, int jarg3) {
  Window *arg1 = (Window *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (Window *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      (arg1)->Window::entry(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_add__SWIG_0(void * jarg1, void * jarg2, int jarg3) {
  Window *arg1 = (Window *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  int arg3 ;
  
  arg1 = (Window *)jarg1; 
  arg2 = (Widget *)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      (arg1)->add(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_add__SWIG_1(void * jarg1, void * jarg2) {
  Window *arg1 = (Window *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  
  arg1 = (Window *)jarg1; 
  arg2 = (Widget *)jarg2; 
  {
    try {
      (arg1)->add(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_remove__SWIG_0(void * jarg1, void * jarg2, int jarg3) {
  Window *arg1 = (Window *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  int arg3 ;
  
  arg1 = (Window *)jarg1; 
  arg2 = (Widget *)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      (arg1)->remove(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_remove__SWIG_1(void * jarg1, void * jarg2) {
  Window *arg1 = (Window *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  
  arg1 = (Window *)jarg1; 
  arg2 = (Widget *)jarg2; 
  {
    try {
      (arg1)->remove(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_update__SWIG_0(void * jarg1, void * jarg2) {
  Window *arg1 = (Window *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  
  arg1 = (Window *)jarg1; 
  arg2 = (Widget *)jarg2; 
  {
    try {
      (arg1)->update(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_updateSwigExplicitWindow__SWIG_0(void * jarg1, void * jarg2) {
  Window *arg1 = (Window *) 0 ;
  Widget *arg2 = (Widget *) 0 ;
  
  arg1 = (Window *)jarg1; 
  arg2 = (Widget *)jarg2; 
  {
    try {
      (arg1)->Window::update(arg2);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_update__SWIG_1(void * jarg1) {
  Window *arg1 = (Window *) 0 ;
  
  arg1 = (Window *)jarg1; 
  {
    try {
      (arg1)->update();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_updateSwigExplicitWindow__SWIG_1(void * jarg1) {
  Window *arg1 = (Window *) 0 ;
  
  arg1 = (Window *)jarg1; 
  {
    try {
      (arg1)->Window::update();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_adjust(void * jarg1, int jarg2, int jarg3) {
  Window *arg1 = (Window *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (Window *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      (arg1)->adjust(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_usePeak(void * jarg1) {
  Window *arg1 = (Window *) 0 ;
  
  arg1 = (Window *)jarg1; 
  {
    try {
      (arg1)->usePeak();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Window_director_connect(void *objarg, SwigDirector_Window::SWIG_Callback0_t callback0, SwigDirector_Window::SWIG_Callback1_t callback1, SwigDirector_Window::SWIG_Callback2_t callback2, SwigDirector_Window::SWIG_Callback3_t callback3, SwigDirector_Window::SWIG_Callback4_t callback4, SwigDirector_Window::SWIG_Callback5_t callback5, SwigDirector_Window::SWIG_Callback6_t callback6, SwigDirector_Window::SWIG_Callback7_t callback7, SwigDirector_Window::SWIG_Callback8_t callback8, SwigDirector_Window::SWIG_Callback9_t callback9) {
  Window *obj = (Window *)objarg;
  SwigDirector_Window *director = dynamic_cast<SwigDirector_Window *>(obj);
  if (director) {
    director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7, callback8, callback9);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Mouse__SWIG_0(char * jarg1) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  Mouse *result = 0 ;
  
  arg1 = (char *)jarg1; 
  {
    try {
      result = (Mouse *)new Mouse((char const *)arg1);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_Mouse__SWIG_1() {
  void * jresult ;
  Mouse *result = 0 ;
  
  {
    try {
      result = (Mouse *)new Mouse();
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return 0; 
      };
    }
  }
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_Mouse(void * jarg1) {
  Mouse *arg1 = (Mouse *) 0 ;
  
  arg1 = (Mouse *)jarg1; 
  {
    try {
      delete arg1;
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Mouse_button(void * jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6) {
  Mouse *arg1 = (Mouse *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  arg1 = (Mouse *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  {
    try {
      (arg1)->button(arg2,arg3,arg4,arg5,arg6);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Mouse_motion(void * jarg1, int jarg2, int jarg3, int jarg4) {
  Mouse *arg1 = (Mouse *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (Mouse *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      (arg1)->motion(arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Mouse_passive(void * jarg1, int jarg2, int jarg3, int jarg4) {
  Mouse *arg1 = (Mouse *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  
  arg1 = (Mouse *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  {
    try {
      (arg1)->passive(arg2,arg3,arg4);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Mouse_entry(void * jarg1, int jarg2, int jarg3) {
  Mouse *arg1 = (Mouse *) 0 ;
  int arg2 ;
  int arg3 ;
  
  arg1 = (Mouse *)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      (arg1)->entry(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT void SWIGSTDCALL CSharp_Mouse_send_blobs(void * jarg1, double jarg2, double jarg3) {
  Mouse *arg1 = (Mouse *) 0 ;
  double arg2 ;
  double arg3 ;
  
  arg1 = (Mouse *)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      (arg1)->send_blobs(arg2,arg3);
    } catch (std::exception& e) {
      {
        SWIG_CSharpException(SWIG_RuntimeError, e.what()); return ; 
      };
    }
  }
}


SWIGEXPORT std::deque< BasicBlob > * SWIGSTDCALL CSharp_BlobHistory_SWIGUpcast(BlobHistory *jarg1) {
    return (std::deque< BasicBlob > *)jarg1;
}

SWIGEXPORT std::map< int,BlobHistory > * SWIGSTDCALL CSharp_BlobState_SWIGUpcast(BlobState *jarg1) {
    return (std::map< int,BlobHistory > *)jarg1;
}

SWIGEXPORT std::vector< BlobState > * SWIGSTDCALL CSharp_InputState_SWIGUpcast(InputState *jarg1) {
    return (std::vector< BlobState > *)jarg1;
}

SWIGEXPORT std::vector< SmartPtr< FeatureBase > > * SWIGSTDCALL CSharp_Gesture_SWIGUpcast(Gesture *jarg1) {
    return (std::vector< SmartPtr< FeatureBase > > *)jarg1;
}

SWIGEXPORT std::vector< Vector > * SWIGSTDCALL CSharp_Region_SWIGUpcast(Region *jarg1) {
    return (std::vector< Vector > *)jarg1;
}

SWIGEXPORT Region * SWIGSTDCALL CSharp_StateRegion_SWIGUpcast(StateRegion *jarg1) {
    return (Region *)jarg1;
}

SWIGEXPORT FeatureBase * SWIGSTDCALL CSharp_FeatureInt_SWIGUpcast(Feature< int > *jarg1) {
    return (FeatureBase *)jarg1;
}

SWIGEXPORT Feature< int > * SWIGSTDCALL CSharp_BlobCount_SWIGUpcast(BlobCount *jarg1) {
    return (Feature< int > *)jarg1;
}

SWIGEXPORT FeatureBase * SWIGSTDCALL CSharp_FeatureDimensions_SWIGUpcast(Feature< Dimensions > *jarg1) {
    return (FeatureBase *)jarg1;
}

SWIGEXPORT Feature< Dimensions > * SWIGSTDCALL CSharp_BlobDim_SWIGUpcast(BlobDim *jarg1) {
    return (Feature< Dimensions > *)jarg1;
}

SWIGEXPORT Feature< int > * SWIGSTDCALL CSharp_BlobID_SWIGUpcast(BlobID *jarg1) {
    return (Feature< int > *)jarg1;
}

SWIGEXPORT FeatureBase * SWIGSTDCALL CSharp_FeatureVector_SWIGUpcast(Feature< Vector > *jarg1) {
    return (FeatureBase *)jarg1;
}

SWIGEXPORT Feature< Vector > * SWIGSTDCALL CSharp_BlobPos_SWIGUpcast(BlobPos *jarg1) {
    return (Feature< Vector > *)jarg1;
}

SWIGEXPORT Feature< Vector > * SWIGSTDCALL CSharp_BlobGroup_SWIGUpcast(BlobGroup *jarg1) {
    return (Feature< Vector > *)jarg1;
}

SWIGEXPORT FeatureBase * SWIGSTDCALL CSharp_FeatureDouble_SWIGUpcast(Feature< double > *jarg1) {
    return (FeatureBase *)jarg1;
}

SWIGEXPORT Feature< Vector > * SWIGSTDCALL CSharp_Motion_SWIGUpcast(Motion *jarg1) {
    return (Feature< Vector > *)jarg1;
}

SWIGEXPORT Feature< double > * SWIGSTDCALL CSharp_Rotation_SWIGUpcast(Rotation *jarg1) {
    return (Feature< double > *)jarg1;
}

SWIGEXPORT Rotation * SWIGSTDCALL CSharp_MultiBlobRotation_SWIGUpcast(MultiBlobRotation *jarg1) {
    return (Rotation *)jarg1;
}

SWIGEXPORT Feature< double > * SWIGSTDCALL CSharp_Scale_SWIGUpcast(Scale *jarg1) {
    return (Feature< double > *)jarg1;
}

SWIGEXPORT Scale * SWIGSTDCALL CSharp_MultiBlobScale_SWIGUpcast(MultiBlobScale *jarg1) {
    return (Scale *)jarg1;
}

SWIGEXPORT Widget * SWIGSTDCALL CSharp_Label_SWIGUpcast(Label *jarg1) {
    return (Widget *)jarg1;
}

SWIGEXPORT Widget * SWIGSTDCALL CSharp_Button_SWIGUpcast(Button *jarg1) {
    return (Widget *)jarg1;
}

SWIGEXPORT Button * SWIGSTDCALL CSharp_Tile_SWIGUpcast(Tile *jarg1) {
    return (Button *)jarg1;
}

SWIGEXPORT Tile * SWIGSTDCALL CSharp_Container_SWIGUpcast(Container *jarg1) {
    return (Tile *)jarg1;
}

SWIGEXPORT Button * SWIGSTDCALL CSharp_Checkbox_SWIGUpcast(Checkbox *jarg1) {
    return (Button *)jarg1;
}

SWIGEXPORT Widget * SWIGSTDCALL CSharp_Textbox_SWIGUpcast(Textbox *jarg1) {
    return (Widget *)jarg1;
}

SWIGEXPORT Widget * SWIGSTDCALL CSharp_Slider_SWIGUpcast(Slider *jarg1) {
    return (Widget *)jarg1;
}

SWIGEXPORT Widget * SWIGSTDCALL CSharp_Dial_SWIGUpcast(Dial *jarg1) {
    return (Widget *)jarg1;
}

SWIGEXPORT Container * SWIGSTDCALL CSharp_MasterContainer_SWIGUpcast(MasterContainer *jarg1) {
    return (Container *)jarg1;
}

SWIGEXPORT GLUTWindow * SWIGSTDCALL CSharp_Window_SWIGUpcast(Window *jarg1) {
    return (GLUTWindow *)jarg1;
}

#ifdef __cplusplus
}
#endif

