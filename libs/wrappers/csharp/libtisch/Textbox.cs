/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class Textbox : Widget {
  private HandleRef swigCPtr;

  internal Textbox(IntPtr cPtr, bool cMemoryOwn) : base(libtischPINVOKE.TextboxUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Textbox obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Textbox() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          libtischPINVOKE.delete_Textbox(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public Textbox(int _w, int _h0, int _h1, int _x, int _y, double angle, RGBATexture _tex) : this(libtischPINVOKE.new_Textbox__SWIG_0(_w, _h0, _h1, _x, _y, angle, libtischPINVOKE.getCPtrAddRef(_tex)), true) {
    if (libtischPINVOKE.SWIGPendingException.Pending) throw libtischPINVOKE.SWIGPendingException.Retrieve();
  }

  public Textbox(int _w, int _h0, int _h1, int _x, int _y, double angle) : this(libtischPINVOKE.new_Textbox__SWIG_1(_w, _h0, _h1, _x, _y, angle), true) {
    if (libtischPINVOKE.SWIGPendingException.Pending) throw libtischPINVOKE.SWIGPendingException.Retrieve();
  }

  public Textbox(int _w, int _h0, int _h1, int _x, int _y) : this(libtischPINVOKE.new_Textbox__SWIG_2(_w, _h0, _h1, _x, _y), true) {
    if (libtischPINVOKE.SWIGPendingException.Pending) throw libtischPINVOKE.SWIGPendingException.Retrieve();
  }

  public Textbox(int _w, int _h0, int _h1, int _x) : this(libtischPINVOKE.new_Textbox__SWIG_3(_w, _h0, _h1, _x), true) {
    if (libtischPINVOKE.SWIGPendingException.Pending) throw libtischPINVOKE.SWIGPendingException.Retrieve();
  }

  public Textbox(int _w, int _h0, int _h1) : this(libtischPINVOKE.new_Textbox__SWIG_4(_w, _h0, _h1), true) {
    if (libtischPINVOKE.SWIGPendingException.Pending) throw libtischPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void draw() {
    libtischPINVOKE.Textbox_draw(swigCPtr);
    if (libtischPINVOKE.SWIGPendingException.Pending) throw libtischPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void action(Gesture gesture) {
    libtischPINVOKE.Textbox_action(swigCPtr, Gesture.getCPtr(gesture));
    if (libtischPINVOKE.SWIGPendingException.Pending) throw libtischPINVOKE.SWIGPendingException.Retrieve();
  }

  public string get() {
    string ret = libtischPINVOKE.Textbox_get(swigCPtr);
    if (libtischPINVOKE.SWIGPendingException.Pending) throw libtischPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void set(string _text) {
    libtischPINVOKE.Textbox_set(swigCPtr, _text);
    if (libtischPINVOKE.SWIGPendingException.Pending) throw libtischPINVOKE.SWIGPendingException.Retrieve();
  }

}
